

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Sep 18 22:53:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K20 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000D22                     __pidataCOMRAM:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for _lcdHeight
    67  000D22  0140               	dw	320
    68                           
    69                           ;initializer for _lcdWidth
    70  000D24  00F0               	dw	240
    71                           
    72                           ;initializer for _sndBuffer
    73  000D26  01                 	db	low STR_1
    74  000D27  06                 	db	high STR_1
    75  0000                     _TRISDbits	set	3989
    76  0000                     _TRISAbits	set	3986
    77  0000                     _LATDbits	set	3980
    78  0000                     _LATAbits	set	3977
    79  0000                     _ANSELH	set	3967
    80  0000                     _ANSEL	set	3966
    81  0000                     _OSCCON	set	4051
    82  0000                     _SSPBUF	set	4041
    83  0000                     _SSPCON1bits	set	4038
    84  0000                     _SSPSTATbits	set	4039
    85  0000                     _TRISCbits	set	3988
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	opt callstack 0
    90  000600  00                 	db	0
    91  000601                     STR_1:
    92  000601  48                 	db	72	;'H'
    93  000602  45                 	db	69	;'E'
    94  000603  4C                 	db	76	;'L'
    95  000604  4C                 	db	76	;'L'
    96  000605  4F                 	db	79	;'O'
    97  000606  20                 	db	32
    98  000607  57                 	db	87	;'W'
    99  000608  4F                 	db	79	;'O'
   100  000609  52                 	db	82	;'R'
   101  00060A  4C                 	db	76	;'L'
   102  00060B  44                 	db	68	;'D'
   103  00060C  21                 	db	33
   104  00060D  48                 	db	72	;'H'
   105  00060E  45                 	db	69	;'E'
   106  00060F  4C                 	db	76	;'L'
   107  000610  4C                 	db	76	;'L'
   108  000611  4F                 	db	79	;'O'
   109  000612  20                 	db	32
   110  000613  57                 	db	87	;'W'
   111  000614  4F                 	db	79	;'O'
   112  000615  52                 	db	82	;'R'
   113  000616  4C                 	db	76	;'L'
   114  000617  44                 	db	68	;'D'
   115  000618  21                 	db	33
   116  000619  0D                 	db	13
   117  00061A  0A                 	db	10
   118  00061B  00                 	db	0
   119                           
   120                           ; #config settings
   121  00061C  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  000C44                     __pcinit:
   125                           	opt callstack 0
   126  000C44                     start_initialization:
   127                           	opt callstack 0
   128  000C44                     __initialization:
   129                           	opt callstack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (6 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133  000C44  0E22               	movlw	low __pidataCOMRAM
   134  000C46  6EF6               	movwf	tblptrl,c
   135  000C48  0E0D               	movlw	high __pidataCOMRAM
   136  000C4A  6EF7               	movwf	tblptrh,c
   137  000C4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   138  000C4E  6EF8               	movwf	tblptru,c
   139  000C50  EE00  F03A         	lfsr	0,__pdataCOMRAM
   140  000C54  EE10 F006          	lfsr	1,6
   141  000C58                     copy_data0:
   142  000C58  0009               	tblrd		*+
   143  000C5A  CFF5 FFEE          	movff	tablat,postinc0
   144  000C5E  50E5               	movf	postdec1,w,c
   145  000C60  50E1               	movf	fsr1l,w,c
   146  000C62  E1FA               	bnz	copy_data0
   147                           
   148                           ; Clear objects allocated to COMRAM (31 bytes)
   149  000C64  EE00  F001         	lfsr	0,__pbssCOMRAM
   150  000C68  0E1F               	movlw	31
   151  000C6A                     clear_0:
   152  000C6A  6AEE               	clrf	postinc0,c
   153  000C6C  06E8               	decf	wreg,f,c
   154  000C6E  E1FD               	bnz	clear_0
   155  000C70                     end_of_initialization:
   156                           	opt callstack 0
   157  000C70                     __end_of__initialization:
   158                           	opt callstack 0
   159  000C70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  000C72  6EF8               	movwf	tblptru,c
   161  000C74  0100               	movlb	0
   162  000C76  EF63  F006         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165  000001                     __pbssCOMRAM:
   166                           	opt callstack 0
   167  000001                     _rcvBuffer:
   168                           	opt callstack 0
   169  000001                     	ds	30
   170  00001F                     _data:
   171                           	opt callstack 0
   172  00001F                     	ds	1
   173                           
   174                           	psect	dataCOMRAM
   175  00003A                     __pdataCOMRAM:
   176                           	opt callstack 0
   177  00003A                     _lcdHeight:
   178                           	opt callstack 0
   179  00003A                     	ds	2
   180  00003C                     _lcdWidth:
   181                           	opt callstack 0
   182  00003C                     	ds	2
   183  00003E                     _sndBuffer:
   184                           	opt callstack 0
   185  00003E                     	ds	2
   186                           
   187                           	psect	cstackCOMRAM
   188  000020                     __pcstackCOMRAM:
   189                           	opt callstack 0
   190  000020                     ??_LCD_Reset:
   191  000020                     ?___lmul:
   192                           	opt callstack 0
   193  000020                     ___lmul@multiplier:
   194                           	opt callstack 0
   195                           
   196                           ; 4 bytes @ 0x0
   197  000020                     	ds	1
   198  000021                     SPI_Tx@data:
   199                           	opt callstack 0
   200                           
   201                           ; 1 bytes @ 0x1
   202  000021                     	ds	1
   203  000022                     LCD_TxCmd@cmd:
   204                           	opt callstack 0
   205  000022                     LCD_TxData@data:
   206                           	opt callstack 0
   207  000022                     LCD_WriteReg@reg:
   208                           	opt callstack 0
   209                           
   210                           ; 2 bytes @ 0x2
   211  000022                     	ds	2
   212  000024                     LCD_WriteReg@data:
   213                           	opt callstack 0
   214  000024                     ___lmul@multiplicand:
   215                           	opt callstack 0
   216                           
   217                           ; 4 bytes @ 0x4
   218  000024                     	ds	2
   219  000026                     LCD_SetWindow@x0:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x6
   223  000026                     	ds	2
   224  000028                     LCD_SetWindow@y0:
   225                           	opt callstack 0
   226  000028                     ___lmul@product:
   227                           	opt callstack 0
   228                           
   229                           ; 4 bytes @ 0x8
   230  000028                     	ds	2
   231  00002A                     LCD_SetWindow@x1:
   232                           	opt callstack 0
   233                           
   234                           ; 2 bytes @ 0xA
   235  00002A                     	ds	2
   236  00002C                     LCD_SetWindow@y1:
   237                           	opt callstack 0
   238  00002C                     LCD_DrawColorBurst@color:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0xC
   242  00002C                     	ds	2
   243  00002E                     LCD_DrawColorBurst@size:
   244                           	opt callstack 0
   245                           
   246                           ; 4 bytes @ 0xE
   247  00002E                     	ds	4
   248  000032                     LCD_DrawColorBurst@i:
   249                           	opt callstack 0
   250                           
   251                           ; 4 bytes @ 0x12
   252  000032                     	ds	4
   253  000036                     LCD_FillScreen@color:
   254                           	opt callstack 0
   255                           
   256                           ; 2 bytes @ 0x16
   257  000036                     	ds	2
   258  000038                     ??_LCD_Init:
   259  000038                     
   260                           ; 1 bytes @ 0x18
   261  000038                     	ds	2
   262  00003A                     
   263                           ; 1 bytes @ 0x1A
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 11 in file "main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   283 ;;      Params:         0       0       0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0       0       0
   286 ;;      Totals:         0       0       0       0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels required when called:    5
   289 ;; This function calls:
   290 ;;		_LCD_Init
   291 ;;		_SPI_Init
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  000CC6                     __ptext0:
   299                           	opt callstack 0
   300  000CC6                     _main:
   301                           	opt callstack 26
   302                           
   303                           ;main.c: 13:     OSCCON = 0x72;
   304                           
   305                           ;incstack = 0
   306  000CC6  0E72               	movlw	114
   307  000CC8  6ED3               	movwf	4051,c	;volatile
   308                           
   309                           ;main.c: 15:     ANSEL = 0x0;
   310  000CCA  0E00               	movlw	0
   311  000CCC  6E7E               	movwf	3966,c	;volatile
   312                           
   313                           ;main.c: 16:     ANSELH = 0x0;
   314  000CCE  0E00               	movlw	0
   315  000CD0  6E7F               	movwf	3967,c	;volatile
   316                           
   317                           ;main.c: 18:     SPI_Init();
   318  000CD2  EC79  F006         	call	_SPI_Init	;wreg free
   319                           
   320                           ;main.c: 19:     LCD_Init();
   321  000CD6  EC0F  F003         	call	_LCD_Init	;wreg free
   322  000CDA                     l56:
   323                           
   324                           ;main.c: 25:     }
   325  000CDA  D7FF               	goto	l56
   326  000CDC                     __end_of_main:
   327                           	opt callstack 0
   328                           
   329 ;; *************** function _SPI_Init *****************
   330 ;; Defined at:
   331 ;;		line 3 in file "spi_master.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   345 ;;      Params:         0       0       0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text1
   359  000CF2                     __ptext1:
   360                           	opt callstack 0
   361  000CF2                     _SPI_Init:
   362                           	opt callstack 30
   363                           
   364                           ;spi_master.c: 4:     TRISCbits.RC3 = 0;
   365                           
   366                           ;incstack = 0
   367  000CF2  9694               	bcf	3988,3,c	;volatile
   368                           
   369                           ;spi_master.c: 5:     TRISCbits.RC4 = 1;
   370  000CF4  8894               	bsf	3988,4,c	;volatile
   371                           
   372                           ;spi_master.c: 6:     TRISCbits.RC5 = 0;
   373  000CF6  9A94               	bcf	3988,5,c	;volatile
   374                           
   375                           ;spi_master.c: 8:     SSPSTATbits.SMP = 0;
   376  000CF8  9EC7               	bcf	4039,7,c	;volatile
   377                           
   378                           ;spi_master.c: 9:     SSPSTATbits.CKE = 1;
   379  000CFA  8CC7               	bsf	4039,6,c	;volatile
   380                           
   381                           ;spi_master.c: 11:     SSPCON1bits.CKP = 0;
   382  000CFC  98C6               	bcf	4038,4,c	;volatile
   383                           
   384                           ;spi_master.c: 12:     SSPCON1bits.SSPM = 0;
   385  000CFE  0EF0               	movlw	-16
   386  000D00  16C6               	andwf	4038,f,c	;volatile
   387                           
   388                           ;spi_master.c: 13:     SSPCON1bits.SSPEN = 1;
   389  000D02  8AC6               	bsf	4038,5,c	;volatile
   390  000D04  0012               	return		;funcret
   391  000D06                     __end_of_SPI_Init:
   392                           	opt callstack 0
   393                           
   394 ;; *************** function _LCD_Init *****************
   395 ;; Defined at:
   396 ;;		line 54 in file "lcd_bd663474.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   410 ;;      Params:         0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0
   412 ;;      Temps:          2       0       0       0       0       0       0
   413 ;;      Totals:         2       0       0       0       0       0       0
   414 ;;Total ram usage:        2 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    4
   417 ;; This function calls:
   418 ;;		_LCD_Enable
   419 ;;		_LCD_FillScreen
   420 ;;		_LCD_Reset
   421 ;;		_LCD_WriteReg
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text2
   428  00061E                     __ptext2:
   429                           	opt callstack 0
   430  00061E                     _LCD_Init:
   431                           	opt callstack 26
   432                           
   433                           ;lcd_bd663474.c: 56:     TRISAbits.RA1 = 0;
   434                           
   435                           ;incstack = 0
   436  00061E  9292               	bcf	3986,1,c	;volatile
   437                           
   438                           ;lcd_bd663474.c: 57:     TRISAbits.RA2 = 0;
   439  000620  9492               	bcf	3986,2,c	;volatile
   440                           
   441                           ;lcd_bd663474.c: 58:     TRISDbits.RD0 = 0;
   442  000622  9095               	bcf	3989,0,c	;volatile
   443                           
   444                           ;lcd_bd663474.c: 59:     TRISAbits.RA4 = 0;
   445  000624  9892               	bcf	3986,4,c	;volatile
   446                           
   447                           ;lcd_bd663474.c: 60:     LATAbits.LATA4 = 1;
   448  000626  8889               	bsf	3977,4,c	;volatile
   449                           
   450                           ;lcd_bd663474.c: 62:  LCD_Enable();
   451  000628  EC94  F006         	call	_LCD_Enable	;wreg free
   452                           
   453                           ;lcd_bd663474.c: 63:  LCD_Reset();
   454  00062C  EC3D  F006         	call	_LCD_Reset	;wreg free
   455                           
   456                           ;lcd_bd663474.c: 65:  LCD_WriteReg(0x000, 0x0001);
   457  000630  0E00               	movlw	0
   458  000632  6E23               	movwf	LCD_WriteReg@reg+1,c
   459  000634  0E00               	movlw	0
   460  000636  6E22               	movwf	LCD_WriteReg@reg,c
   461  000638  0E00               	movlw	0
   462  00063A  6E25               	movwf	LCD_WriteReg@data+1,c
   463  00063C  0E01               	movlw	1
   464  00063E  6E24               	movwf	LCD_WriteReg@data,c
   465  000640  EC50  F006         	call	_LCD_WriteReg	;wreg free
   466                           
   467                           ;lcd_bd663474.c: 66:  _delay((unsigned long)((10)*(16000000/4000.0)));
   468  000644  0E34               	movlw	52
   469  000646  6E38               	movwf	??_LCD_Init& (0+255),c
   470  000648  0EF2               	movlw	242
   471  00064A                     u357:
   472  00064A  2EE8               	decfsz	wreg,f,c
   473  00064C  D7FE               	bra	u357
   474  00064E  2E38               	decfsz	??_LCD_Init& (0+255),f,c
   475  000650  D7FC               	bra	u357
   476                           
   477                           ;lcd_bd663474.c: 69:  LCD_WriteReg( 0x100, 0x0000 );
   478  000652  0E01               	movlw	1
   479  000654  6E23               	movwf	LCD_WriteReg@reg+1,c
   480  000656  0E00               	movlw	0
   481  000658  6E22               	movwf	LCD_WriteReg@reg,c
   482  00065A  0E00               	movlw	0
   483  00065C  6E25               	movwf	LCD_WriteReg@data+1,c
   484  00065E  0E00               	movlw	0
   485  000660  6E24               	movwf	LCD_WriteReg@data,c
   486  000662  EC50  F006         	call	_LCD_WriteReg	;wreg free
   487                           
   488                           ;lcd_bd663474.c: 70:  LCD_WriteReg( 0x101, 0x0000 );
   489  000666  0E01               	movlw	1
   490  000668  6E23               	movwf	LCD_WriteReg@reg+1,c
   491  00066A  0E01               	movlw	1
   492  00066C  6E22               	movwf	LCD_WriteReg@reg,c
   493  00066E  0E00               	movlw	0
   494  000670  6E25               	movwf	LCD_WriteReg@data+1,c
   495  000672  0E00               	movlw	0
   496  000674  6E24               	movwf	LCD_WriteReg@data,c
   497  000676  EC50  F006         	call	_LCD_WriteReg	;wreg free
   498                           
   499                           ;lcd_bd663474.c: 71:  LCD_WriteReg( 0x102, 0x3110 );
   500  00067A  0E01               	movlw	1
   501  00067C  6E23               	movwf	LCD_WriteReg@reg+1,c
   502  00067E  0E02               	movlw	2
   503  000680  6E22               	movwf	LCD_WriteReg@reg,c
   504  000682  0E31               	movlw	49
   505  000684  6E25               	movwf	LCD_WriteReg@data+1,c
   506  000686  0E10               	movlw	16
   507  000688  6E24               	movwf	LCD_WriteReg@data,c
   508  00068A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   509                           
   510                           ;lcd_bd663474.c: 72:  LCD_WriteReg( 0x103, 0xe200 );
   511  00068E  0E01               	movlw	1
   512  000690  6E23               	movwf	LCD_WriteReg@reg+1,c
   513  000692  0E03               	movlw	3
   514  000694  6E22               	movwf	LCD_WriteReg@reg,c
   515  000696  0EE2               	movlw	226
   516  000698  6E25               	movwf	LCD_WriteReg@data+1,c
   517  00069A  0E00               	movlw	0
   518  00069C  6E24               	movwf	LCD_WriteReg@data,c
   519  00069E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   520                           
   521                           ;lcd_bd663474.c: 73:  LCD_WriteReg( 0x110, 0x009d );
   522  0006A2  0E01               	movlw	1
   523  0006A4  6E23               	movwf	LCD_WriteReg@reg+1,c
   524  0006A6  0E10               	movlw	16
   525  0006A8  6E22               	movwf	LCD_WriteReg@reg,c
   526  0006AA  0E00               	movlw	0
   527  0006AC  6E25               	movwf	LCD_WriteReg@data+1,c
   528  0006AE  0E9D               	movlw	157
   529  0006B0  6E24               	movwf	LCD_WriteReg@data,c
   530  0006B2  EC50  F006         	call	_LCD_WriteReg	;wreg free
   531                           
   532                           ;lcd_bd663474.c: 74:  LCD_WriteReg( 0x111, 0x0022 );
   533  0006B6  0E01               	movlw	1
   534  0006B8  6E23               	movwf	LCD_WriteReg@reg+1,c
   535  0006BA  0E11               	movlw	17
   536  0006BC  6E22               	movwf	LCD_WriteReg@reg,c
   537  0006BE  0E00               	movlw	0
   538  0006C0  6E25               	movwf	LCD_WriteReg@data+1,c
   539  0006C2  0E22               	movlw	34
   540  0006C4  6E24               	movwf	LCD_WriteReg@data,c
   541  0006C6  EC50  F006         	call	_LCD_WriteReg	;wreg free
   542                           
   543                           ;lcd_bd663474.c: 75:  LCD_WriteReg( 0x100, 0x0120 );
   544  0006CA  0E01               	movlw	1
   545  0006CC  6E23               	movwf	LCD_WriteReg@reg+1,c
   546  0006CE  0E00               	movlw	0
   547  0006D0  6E22               	movwf	LCD_WriteReg@reg,c
   548  0006D2  0E01               	movlw	1
   549  0006D4  6E25               	movwf	LCD_WriteReg@data+1,c
   550  0006D6  0E20               	movlw	32
   551  0006D8  6E24               	movwf	LCD_WriteReg@data,c
   552  0006DA  EC50  F006         	call	_LCD_WriteReg	;wreg free
   553                           
   554                           ;lcd_bd663474.c: 76:  _delay((unsigned long)((20)*(16000000/4000.0)));
   555  0006DE  0E68               	movlw	104
   556  0006E0  6E38               	movwf	??_LCD_Init& (0+255),c
   557  0006E2  0EE4               	movlw	228
   558  0006E4                     u367:
   559  0006E4  2EE8               	decfsz	wreg,f,c
   560  0006E6  D7FE               	bra	u367
   561  0006E8  2E38               	decfsz	??_LCD_Init& (0+255),f,c
   562  0006EA  D7FC               	bra	u367
   563  0006EC  F000 F000          	nop2	
   564                           
   565                           ;lcd_bd663474.c: 77:     LCD_WriteReg( 0x100, 0x3120 );
   566  0006F0  0E01               	movlw	1
   567  0006F2  6E23               	movwf	LCD_WriteReg@reg+1,c
   568  0006F4  0E00               	movlw	0
   569  0006F6  6E22               	movwf	LCD_WriteReg@reg,c
   570  0006F8  0E31               	movlw	49
   571  0006FA  6E25               	movwf	LCD_WriteReg@data+1,c
   572  0006FC  0E20               	movlw	32
   573  0006FE  6E24               	movwf	LCD_WriteReg@data,c
   574  000700  EC50  F006         	call	_LCD_WriteReg	;wreg free
   575                           
   576                           ;lcd_bd663474.c: 78:  _delay((unsigned long)((80)*(16000000/4000.0)));
   577  000704  0E02               	movlw	2
   578  000706  6E39               	movwf	(??_LCD_Init+1)& (0+255),c
   579  000708  0EA0               	movlw	160
   580  00070A  6E38               	movwf	??_LCD_Init& (0+255),c
   581  00070C  0E92               	movlw	146
   582  00070E                     u377:
   583  00070E  2EE8               	decfsz	wreg,f,c
   584  000710  D7FE               	bra	u377
   585  000712  2E38               	decfsz	??_LCD_Init& (0+255),f,c
   586  000714  D7FC               	bra	u377
   587  000716  2E39               	decfsz	(??_LCD_Init+1)& (0+255),f,c
   588  000718  D7FA               	bra	u377
   589  00071A  F000 F000          	nop2	
   590                           
   591                           ;lcd_bd663474.c: 81:  LCD_WriteReg( 0x001, 0x0100 );
   592  00071E  0E00               	movlw	0
   593  000720  6E23               	movwf	LCD_WriteReg@reg+1,c
   594  000722  0E01               	movlw	1
   595  000724  6E22               	movwf	LCD_WriteReg@reg,c
   596  000726  0E01               	movlw	1
   597  000728  6E25               	movwf	LCD_WriteReg@data+1,c
   598  00072A  0E00               	movlw	0
   599  00072C  6E24               	movwf	LCD_WriteReg@data,c
   600  00072E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   601                           
   602                           ;lcd_bd663474.c: 82:  LCD_WriteReg( 0x002, 0x0000 );
   603  000732  0E00               	movlw	0
   604  000734  6E23               	movwf	LCD_WriteReg@reg+1,c
   605  000736  0E02               	movlw	2
   606  000738  6E22               	movwf	LCD_WriteReg@reg,c
   607  00073A  0E00               	movlw	0
   608  00073C  6E25               	movwf	LCD_WriteReg@data+1,c
   609  00073E  0E00               	movlw	0
   610  000740  6E24               	movwf	LCD_WriteReg@data,c
   611  000742  EC50  F006         	call	_LCD_WriteReg	;wreg free
   612                           
   613                           ;lcd_bd663474.c: 83:  LCD_WriteReg( 0x003, 0x1230 );
   614  000746  0E00               	movlw	0
   615  000748  6E23               	movwf	LCD_WriteReg@reg+1,c
   616  00074A  0E03               	movlw	3
   617  00074C  6E22               	movwf	LCD_WriteReg@reg,c
   618  00074E  0E12               	movlw	18
   619  000750  6E25               	movwf	LCD_WriteReg@data+1,c
   620  000752  0E30               	movlw	48
   621  000754  6E24               	movwf	LCD_WriteReg@data,c
   622  000756  EC50  F006         	call	_LCD_WriteReg	;wreg free
   623                           
   624                           ;lcd_bd663474.c: 84:  LCD_WriteReg( 0x006, 0x0000 );
   625  00075A  0E00               	movlw	0
   626  00075C  6E23               	movwf	LCD_WriteReg@reg+1,c
   627  00075E  0E06               	movlw	6
   628  000760  6E22               	movwf	LCD_WriteReg@reg,c
   629  000762  0E00               	movlw	0
   630  000764  6E25               	movwf	LCD_WriteReg@data+1,c
   631  000766  0E00               	movlw	0
   632  000768  6E24               	movwf	LCD_WriteReg@data,c
   633  00076A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   634                           
   635                           ;lcd_bd663474.c: 85:  LCD_WriteReg( 0x007, 0x0101 );
   636  00076E  0E00               	movlw	0
   637  000770  6E23               	movwf	LCD_WriteReg@reg+1,c
   638  000772  0E07               	movlw	7
   639  000774  6E22               	movwf	LCD_WriteReg@reg,c
   640  000776  0E01               	movlw	1
   641  000778  6E25               	movwf	LCD_WriteReg@data+1,c
   642  00077A  0E01               	movlw	1
   643  00077C  6E24               	movwf	LCD_WriteReg@data,c
   644  00077E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   645                           
   646                           ;lcd_bd663474.c: 86:  LCD_WriteReg( 0x008, 0x0808 );
   647  000782  0E00               	movlw	0
   648  000784  6E23               	movwf	LCD_WriteReg@reg+1,c
   649  000786  0E08               	movlw	8
   650  000788  6E22               	movwf	LCD_WriteReg@reg,c
   651  00078A  0E08               	movlw	8
   652  00078C  6E25               	movwf	LCD_WriteReg@data+1,c
   653  00078E  0E08               	movlw	8
   654  000790  6E24               	movwf	LCD_WriteReg@data,c
   655  000792  EC50  F006         	call	_LCD_WriteReg	;wreg free
   656                           
   657                           ;lcd_bd663474.c: 87:  LCD_WriteReg( 0x009, 0x0000 );
   658  000796  0E00               	movlw	0
   659  000798  6E23               	movwf	LCD_WriteReg@reg+1,c
   660  00079A  0E09               	movlw	9
   661  00079C  6E22               	movwf	LCD_WriteReg@reg,c
   662  00079E  0E00               	movlw	0
   663  0007A0  6E25               	movwf	LCD_WriteReg@data+1,c
   664  0007A2  0E00               	movlw	0
   665  0007A4  6E24               	movwf	LCD_WriteReg@data,c
   666  0007A6  EC50  F006         	call	_LCD_WriteReg	;wreg free
   667                           
   668                           ;lcd_bd663474.c: 88:  LCD_WriteReg( 0x00b, 0x0000 );
   669  0007AA  0E00               	movlw	0
   670  0007AC  6E23               	movwf	LCD_WriteReg@reg+1,c
   671  0007AE  0E0B               	movlw	11
   672  0007B0  6E22               	movwf	LCD_WriteReg@reg,c
   673  0007B2  0E00               	movlw	0
   674  0007B4  6E25               	movwf	LCD_WriteReg@data+1,c
   675  0007B6  0E00               	movlw	0
   676  0007B8  6E24               	movwf	LCD_WriteReg@data,c
   677  0007BA  EC50  F006         	call	_LCD_WriteReg	;wreg free
   678                           
   679                           ;lcd_bd663474.c: 89:  LCD_WriteReg( 0x00c, 0x0000 );
   680  0007BE  0E00               	movlw	0
   681  0007C0  6E23               	movwf	LCD_WriteReg@reg+1,c
   682  0007C2  0E0C               	movlw	12
   683  0007C4  6E22               	movwf	LCD_WriteReg@reg,c
   684  0007C6  0E00               	movlw	0
   685  0007C8  6E25               	movwf	LCD_WriteReg@data+1,c
   686  0007CA  0E00               	movlw	0
   687  0007CC  6E24               	movwf	LCD_WriteReg@data,c
   688  0007CE  EC50  F006         	call	_LCD_WriteReg	;wreg free
   689                           
   690                           ;lcd_bd663474.c: 90:  LCD_WriteReg( 0x00d, 0x0018 );
   691  0007D2  0E00               	movlw	0
   692  0007D4  6E23               	movwf	LCD_WriteReg@reg+1,c
   693  0007D6  0E0D               	movlw	13
   694  0007D8  6E22               	movwf	LCD_WriteReg@reg,c
   695  0007DA  0E00               	movlw	0
   696  0007DC  6E25               	movwf	LCD_WriteReg@data+1,c
   697  0007DE  0E18               	movlw	24
   698  0007E0  6E24               	movwf	LCD_WriteReg@data,c
   699  0007E2  EC50  F006         	call	_LCD_WriteReg	;wreg free
   700                           
   701                           ;lcd_bd663474.c: 93:  LCD_WriteReg( 0x012, 0x0000 );
   702  0007E6  0E00               	movlw	0
   703  0007E8  6E23               	movwf	LCD_WriteReg@reg+1,c
   704  0007EA  0E12               	movlw	18
   705  0007EC  6E22               	movwf	LCD_WriteReg@reg,c
   706  0007EE  0E00               	movlw	0
   707  0007F0  6E25               	movwf	LCD_WriteReg@data+1,c
   708  0007F2  0E00               	movlw	0
   709  0007F4  6E24               	movwf	LCD_WriteReg@data,c
   710  0007F6  EC50  F006         	call	_LCD_WriteReg	;wreg free
   711                           
   712                           ;lcd_bd663474.c: 94:  LCD_WriteReg( 0x013, 0x0000 );
   713  0007FA  0E00               	movlw	0
   714  0007FC  6E23               	movwf	LCD_WriteReg@reg+1,c
   715  0007FE  0E13               	movlw	19
   716  000800  6E22               	movwf	LCD_WriteReg@reg,c
   717  000802  0E00               	movlw	0
   718  000804  6E25               	movwf	LCD_WriteReg@data+1,c
   719  000806  0E00               	movlw	0
   720  000808  6E24               	movwf	LCD_WriteReg@data,c
   721  00080A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   722                           
   723                           ;lcd_bd663474.c: 95:  LCD_WriteReg( 0x018, 0x0000 );
   724  00080E  0E00               	movlw	0
   725  000810  6E23               	movwf	LCD_WriteReg@reg+1,c
   726  000812  0E18               	movlw	24
   727  000814  6E22               	movwf	LCD_WriteReg@reg,c
   728  000816  0E00               	movlw	0
   729  000818  6E25               	movwf	LCD_WriteReg@data+1,c
   730  00081A  0E00               	movlw	0
   731  00081C  6E24               	movwf	LCD_WriteReg@data,c
   732  00081E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   733                           
   734                           ;lcd_bd663474.c: 96:  LCD_WriteReg( 0x019, 0x0000 );
   735  000822  0E00               	movlw	0
   736  000824  6E23               	movwf	LCD_WriteReg@reg+1,c
   737  000826  0E19               	movlw	25
   738  000828  6E22               	movwf	LCD_WriteReg@reg,c
   739  00082A  0E00               	movlw	0
   740  00082C  6E25               	movwf	LCD_WriteReg@data+1,c
   741  00082E  0E00               	movlw	0
   742  000830  6E24               	movwf	LCD_WriteReg@data,c
   743  000832  EC50  F006         	call	_LCD_WriteReg	;wreg free
   744                           
   745                           ;lcd_bd663474.c: 97:  LCD_WriteReg( 0x203, 0x0000 );
   746  000836  0E02               	movlw	2
   747  000838  6E23               	movwf	LCD_WriteReg@reg+1,c
   748  00083A  0E03               	movlw	3
   749  00083C  6E22               	movwf	LCD_WriteReg@reg,c
   750  00083E  0E00               	movlw	0
   751  000840  6E25               	movwf	LCD_WriteReg@data+1,c
   752  000842  0E00               	movlw	0
   753  000844  6E24               	movwf	LCD_WriteReg@data,c
   754  000846  EC50  F006         	call	_LCD_WriteReg	;wreg free
   755                           
   756                           ;lcd_bd663474.c: 98:  LCD_WriteReg( 0x204, 0x0000 );
   757  00084A  0E02               	movlw	2
   758  00084C  6E23               	movwf	LCD_WriteReg@reg+1,c
   759  00084E  0E04               	movlw	4
   760  000850  6E22               	movwf	LCD_WriteReg@reg,c
   761  000852  0E00               	movlw	0
   762  000854  6E25               	movwf	LCD_WriteReg@data+1,c
   763  000856  0E00               	movlw	0
   764  000858  6E24               	movwf	LCD_WriteReg@data,c
   765  00085A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   766                           
   767                           ;lcd_bd663474.c: 101:  LCD_WriteReg( 0x210, 0x0000 );
   768  00085E  0E02               	movlw	2
   769  000860  6E23               	movwf	LCD_WriteReg@reg+1,c
   770  000862  0E10               	movlw	16
   771  000864  6E22               	movwf	LCD_WriteReg@reg,c
   772  000866  0E00               	movlw	0
   773  000868  6E25               	movwf	LCD_WriteReg@data+1,c
   774  00086A  0E00               	movlw	0
   775  00086C  6E24               	movwf	LCD_WriteReg@data,c
   776  00086E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   777                           
   778                           ;lcd_bd663474.c: 102:  LCD_WriteReg( 0x211, 0x00ef );
   779  000872  0E02               	movlw	2
   780  000874  6E23               	movwf	LCD_WriteReg@reg+1,c
   781  000876  0E11               	movlw	17
   782  000878  6E22               	movwf	LCD_WriteReg@reg,c
   783  00087A  0E00               	movlw	0
   784  00087C  6E25               	movwf	LCD_WriteReg@data+1,c
   785  00087E  0EEF               	movlw	239
   786  000880  6E24               	movwf	LCD_WriteReg@data,c
   787  000882  EC50  F006         	call	_LCD_WriteReg	;wreg free
   788                           
   789                           ;lcd_bd663474.c: 103:  LCD_WriteReg( 0x212, 0x0000 );
   790  000886  0E02               	movlw	2
   791  000888  6E23               	movwf	LCD_WriteReg@reg+1,c
   792  00088A  0E12               	movlw	18
   793  00088C  6E22               	movwf	LCD_WriteReg@reg,c
   794  00088E  0E00               	movlw	0
   795  000890  6E25               	movwf	LCD_WriteReg@data+1,c
   796  000892  0E00               	movlw	0
   797  000894  6E24               	movwf	LCD_WriteReg@data,c
   798  000896  EC50  F006         	call	_LCD_WriteReg	;wreg free
   799                           
   800                           ;lcd_bd663474.c: 104:  LCD_WriteReg( 0x213, 0x013f );
   801  00089A  0E02               	movlw	2
   802  00089C  6E23               	movwf	LCD_WriteReg@reg+1,c
   803  00089E  0E13               	movlw	19
   804  0008A0  6E22               	movwf	LCD_WriteReg@reg,c
   805  0008A2  0E01               	movlw	1
   806  0008A4  6E25               	movwf	LCD_WriteReg@data+1,c
   807  0008A6  0E3F               	movlw	63
   808  0008A8  6E24               	movwf	LCD_WriteReg@data,c
   809  0008AA  EC50  F006         	call	_LCD_WriteReg	;wreg free
   810                           
   811                           ;lcd_bd663474.c: 107:  LCD_WriteReg( 0x214, 0x0000 );
   812  0008AE  0E02               	movlw	2
   813  0008B0  6E23               	movwf	LCD_WriteReg@reg+1,c
   814  0008B2  0E14               	movlw	20
   815  0008B4  6E22               	movwf	LCD_WriteReg@reg,c
   816  0008B6  0E00               	movlw	0
   817  0008B8  6E25               	movwf	LCD_WriteReg@data+1,c
   818  0008BA  0E00               	movlw	0
   819  0008BC  6E24               	movwf	LCD_WriteReg@data,c
   820  0008BE  EC50  F006         	call	_LCD_WriteReg	;wreg free
   821                           
   822                           ;lcd_bd663474.c: 108:  LCD_WriteReg( 0x215, 0x0000 );
   823  0008C2  0E02               	movlw	2
   824  0008C4  6E23               	movwf	LCD_WriteReg@reg+1,c
   825  0008C6  0E15               	movlw	21
   826  0008C8  6E22               	movwf	LCD_WriteReg@reg,c
   827  0008CA  0E00               	movlw	0
   828  0008CC  6E25               	movwf	LCD_WriteReg@data+1,c
   829  0008CE  0E00               	movlw	0
   830  0008D0  6E24               	movwf	LCD_WriteReg@data,c
   831  0008D2  EC50  F006         	call	_LCD_WriteReg	;wreg free
   832                           
   833                           ;lcd_bd663474.c: 109:  LCD_WriteReg( 0x216, 0x0000 );
   834  0008D6  0E02               	movlw	2
   835  0008D8  6E23               	movwf	LCD_WriteReg@reg+1,c
   836  0008DA  0E16               	movlw	22
   837  0008DC  6E22               	movwf	LCD_WriteReg@reg,c
   838  0008DE  0E00               	movlw	0
   839  0008E0  6E25               	movwf	LCD_WriteReg@data+1,c
   840  0008E2  0E00               	movlw	0
   841  0008E4  6E24               	movwf	LCD_WriteReg@data,c
   842  0008E6  EC50  F006         	call	_LCD_WriteReg	;wreg free
   843                           
   844                           ;lcd_bd663474.c: 110:  LCD_WriteReg( 0x217, 0x0000 );
   845  0008EA  0E02               	movlw	2
   846  0008EC  6E23               	movwf	LCD_WriteReg@reg+1,c
   847  0008EE  0E17               	movlw	23
   848  0008F0  6E22               	movwf	LCD_WriteReg@reg,c
   849  0008F2  0E00               	movlw	0
   850  0008F4  6E25               	movwf	LCD_WriteReg@data+1,c
   851  0008F6  0E00               	movlw	0
   852  0008F8  6E24               	movwf	LCD_WriteReg@data,c
   853  0008FA  EC50  F006         	call	_LCD_WriteReg	;wreg free
   854                           
   855                           ;lcd_bd663474.c: 113:  LCD_WriteReg( 0x300, 0x5343);
   856  0008FE  0E03               	movlw	3
   857  000900  6E23               	movwf	LCD_WriteReg@reg+1,c
   858  000902  0E00               	movlw	0
   859  000904  6E22               	movwf	LCD_WriteReg@reg,c
   860  000906  0E53               	movlw	83
   861  000908  6E25               	movwf	LCD_WriteReg@data+1,c
   862  00090A  0E43               	movlw	67
   863  00090C  6E24               	movwf	LCD_WriteReg@data,c
   864  00090E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   865                           
   866                           ;lcd_bd663474.c: 114:  LCD_WriteReg( 0x301, 0x1021);
   867  000912  0E03               	movlw	3
   868  000914  6E23               	movwf	LCD_WriteReg@reg+1,c
   869  000916  0E01               	movlw	1
   870  000918  6E22               	movwf	LCD_WriteReg@reg,c
   871  00091A  0E10               	movlw	16
   872  00091C  6E25               	movwf	LCD_WriteReg@data+1,c
   873  00091E  0E21               	movlw	33
   874  000920  6E24               	movwf	LCD_WriteReg@data,c
   875  000922  EC50  F006         	call	_LCD_WriteReg	;wreg free
   876                           
   877                           ;lcd_bd663474.c: 115:  LCD_WriteReg( 0x302, 0x0003);
   878  000926  0E03               	movlw	3
   879  000928  6E23               	movwf	LCD_WriteReg@reg+1,c
   880  00092A  0E02               	movlw	2
   881  00092C  6E22               	movwf	LCD_WriteReg@reg,c
   882  00092E  0E00               	movlw	0
   883  000930  6E25               	movwf	LCD_WriteReg@data+1,c
   884  000932  0E03               	movlw	3
   885  000934  6E24               	movwf	LCD_WriteReg@data,c
   886  000936  EC50  F006         	call	_LCD_WriteReg	;wreg free
   887                           
   888                           ;lcd_bd663474.c: 116:  LCD_WriteReg( 0x303, 0x0011);
   889  00093A  0E03               	movlw	3
   890  00093C  6E23               	movwf	LCD_WriteReg@reg+1,c
   891  00093E  0E03               	movlw	3
   892  000940  6E22               	movwf	LCD_WriteReg@reg,c
   893  000942  0E00               	movlw	0
   894  000944  6E25               	movwf	LCD_WriteReg@data+1,c
   895  000946  0E11               	movlw	17
   896  000948  6E24               	movwf	LCD_WriteReg@data,c
   897  00094A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   898                           
   899                           ;lcd_bd663474.c: 117:  LCD_WriteReg( 0x304, 0x050a);
   900  00094E  0E03               	movlw	3
   901  000950  6E23               	movwf	LCD_WriteReg@reg+1,c
   902  000952  0E04               	movlw	4
   903  000954  6E22               	movwf	LCD_WriteReg@reg,c
   904  000956  0E05               	movlw	5
   905  000958  6E25               	movwf	LCD_WriteReg@data+1,c
   906  00095A  0E0A               	movlw	10
   907  00095C  6E24               	movwf	LCD_WriteReg@data,c
   908  00095E  EC50  F006         	call	_LCD_WriteReg	;wreg free
   909                           
   910                           ;lcd_bd663474.c: 118:  LCD_WriteReg( 0x305, 0x4342);
   911  000962  0E03               	movlw	3
   912  000964  6E23               	movwf	LCD_WriteReg@reg+1,c
   913  000966  0E05               	movlw	5
   914  000968  6E22               	movwf	LCD_WriteReg@reg,c
   915  00096A  0E43               	movlw	67
   916  00096C  6E25               	movwf	LCD_WriteReg@data+1,c
   917  00096E  0E42               	movlw	66
   918  000970  6E24               	movwf	LCD_WriteReg@data,c
   919  000972  EC50  F006         	call	_LCD_WriteReg	;wreg free
   920                           
   921                           ;lcd_bd663474.c: 119:  LCD_WriteReg( 0x306, 0x1100);
   922  000976  0E03               	movlw	3
   923  000978  6E23               	movwf	LCD_WriteReg@reg+1,c
   924  00097A  0E06               	movlw	6
   925  00097C  6E22               	movwf	LCD_WriteReg@reg,c
   926  00097E  0E11               	movlw	17
   927  000980  6E25               	movwf	LCD_WriteReg@data+1,c
   928  000982  0E00               	movlw	0
   929  000984  6E24               	movwf	LCD_WriteReg@data,c
   930  000986  EC50  F006         	call	_LCD_WriteReg	;wreg free
   931                           
   932                           ;lcd_bd663474.c: 120:  LCD_WriteReg( 0x307, 0x0003);
   933  00098A  0E03               	movlw	3
   934  00098C  6E23               	movwf	LCD_WriteReg@reg+1,c
   935  00098E  0E07               	movlw	7
   936  000990  6E22               	movwf	LCD_WriteReg@reg,c
   937  000992  0E00               	movlw	0
   938  000994  6E25               	movwf	LCD_WriteReg@data+1,c
   939  000996  0E03               	movlw	3
   940  000998  6E24               	movwf	LCD_WriteReg@data,c
   941  00099A  EC50  F006         	call	_LCD_WriteReg	;wreg free
   942                           
   943                           ;lcd_bd663474.c: 121:  LCD_WriteReg( 0x308, 0x1201);
   944  00099E  0E03               	movlw	3
   945  0009A0  6E23               	movwf	LCD_WriteReg@reg+1,c
   946  0009A2  0E08               	movlw	8
   947  0009A4  6E22               	movwf	LCD_WriteReg@reg,c
   948  0009A6  0E12               	movlw	18
   949  0009A8  6E25               	movwf	LCD_WriteReg@data+1,c
   950  0009AA  0E01               	movlw	1
   951  0009AC  6E24               	movwf	LCD_WriteReg@data,c
   952  0009AE  EC50  F006         	call	_LCD_WriteReg	;wreg free
   953                           
   954                           ;lcd_bd663474.c: 122:  LCD_WriteReg( 0x309, 0x050a);
   955  0009B2  0E03               	movlw	3
   956  0009B4  6E23               	movwf	LCD_WriteReg@reg+1,c
   957  0009B6  0E09               	movlw	9
   958  0009B8  6E22               	movwf	LCD_WriteReg@reg,c
   959  0009BA  0E05               	movlw	5
   960  0009BC  6E25               	movwf	LCD_WriteReg@data+1,c
   961  0009BE  0E0A               	movlw	10
   962  0009C0  6E24               	movwf	LCD_WriteReg@data,c
   963  0009C2  EC50  F006         	call	_LCD_WriteReg	;wreg free
   964                           
   965                           ;lcd_bd663474.c: 125:  LCD_WriteReg( 0x400, 0x4027 );
   966  0009C6  0E04               	movlw	4
   967  0009C8  6E23               	movwf	LCD_WriteReg@reg+1,c
   968  0009CA  0E00               	movlw	0
   969  0009CC  6E22               	movwf	LCD_WriteReg@reg,c
   970  0009CE  0E40               	movlw	64
   971  0009D0  6E25               	movwf	LCD_WriteReg@data+1,c
   972  0009D2  0E27               	movlw	39
   973  0009D4  6E24               	movwf	LCD_WriteReg@data,c
   974  0009D6  EC50  F006         	call	_LCD_WriteReg	;wreg free
   975                           
   976                           ;lcd_bd663474.c: 126:  LCD_WriteReg( 0x401, 0x0000 );
   977  0009DA  0E04               	movlw	4
   978  0009DC  6E23               	movwf	LCD_WriteReg@reg+1,c
   979  0009DE  0E01               	movlw	1
   980  0009E0  6E22               	movwf	LCD_WriteReg@reg,c
   981  0009E2  0E00               	movlw	0
   982  0009E4  6E25               	movwf	LCD_WriteReg@data+1,c
   983  0009E6  0E00               	movlw	0
   984  0009E8  6E24               	movwf	LCD_WriteReg@data,c
   985  0009EA  EC50  F006         	call	_LCD_WriteReg	;wreg free
   986                           
   987                           ;lcd_bd663474.c: 127:  LCD_WriteReg( 0x402, 0x0000 );
   988  0009EE  0E04               	movlw	4
   989  0009F0  6E23               	movwf	LCD_WriteReg@reg+1,c
   990  0009F2  0E02               	movlw	2
   991  0009F4  6E22               	movwf	LCD_WriteReg@reg,c
   992  0009F6  0E00               	movlw	0
   993  0009F8  6E25               	movwf	LCD_WriteReg@data+1,c
   994  0009FA  0E00               	movlw	0
   995  0009FC  6E24               	movwf	LCD_WriteReg@data,c
   996  0009FE  EC50  F006         	call	_LCD_WriteReg	;wreg free
   997                           
   998                           ;lcd_bd663474.c: 128:  LCD_WriteReg( 0x403, 0x013f );
   999  000A02  0E04               	movlw	4
  1000  000A04  6E23               	movwf	LCD_WriteReg@reg+1,c
  1001  000A06  0E03               	movlw	3
  1002  000A08  6E22               	movwf	LCD_WriteReg@reg,c
  1003  000A0A  0E01               	movlw	1
  1004  000A0C  6E25               	movwf	LCD_WriteReg@data+1,c
  1005  000A0E  0E3F               	movlw	63
  1006  000A10  6E24               	movwf	LCD_WriteReg@data,c
  1007  000A12  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1008                           
  1009                           ;lcd_bd663474.c: 129:  LCD_WriteReg( 0x404, 0x0000 );
  1010  000A16  0E04               	movlw	4
  1011  000A18  6E23               	movwf	LCD_WriteReg@reg+1,c
  1012  000A1A  0E04               	movlw	4
  1013  000A1C  6E22               	movwf	LCD_WriteReg@reg,c
  1014  000A1E  0E00               	movlw	0
  1015  000A20  6E25               	movwf	LCD_WriteReg@data+1,c
  1016  000A22  0E00               	movlw	0
  1017  000A24  6E24               	movwf	LCD_WriteReg@data,c
  1018  000A26  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1019                           
  1020                           ;lcd_bd663474.c: 132:  LCD_WriteReg( 0x200, 0x0000 );
  1021  000A2A  0E02               	movlw	2
  1022  000A2C  6E23               	movwf	LCD_WriteReg@reg+1,c
  1023  000A2E  0E00               	movlw	0
  1024  000A30  6E22               	movwf	LCD_WriteReg@reg,c
  1025  000A32  0E00               	movlw	0
  1026  000A34  6E25               	movwf	LCD_WriteReg@data+1,c
  1027  000A36  0E00               	movlw	0
  1028  000A38  6E24               	movwf	LCD_WriteReg@data,c
  1029  000A3A  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1030                           
  1031                           ;lcd_bd663474.c: 133:  LCD_WriteReg( 0x201, 0x0000 );
  1032  000A3E  0E02               	movlw	2
  1033  000A40  6E23               	movwf	LCD_WriteReg@reg+1,c
  1034  000A42  0E01               	movlw	1
  1035  000A44  6E22               	movwf	LCD_WriteReg@reg,c
  1036  000A46  0E00               	movlw	0
  1037  000A48  6E25               	movwf	LCD_WriteReg@data+1,c
  1038  000A4A  0E00               	movlw	0
  1039  000A4C  6E24               	movwf	LCD_WriteReg@data,c
  1040  000A4E  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1041                           
  1042                           ;lcd_bd663474.c: 135:  LCD_WriteReg( 0x100, 0x7120 );
  1043  000A52  0E01               	movlw	1
  1044  000A54  6E23               	movwf	LCD_WriteReg@reg+1,c
  1045  000A56  0E00               	movlw	0
  1046  000A58  6E22               	movwf	LCD_WriteReg@reg,c
  1047  000A5A  0E71               	movlw	113
  1048  000A5C  6E25               	movwf	LCD_WriteReg@data+1,c
  1049  000A5E  0E20               	movlw	32
  1050  000A60  6E24               	movwf	LCD_WriteReg@data,c
  1051  000A62  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1052                           
  1053                           ;lcd_bd663474.c: 136:  LCD_WriteReg( 0x007, 0x0103 );
  1054  000A66  0E00               	movlw	0
  1055  000A68  6E23               	movwf	LCD_WriteReg@reg+1,c
  1056  000A6A  0E07               	movlw	7
  1057  000A6C  6E22               	movwf	LCD_WriteReg@reg,c
  1058  000A6E  0E01               	movlw	1
  1059  000A70  6E25               	movwf	LCD_WriteReg@data+1,c
  1060  000A72  0E03               	movlw	3
  1061  000A74  6E24               	movwf	LCD_WriteReg@data,c
  1062  000A76  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1063                           
  1064                           ;lcd_bd663474.c: 137:  _delay((unsigned long)((10)*(16000000/4000.0)));
  1065  000A7A  0E34               	movlw	52
  1066  000A7C  6E38               	movwf	??_LCD_Init& (0+255),c
  1067  000A7E  0EF2               	movlw	242
  1068  000A80                     u387:
  1069  000A80  2EE8               	decfsz	wreg,f,c
  1070  000A82  D7FE               	bra	u387
  1071  000A84  2E38               	decfsz	??_LCD_Init& (0+255),f,c
  1072  000A86  D7FC               	bra	u387
  1073                           
  1074                           ;lcd_bd663474.c: 139:  LCD_WriteReg( 0x007, 0x0113 );
  1075  000A88  0E00               	movlw	0
  1076  000A8A  6E23               	movwf	LCD_WriteReg@reg+1,c
  1077  000A8C  0E07               	movlw	7
  1078  000A8E  6E22               	movwf	LCD_WriteReg@reg,c
  1079  000A90  0E01               	movlw	1
  1080  000A92  6E25               	movwf	LCD_WriteReg@data+1,c
  1081  000A94  0E13               	movlw	19
  1082  000A96  6E24               	movwf	LCD_WriteReg@data,c
  1083  000A98  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1084                           
  1085                           ;lcd_bd663474.c: 142:     LCD_FillScreen(0xFFE0);
  1086  000A9C  0EFF               	movlw	255
  1087  000A9E  6E37               	movwf	LCD_FillScreen@color+1,c
  1088  000AA0  0EE0               	movlw	224
  1089  000AA2  6E36               	movwf	LCD_FillScreen@color,c
  1090  000AA4  ECA5  F005         	call	_LCD_FillScreen	;wreg free
  1091                           
  1092                           ;lcd_bd663474.c: 143:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1093  000AA8  0E34               	movlw	52
  1094  000AAA  6E38               	movwf	??_LCD_Init& (0+255),c
  1095  000AAC  0EF2               	movlw	242
  1096  000AAE                     u397:
  1097  000AAE  2EE8               	decfsz	wreg,f,c
  1098  000AB0  D7FE               	bra	u397
  1099  000AB2  2E38               	decfsz	??_LCD_Init& (0+255),f,c
  1100  000AB4  D7FC               	bra	u397
  1101                           
  1102                           ;lcd_bd663474.c: 144:     LCD_FillScreen(0x07E0);
  1103  000AB6  0E07               	movlw	7
  1104  000AB8  6E37               	movwf	LCD_FillScreen@color+1,c
  1105  000ABA  0EE0               	movlw	224
  1106  000ABC  6E36               	movwf	LCD_FillScreen@color,c
  1107  000ABE  ECA5  F005         	call	_LCD_FillScreen	;wreg free
  1108  000AC2  0012               	return		;funcret
  1109  000AC4                     __end_of_LCD_Init:
  1110                           	opt callstack 0
  1111                           
  1112 ;; *************** function _LCD_Reset *****************
  1113 ;; Defined at:
  1114 ;;		line 38 in file "lcd_bd663474.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1128 ;;      Params:         0       0       0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0
  1130 ;;      Temps:          1       0       0       0       0       0       0
  1131 ;;      Totals:         1       0       0       0       0       0       0
  1132 ;;Total ram usage:        1 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_LCD_Init
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text3
  1142  000C7A                     __ptext3:
  1143                           	opt callstack 0
  1144  000C7A                     _LCD_Reset:
  1145                           	opt callstack 29
  1146                           
  1147                           ;lcd_bd663474.c: 40:  LATDbits.LATD0 = 0;
  1148                           
  1149                           ;incstack = 0
  1150  000C7A  908C               	bcf	3980,0,c	;volatile
  1151                           
  1152                           ;lcd_bd663474.c: 41:  _delay((unsigned long)((10)*(16000000/4000.0)));
  1153  000C7C  0E34               	movlw	52
  1154  000C7E  6E20               	movwf	??_LCD_Reset& (0+255),c
  1155  000C80  0EF2               	movlw	242
  1156  000C82                     u407:
  1157  000C82  2EE8               	decfsz	wreg,f,c
  1158  000C84  D7FE               	bra	u407
  1159  000C86  2E20               	decfsz	??_LCD_Reset& (0+255),f,c
  1160  000C88  D7FC               	bra	u407
  1161                           
  1162                           ;lcd_bd663474.c: 42:     LATDbits.LATD0 = 1;
  1163  000C8A  808C               	bsf	3980,0,c	;volatile
  1164                           
  1165                           ;lcd_bd663474.c: 43:  _delay((unsigned long)((10)*(16000000/4000.0)));
  1166  000C8C  0E34               	movlw	52
  1167  000C8E  6E20               	movwf	??_LCD_Reset& (0+255),c
  1168  000C90  0EF2               	movlw	242
  1169  000C92                     u417:
  1170  000C92  2EE8               	decfsz	wreg,f,c
  1171  000C94  D7FE               	bra	u417
  1172  000C96  2E20               	decfsz	??_LCD_Reset& (0+255),f,c
  1173  000C98  D7FC               	bra	u417
  1174                           
  1175                           ;lcd_bd663474.c: 45:     LATAbits.LATA2 = 1;
  1176  000C9A  8489               	bsf	3977,2,c	;volatile
  1177                           
  1178                           ;lcd_bd663474.c: 46:     LATAbits.LATA1 = 1;
  1179  000C9C  8289               	bsf	3977,1,c	;volatile
  1180  000C9E  0012               	return		;funcret
  1181  000CA0                     __end_of_LCD_Reset:
  1182                           	opt callstack 0
  1183                           
  1184 ;; *************** function _LCD_FillScreen *****************
  1185 ;; Defined at:
  1186 ;;		line 205 in file "lcd_bd663474.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  color           2   22[COMRAM] unsigned short 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         2       0       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         2       0       0       0       0       0       0
  1204 ;;Total ram usage:        2 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    3
  1207 ;; This function calls:
  1208 ;;		_LCD_DrawColorBurst
  1209 ;;		_LCD_SetWindow
  1210 ;;		___lmul
  1211 ;; This function is called by:
  1212 ;;		_LCD_Init
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text4
  1217  000B4A                     __ptext4:
  1218                           	opt callstack 0
  1219  000B4A                     _LCD_FillScreen:
  1220                           	opt callstack 26
  1221                           
  1222                           ;lcd_bd663474.c: 205: void LCD_FillScreen(uint16_t color);lcd_bd663474.c: 206: {;lcd_bd6
      +                          63474.c: 207:  LCD_SetWindow(0, 0, lcdWidth, lcdHeight);
  1223                           
  1224                           ;incstack = 0
  1225  000B4A  0E00               	movlw	0
  1226  000B4C  6E27               	movwf	LCD_SetWindow@x0+1,c
  1227  000B4E  0E00               	movlw	0
  1228  000B50  6E26               	movwf	LCD_SetWindow@x0,c
  1229  000B52  0E00               	movlw	0
  1230  000B54  6E29               	movwf	LCD_SetWindow@y0+1,c
  1231  000B56  0E00               	movlw	0
  1232  000B58  6E28               	movwf	LCD_SetWindow@y0,c
  1233  000B5A  C03C  F02A         	movff	_lcdWidth,LCD_SetWindow@x1	;volatile
  1234  000B5E  C03D  F02B         	movff	_lcdWidth+1,LCD_SetWindow@x1+1	;volatile
  1235  000B62  C03A  F02C         	movff	_lcdHeight,LCD_SetWindow@y1	;volatile
  1236  000B66  C03B  F02D         	movff	_lcdHeight+1,LCD_SetWindow@y1+1	;volatile
  1237  000B6A  EC62  F005         	call	_LCD_SetWindow	;wreg free
  1238                           
  1239                           ;lcd_bd663474.c: 208:  LCD_DrawColorBurst(color, ((uint32_t)lcdWidth*(uint32_t)lcdHeight
      +                          ));
  1240  000B6E  C036  F02C         	movff	LCD_FillScreen@color,LCD_DrawColorBurst@color
  1241  000B72  C037  F02D         	movff	LCD_FillScreen@color+1,LCD_DrawColorBurst@color+1
  1242  000B76  C03C  F020         	movff	_lcdWidth,___lmul@multiplier	;volatile
  1243  000B7A  C03D  F021         	movff	_lcdWidth+1,___lmul@multiplier+1	;volatile
  1244  000B7E  6A22               	clrf	___lmul@multiplier+2,c
  1245  000B80  6A23               	clrf	___lmul@multiplier+3,c
  1246  000B82  C03A  F024         	movff	_lcdHeight,___lmul@multiplicand	;volatile
  1247  000B86  C03B  F025         	movff	_lcdHeight+1,___lmul@multiplicand+1	;volatile
  1248  000B8A  6A26               	clrf	___lmul@multiplicand+2,c
  1249  000B8C  6A27               	clrf	___lmul@multiplicand+3,c
  1250  000B8E  ECD4  F005         	call	___lmul	;wreg free
  1251  000B92  C020  F02E         	movff	?___lmul,LCD_DrawColorBurst@size
  1252  000B96  C021  F02F         	movff	?___lmul+1,LCD_DrawColorBurst@size+1
  1253  000B9A  C022  F030         	movff	?___lmul+2,LCD_DrawColorBurst@size+2
  1254  000B9E  C023  F031         	movff	?___lmul+3,LCD_DrawColorBurst@size+3
  1255  000BA2  ECFF  F005         	call	_LCD_DrawColorBurst	;wreg free
  1256  000BA6  0012               	return		;funcret
  1257  000BA8                     __end_of_LCD_FillScreen:
  1258                           	opt callstack 0
  1259                           
  1260 ;; *************** function ___lmul *****************
  1261 ;; Defined at:
  1262 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  multiplier      4    0[COMRAM] unsigned long 
  1265 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  product         4    8[COMRAM] unsigned long 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  4    0[COMRAM] unsigned long 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1277 ;;      Params:         8       0       0       0       0       0       0
  1278 ;;      Locals:         4       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0
  1280 ;;      Totals:        12       0       0       0       0       0       0
  1281 ;;Total ram usage:       12 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_LCD_FillScreen
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text5
  1291  000BA8                     __ptext5:
  1292                           	opt callstack 0
  1293  000BA8                     ___lmul:
  1294                           	opt callstack 28
  1295                           
  1296                           ;incstack = 0
  1297  000BA8  0E00               	movlw	0
  1298  000BAA  6E28               	movwf	___lmul@product,c
  1299  000BAC  0E00               	movlw	0
  1300  000BAE  6E29               	movwf	___lmul@product+1,c
  1301  000BB0  0E00               	movlw	0
  1302  000BB2  6E2A               	movwf	___lmul@product+2,c
  1303  000BB4  0E00               	movlw	0
  1304  000BB6  6E2B               	movwf	___lmul@product+3,c
  1305  000BB8                     l1148:
  1306  000BB8  A020               	btfss	___lmul@multiplier,0,c
  1307  000BBA  D008               	goto	l1152
  1308  000BBC  5024               	movf	___lmul@multiplicand,w,c
  1309  000BBE  2628               	addwf	___lmul@product,f,c
  1310  000BC0  5025               	movf	___lmul@multiplicand+1,w,c
  1311  000BC2  2229               	addwfc	___lmul@product+1,f,c
  1312  000BC4  5026               	movf	___lmul@multiplicand+2,w,c
  1313  000BC6  222A               	addwfc	___lmul@product+2,f,c
  1314  000BC8  5027               	movf	___lmul@multiplicand+3,w,c
  1315  000BCA  222B               	addwfc	___lmul@product+3,f,c
  1316  000BCC                     l1152:
  1317  000BCC  90D8               	bcf	status,0,c
  1318  000BCE  3624               	rlcf	___lmul@multiplicand,f,c
  1319  000BD0  3625               	rlcf	___lmul@multiplicand+1,f,c
  1320  000BD2  3626               	rlcf	___lmul@multiplicand+2,f,c
  1321  000BD4  3627               	rlcf	___lmul@multiplicand+3,f,c
  1322  000BD6  90D8               	bcf	status,0,c
  1323  000BD8  3223               	rrcf	___lmul@multiplier+3,f,c
  1324  000BDA  3222               	rrcf	___lmul@multiplier+2,f,c
  1325  000BDC  3221               	rrcf	___lmul@multiplier+1,f,c
  1326  000BDE  3220               	rrcf	___lmul@multiplier,f,c
  1327  000BE0  5020               	movf	___lmul@multiplier,w,c
  1328  000BE2  1021               	iorwf	___lmul@multiplier+1,w,c
  1329  000BE4  1022               	iorwf	___lmul@multiplier+2,w,c
  1330  000BE6  1023               	iorwf	___lmul@multiplier+3,w,c
  1331  000BE8  A4D8               	btfss	status,2,c
  1332  000BEA  D7E6               	goto	l1148
  1333  000BEC  C028  F020         	movff	___lmul@product,?___lmul
  1334  000BF0  C029  F021         	movff	___lmul@product+1,?___lmul+1
  1335  000BF4  C02A  F022         	movff	___lmul@product+2,?___lmul+2
  1336  000BF8  C02B  F023         	movff	___lmul@product+3,?___lmul+3
  1337  000BFC  0012               	return		;funcret
  1338  000BFE                     __end_of___lmul:
  1339                           	opt callstack 0
  1340                           
  1341 ;; *************** function _LCD_SetWindow *****************
  1342 ;; Defined at:
  1343 ;;		line 176 in file "lcd_bd663474.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  x0              2    6[COMRAM] unsigned short 
  1346 ;;  y0              2    8[COMRAM] unsigned short 
  1347 ;;  x1              2   10[COMRAM] unsigned short 
  1348 ;;  y1              2   12[COMRAM] unsigned short 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         8       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0
  1363 ;;      Totals:         8       0       0       0       0       0       0
  1364 ;;Total ram usage:        8 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    2
  1367 ;; This function calls:
  1368 ;;		_LCD_TxCmd
  1369 ;;		_LCD_WriteReg
  1370 ;; This function is called by:
  1371 ;;		_LCD_FillScreen
  1372 ;;		_LCD_DrawPixel
  1373 ;;		_LCD_DrawRectangle
  1374 ;;		_LCD_DrawHLine
  1375 ;;		_LCD_DrawVLine
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text6
  1380  000AC4                     __ptext6:
  1381                           	opt callstack 0
  1382  000AC4                     _LCD_SetWindow:
  1383                           	opt callstack 26
  1384                           
  1385                           ;lcd_bd663474.c: 176: void LCD_SetWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t
      +                           y1);lcd_bd663474.c: 177: {;lcd_bd663474.c: 178:  LCD_WriteReg(0x210, x0);
  1386                           
  1387                           ;incstack = 0
  1388  000AC4  0E02               	movlw	2
  1389  000AC6  6E23               	movwf	LCD_WriteReg@reg+1,c
  1390  000AC8  0E10               	movlw	16
  1391  000ACA  6E22               	movwf	LCD_WriteReg@reg,c
  1392  000ACC  C026  F024         	movff	LCD_SetWindow@x0,LCD_WriteReg@data
  1393  000AD0  C027  F025         	movff	LCD_SetWindow@x0+1,LCD_WriteReg@data+1
  1394  000AD4  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1395                           
  1396                           ;lcd_bd663474.c: 179:     LCD_WriteReg(0x211, x1);
  1397  000AD8  0E02               	movlw	2
  1398  000ADA  6E23               	movwf	LCD_WriteReg@reg+1,c
  1399  000ADC  0E11               	movlw	17
  1400  000ADE  6E22               	movwf	LCD_WriteReg@reg,c
  1401  000AE0  C02A  F024         	movff	LCD_SetWindow@x1,LCD_WriteReg@data
  1402  000AE4  C02B  F025         	movff	LCD_SetWindow@x1+1,LCD_WriteReg@data+1
  1403  000AE8  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1404                           
  1405                           ;lcd_bd663474.c: 180:     LCD_WriteReg(0x212, y0);
  1406  000AEC  0E02               	movlw	2
  1407  000AEE  6E23               	movwf	LCD_WriteReg@reg+1,c
  1408  000AF0  0E12               	movlw	18
  1409  000AF2  6E22               	movwf	LCD_WriteReg@reg,c
  1410  000AF4  C028  F024         	movff	LCD_SetWindow@y0,LCD_WriteReg@data
  1411  000AF8  C029  F025         	movff	LCD_SetWindow@y0+1,LCD_WriteReg@data+1
  1412  000AFC  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1413                           
  1414                           ;lcd_bd663474.c: 181:     LCD_WriteReg(0x213, y1);
  1415  000B00  0E02               	movlw	2
  1416  000B02  6E23               	movwf	LCD_WriteReg@reg+1,c
  1417  000B04  0E13               	movlw	19
  1418  000B06  6E22               	movwf	LCD_WriteReg@reg,c
  1419  000B08  C02C  F024         	movff	LCD_SetWindow@y1,LCD_WriteReg@data
  1420  000B0C  C02D  F025         	movff	LCD_SetWindow@y1+1,LCD_WriteReg@data+1
  1421  000B10  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1422                           
  1423                           ;lcd_bd663474.c: 182:     LCD_WriteReg(0x200, x0);
  1424  000B14  0E02               	movlw	2
  1425  000B16  6E23               	movwf	LCD_WriteReg@reg+1,c
  1426  000B18  0E00               	movlw	0
  1427  000B1A  6E22               	movwf	LCD_WriteReg@reg,c
  1428  000B1C  C026  F024         	movff	LCD_SetWindow@x0,LCD_WriteReg@data
  1429  000B20  C027  F025         	movff	LCD_SetWindow@x0+1,LCD_WriteReg@data+1
  1430  000B24  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1431                           
  1432                           ;lcd_bd663474.c: 183:     LCD_WriteReg(0x201, y0);
  1433  000B28  0E02               	movlw	2
  1434  000B2A  6E23               	movwf	LCD_WriteReg@reg+1,c
  1435  000B2C  0E01               	movlw	1
  1436  000B2E  6E22               	movwf	LCD_WriteReg@reg,c
  1437  000B30  C028  F024         	movff	LCD_SetWindow@y0,LCD_WriteReg@data
  1438  000B34  C029  F025         	movff	LCD_SetWindow@y0+1,LCD_WriteReg@data+1
  1439  000B38  EC50  F006         	call	_LCD_WriteReg	;wreg free
  1440                           
  1441                           ;lcd_bd663474.c: 184:  LCD_TxCmd(0x202);
  1442  000B3C  0E02               	movlw	2
  1443  000B3E  6E23               	movwf	LCD_TxCmd@cmd+1,c
  1444  000B40  0E02               	movlw	2
  1445  000B42  6E22               	movwf	LCD_TxCmd@cmd,c
  1446  000B44  EC6E  F006         	call	_LCD_TxCmd	;wreg free
  1447  000B48  0012               	return		;funcret
  1448  000B4A                     __end_of_LCD_SetWindow:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _LCD_WriteReg *****************
  1452 ;; Defined at:
  1453 ;;		line 23 in file "lcd_bd663474.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  reg             2    2[COMRAM] unsigned short 
  1456 ;;  data            2    4[COMRAM] unsigned short 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         4       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0
  1471 ;;      Totals:         4       0       0       0       0       0       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		_SPI_Tx
  1477 ;; This function is called by:
  1478 ;;		_LCD_Init
  1479 ;;		_LCD_SetWindow
  1480 ;;		_LCD_SetRotation
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text7
  1485  000CA0                     __ptext7:
  1486                           	opt callstack 0
  1487  000CA0                     _LCD_WriteReg:
  1488                           	opt callstack 28
  1489                           
  1490                           ;lcd_bd663474.c: 23: static void LCD_WriteReg(uint16_t reg, uint16_t data);lcd_bd663474.
      +                          c: 24: {;lcd_bd663474.c: 25:     LATAbits.LATA2 = 0;
  1491                           
  1492                           ;incstack = 0
  1493  000CA0  9489               	bcf	3977,2,c	;volatile
  1494                           
  1495                           ;lcd_bd663474.c: 26:     LATAbits.LATA1 = 0;
  1496  000CA2  9289               	bcf	3977,1,c	;volatile
  1497                           
  1498                           ;lcd_bd663474.c: 27:  SPI_Tx((uint8_t)(reg >> 8));
  1499  000CA4  5023               	movf	LCD_WriteReg@reg+1,w,c
  1500  000CA6  EC8A  F006         	call	_SPI_Tx
  1501                           
  1502                           ;lcd_bd663474.c: 28:     SPI_Tx((uint8_t)(reg));
  1503  000CAA  5022               	movf	LCD_WriteReg@reg,w,c
  1504  000CAC  EC8A  F006         	call	_SPI_Tx
  1505                           
  1506                           ;lcd_bd663474.c: 29:     LATAbits.LATA1 = 1;
  1507  000CB0  8289               	bsf	3977,1,c	;volatile
  1508                           
  1509                           ;lcd_bd663474.c: 31:     LATAbits.LATA2 = 1;
  1510  000CB2  8489               	bsf	3977,2,c	;volatile
  1511                           
  1512                           ;lcd_bd663474.c: 32:     LATAbits.LATA1 = 0;
  1513  000CB4  9289               	bcf	3977,1,c	;volatile
  1514                           
  1515                           ;lcd_bd663474.c: 33:  SPI_Tx((uint8_t)(data >> 8));
  1516  000CB6  5025               	movf	LCD_WriteReg@data+1,w,c
  1517  000CB8  EC8A  F006         	call	_SPI_Tx
  1518                           
  1519                           ;lcd_bd663474.c: 34:     SPI_Tx((uint8_t)(data));
  1520  000CBC  5024               	movf	LCD_WriteReg@data,w,c
  1521  000CBE  EC8A  F006         	call	_SPI_Tx
  1522                           
  1523                           ;lcd_bd663474.c: 35:  LATAbits.LATA1 = 1;
  1524  000CC2  8289               	bsf	3977,1,c	;volatile
  1525  000CC4  0012               	return		;funcret
  1526  000CC6                     __end_of_LCD_WriteReg:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _LCD_TxCmd *****************
  1530 ;; Defined at:
  1531 ;;		line 7 in file "lcd_bd663474.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  cmd             2    2[COMRAM] unsigned short 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1545 ;;      Params:         2       0       0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0
  1548 ;;      Totals:         2       0       0       0       0       0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    1
  1552 ;; This function calls:
  1553 ;;		_SPI_Tx
  1554 ;; This function is called by:
  1555 ;;		_LCD_SetWindow
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text8
  1560  000CDC                     __ptext8:
  1561                           	opt callstack 0
  1562  000CDC                     _LCD_TxCmd:
  1563                           	opt callstack 26
  1564                           
  1565                           ;lcd_bd663474.c: 7: static void LCD_TxCmd(uint16_t cmd);lcd_bd663474.c: 8: {;lcd_bd66347
      +                          4.c: 9:     LATAbits.LATA2 = 0;
  1566                           
  1567                           ;incstack = 0
  1568  000CDC  9489               	bcf	3977,2,c	;volatile
  1569                           
  1570                           ;lcd_bd663474.c: 10:     LATAbits.LATA1 = 0;
  1571  000CDE  9289               	bcf	3977,1,c	;volatile
  1572                           
  1573                           ;lcd_bd663474.c: 11:  SPI_Tx((uint8_t)(cmd >> 8));
  1574  000CE0  5023               	movf	LCD_TxCmd@cmd+1,w,c
  1575  000CE2  EC8A  F006         	call	_SPI_Tx
  1576                           
  1577                           ;lcd_bd663474.c: 12:     SPI_Tx((uint8_t)(cmd));
  1578  000CE6  5022               	movf	LCD_TxCmd@cmd,w,c
  1579  000CE8  EC8A  F006         	call	_SPI_Tx
  1580                           
  1581                           ;lcd_bd663474.c: 13:  LATAbits.LATA1 = 1;
  1582  000CEC  8289               	bsf	3977,1,c	;volatile
  1583                           
  1584                           ;lcd_bd663474.c: 14:     LATAbits.LATA2 = 1;
  1585  000CEE  8489               	bsf	3977,2,c	;volatile
  1586  000CF0  0012               	return		;funcret
  1587  000CF2                     __end_of_LCD_TxCmd:
  1588                           	opt callstack 0
  1589                           
  1590 ;; *************** function _LCD_DrawColorBurst *****************
  1591 ;; Defined at:
  1592 ;;		line 194 in file "lcd_bd663474.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  color           2   12[COMRAM] unsigned short 
  1595 ;;  size            4   14[COMRAM] unsigned long 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  i               4   18[COMRAM] unsigned long 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1607 ;;      Params:         6       0       0       0       0       0       0
  1608 ;;      Locals:         4       0       0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0
  1610 ;;      Totals:        10       0       0       0       0       0       0
  1611 ;;Total ram usage:       10 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    2
  1614 ;; This function calls:
  1615 ;;		_LCD_TxData
  1616 ;; This function is called by:
  1617 ;;		_LCD_FillScreen
  1618 ;;		_LCD_DrawRectangle
  1619 ;;		_LCD_DrawHLine
  1620 ;;		_LCD_DrawVLine
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text9
  1625  000BFE                     __ptext9:
  1626                           	opt callstack 0
  1627  000BFE                     _LCD_DrawColorBurst:
  1628                           	opt callstack 26
  1629                           
  1630                           ;lcd_bd663474.c: 194: void LCD_DrawColorBurst(uint16_t color, uint32_t size);lcd_bd66347
      +                          4.c: 195: {;lcd_bd663474.c: 196:     LATAbits.LATA2 = 1;
  1631                           
  1632                           ;incstack = 0
  1633  000BFE  8489               	bsf	3977,2,c	;volatile
  1634                           
  1635                           ;lcd_bd663474.c: 197:     LATAbits.LATA1 = 0;
  1636  000C00  9289               	bcf	3977,1,c	;volatile
  1637                           
  1638                           ;lcd_bd663474.c: 198:  for(uint32_t i = 0; i < size; i++)
  1639  000C02  0E00               	movlw	0
  1640  000C04  6E32               	movwf	LCD_DrawColorBurst@i,c
  1641  000C06  0E00               	movlw	0
  1642  000C08  6E33               	movwf	LCD_DrawColorBurst@i+1,c
  1643  000C0A  0E00               	movlw	0
  1644  000C0C  6E34               	movwf	LCD_DrawColorBurst@i+2,c
  1645  000C0E  0E00               	movlw	0
  1646  000C10  6E35               	movwf	LCD_DrawColorBurst@i+3,c
  1647  000C12  D00C               	goto	l1144
  1648  000C14                     l1140:
  1649                           
  1650                           ;lcd_bd663474.c: 199:     {;lcd_bd663474.c: 200:         LCD_TxData(color);
  1651  000C14  C02C  F022         	movff	LCD_DrawColorBurst@color,LCD_TxData@data
  1652  000C18  C02D  F023         	movff	LCD_DrawColorBurst@color+1,LCD_TxData@data+1
  1653  000C1C  EC83  F006         	call	_LCD_TxData	;wreg free
  1654                           
  1655                           ;lcd_bd663474.c: 201:     }
  1656  000C20  0E01               	movlw	1
  1657  000C22  2632               	addwf	LCD_DrawColorBurst@i,f,c
  1658  000C24  0E00               	movlw	0
  1659  000C26  2233               	addwfc	LCD_DrawColorBurst@i+1,f,c
  1660  000C28  2234               	addwfc	LCD_DrawColorBurst@i+2,f,c
  1661  000C2A  2235               	addwfc	LCD_DrawColorBurst@i+3,f,c
  1662  000C2C                     l1144:
  1663  000C2C  502E               	movf	LCD_DrawColorBurst@size,w,c
  1664  000C2E  5C32               	subwf	LCD_DrawColorBurst@i,w,c
  1665  000C30  502F               	movf	LCD_DrawColorBurst@size+1,w,c
  1666  000C32  5833               	subwfb	LCD_DrawColorBurst@i+1,w,c
  1667  000C34  5030               	movf	LCD_DrawColorBurst@size+2,w,c
  1668  000C36  5834               	subwfb	LCD_DrawColorBurst@i+2,w,c
  1669  000C38  5031               	movf	LCD_DrawColorBurst@size+3,w,c
  1670  000C3A  5835               	subwfb	LCD_DrawColorBurst@i+3,w,c
  1671  000C3C  A0D8               	btfss	status,0,c
  1672  000C3E  D7EA               	goto	l1140
  1673                           
  1674                           ;lcd_bd663474.c: 202:     LATAbits.LATA1 = 1;
  1675  000C40  8289               	bsf	3977,1,c	;volatile
  1676  000C42  0012               	return		;funcret
  1677  000C44                     __end_of_LCD_DrawColorBurst:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _LCD_TxData *****************
  1681 ;; Defined at:
  1682 ;;		line 17 in file "lcd_bd663474.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  data            2    2[COMRAM] unsigned short 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         2       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         2       0       0       0       0       0       0
  1700 ;;Total ram usage:        2 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		_SPI_Tx
  1705 ;; This function is called by:
  1706 ;;		_LCD_DrawColorBurst
  1707 ;;		_LCD_DrawColor
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text10
  1712  000D06                     __ptext10:
  1713                           	opt callstack 0
  1714  000D06                     _LCD_TxData:
  1715                           	opt callstack 26
  1716                           
  1717                           ;lcd_bd663474.c: 17: static void LCD_TxData(uint16_t data);lcd_bd663474.c: 18: {;lcd_bd6
      +                          63474.c: 19:  SPI_Tx((uint8_t)(data >> 8));
  1718                           
  1719                           ;incstack = 0
  1720  000D06  5023               	movf	LCD_TxData@data+1,w,c
  1721  000D08  EC8A  F006         	call	_SPI_Tx
  1722                           
  1723                           ;lcd_bd663474.c: 20:     SPI_Tx((uint8_t)(data));
  1724  000D0C  5022               	movf	LCD_TxData@data,w,c
  1725  000D0E  EC8A  F006         	call	_SPI_Tx
  1726  000D12  0012               	return		;funcret
  1727  000D14                     __end_of_LCD_TxData:
  1728                           	opt callstack 0
  1729                           
  1730 ;; *************** function _SPI_Tx *****************
  1731 ;; Defined at:
  1732 ;;		line 22 in file "spi_master.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  data            1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  data            1    1[COMRAM] unsigned char 
  1737 ;;  dummy           1    0        unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1747 ;;      Params:         0       0       0       0       0       0       0
  1748 ;;      Locals:         2       0       0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0
  1750 ;;      Totals:         2       0       0       0       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_LCD_TxCmd
  1757 ;;		_LCD_TxData
  1758 ;;		_LCD_WriteReg
  1759 ;;		_SPI_TxBuffer
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text11
  1764  000D14                     __ptext11:
  1765                           	opt callstack 0
  1766  000D14                     _SPI_Tx:
  1767                           	opt callstack 28
  1768                           
  1769                           ;incstack = 0
  1770                           ;SPI_Tx@data stored from wreg
  1771  000D14  6E21               	movwf	SPI_Tx@data,c
  1772                           
  1773                           ;spi_master.c: 23:     uint8_t dummy;;spi_master.c: 24:     SSPBUF = data;
  1774  000D16  C021  FFC9         	movff	SPI_Tx@data,4041	;volatile
  1775  000D1A                     l20:
  1776  000D1A  A0C7               	btfss	4039,0,c	;volatile
  1777  000D1C  D7FE               	goto	l20
  1778  000D1E  50C9               	movf	4041,w,c	;volatile
  1779  000D20  0012               	return		;funcret
  1780  000D22                     __end_of_SPI_Tx:
  1781                           	opt callstack 0
  1782                           
  1783 ;; *************** function _LCD_Enable *****************
  1784 ;; Defined at:
  1785 ;;		line 49 in file "lcd_bd663474.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		None
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1799 ;;      Params:         0       0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_LCD_Init
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text12
  1813  000D28                     __ptext12:
  1814                           	opt callstack 0
  1815  000D28                     _LCD_Enable:
  1816                           	opt callstack 29
  1817                           
  1818                           ;lcd_bd663474.c: 51:  LATDbits.LATD0 = 1;
  1819                           
  1820                           ;incstack = 0
  1821  000D28  808C               	bsf	3980,0,c	;volatile
  1822  000D2A  0012               	return		;funcret
  1823  000D2C                     __end_of_LCD_Enable:
  1824                           	opt callstack 0
  1825                           
  1826                           	psect	rparam
  1827  0000                     tosu	equ	0xFFF
  1828                           tosh	equ	0xFFE
  1829                           tosl	equ	0xFFD
  1830                           stkptr	equ	0xFFC
  1831                           pclatu	equ	0xFFB
  1832                           pclath	equ	0xFFA
  1833                           pcl	equ	0xFF9
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           indf0	equ	0xFEF
  1841                           postinc0	equ	0xFEE
  1842                           postdec0	equ	0xFED
  1843                           preinc0	equ	0xFEC
  1844                           plusw0	equ	0xFEB
  1845                           fsr0h	equ	0xFEA
  1846                           fsr0l	equ	0xFE9
  1847                           wreg	equ	0xFE8
  1848                           indf1	equ	0xFE7
  1849                           postinc1	equ	0xFE6
  1850                           postdec1	equ	0xFE5
  1851                           preinc1	equ	0xFE4
  1852                           plusw1	equ	0xFE3
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           bsr	equ	0xFE0
  1856                           indf2	equ	0xFDF
  1857                           postinc2	equ	0xFDE
  1858                           postdec2	equ	0xFDD
  1859                           preinc2	equ	0xFDC
  1860                           plusw2	equ	0xFDB
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8


Data Sizes:
    Strings     27
    Constant    0
    Data        6
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sndBuffer	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[27]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_FillScreen
    _LCD_FillScreen->_LCD_DrawColorBurst
    _LCD_SetWindow->_LCD_WriteReg
    _LCD_WriteReg->_SPI_Tx
    _LCD_TxCmd->_SPI_Tx
    _LCD_DrawColorBurst->___lmul
    _LCD_TxData->_SPI_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22576
                           _LCD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0   22576
                                             24 COMRAM     2     2      0
                         _LCD_Enable
                     _LCD_FillScreen
                          _LCD_Reset
                       _LCD_WriteReg
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_FillScreen                                       2     0      2   12897
                                             22 COMRAM     2     0      2
                 _LCD_DrawColorBurst
                      _LCD_SetWindow
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _LCD_SetWindow                                        8     0      8   11466
                                              6 COMRAM     8     0      8
                          _LCD_TxCmd
                       _LCD_WriteReg
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteReg                                         4     0      4    9679
                                              2 COMRAM     4     0      4
                             _SPI_Tx
 ---------------------------------------------------------------------------------
 (4) _LCD_TxCmd                                            2     0      2     135
                                              2 COMRAM     2     0      2
                             _SPI_Tx
 ---------------------------------------------------------------------------------
 (3) _LCD_DrawColorBurst                                  10     4      6     887
                                             12 COMRAM    10     4      6
                         _LCD_TxData
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _LCD_TxData                                           2     0      2     211
                                              2 COMRAM     2     0      2
                             _SPI_Tx
 ---------------------------------------------------------------------------------
 (3) _SPI_Tx                                               2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Enable
     _LCD_FillScreen
       _LCD_DrawColorBurst
         _LCD_TxData
           _SPI_Tx
         ___lmul (ARG)
       _LCD_SetWindow
         _LCD_TxCmd
           _SPI_Tx
         _LCD_WriteReg
           _SPI_Tx
       ___lmul
     _LCD_Reset
     _LCD_WriteReg
       _SPI_Tx
   _SPI_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      3F       1       66.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      15        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Sep 18 22:53:57 2019

                ?_LCD_Enable 0020       __end_of_LCD_FillScreen 0BA8                  _SSPSTATbits 000FC7  
                ?_LCD_TxData 0022                           l20 0D1A                           l56 0CDA  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                 __CFG_CPB$OFF 000000                          u407 0C82  
                        u417 0C92                 __CFG_CPD$OFF 000000                          u357 064A  
                        u367 06E4                          u377 070E                          u387 0A80  
                        u397 0AAE                _LCD_SetWindow 0AC4                 __CFG_BORV$18 000000  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                         l1140 0C14  
                       l1144 0C2C                         l1152 0BCC                         l1148 0BB8  
                       STR_1 0601                         _data 001F                         _main 0CC6  
                       fsr1l 000FE1           __size_of_LCD_TxCmd 0016           __size_of_LCD_Reset 0026  
                       start 0000                __CFG_IESO$OFF 000000                ?_LCD_WriteReg 0022  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000              ?_LCD_FillScreen 0036  
           __end_of_LCD_Init 0AC4                        ?_main 0020               ?_LCD_SetWindow 0026  
                      _ANSEL 000F7E                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000          ___lmul@multiplicand 0024  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000          __size_of_LCD_Enable 0004             __end_of_SPI_Init 0D06  
             __CFG_BOREN$OFF 000000                        tablat 000FF5          __size_of_LCD_TxData 000E  
                      status 000FD8               __CFG_HFOFST$ON 000000               __CFG_PBADEN$ON 000000  
             ??_LCD_WriteReg 0026              __initialization 0C44                 __end_of_main 0CDC  
        LCD_DrawColorBurst@i 0032                       ??_main 003A                 LCD_TxCmd@cmd 0022  
              __activetblptr 000002            __end_of_LCD_TxCmd 0CF2            __end_of_LCD_Reset 0CA0  
                     _ANSELH 000F7F               __CFG_WDTEN$OFF 000000                       _OSCCON 000FD3  
                     _SSPBUF 000FC9                       _SPI_Tx 0D14               __CFG_XINST$OFF 000000  
                     ___lmul 0BA8               __CFG_STVREN$ON 000000       LCD_DrawColorBurst@size 002E  
            ??_LCD_SetWindow 002E                       clear_0 0C6A           _LCD_DrawColorBurst 0BFE  
           LCD_WriteReg@data 0024                 __pdataCOMRAM 003A                 __mediumconst 0000  
                     tblptrh 000FF7          ?_LCD_DrawColorBurst 002C                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 0C70  
                  ?_LCD_Init 0020                ___rparam_used 000001         ??_LCD_DrawColorBurst 0032  
             __pcstackCOMRAM 0020                 ??_LCD_Enable 0020              LCD_SetWindow@x0 0026  
            LCD_SetWindow@x1 002A              LCD_SetWindow@y0 0028              LCD_SetWindow@y1 002C  
               ??_LCD_TxData 0024                    ?_SPI_Init 0020         __end_of_LCD_WriteReg 0CC6  
         __end_of_LCD_Enable 0D2C                   ??_LCD_Init 0038           __end_of_LCD_TxData 0D14  
                    ?_SPI_Tx 0020             ??_LCD_FillScreen 0038                      ?___lmul 0020  
             ___lmul@product 0028                   ??_SPI_Init 0020              __size_of_SPI_Tx 000E  
                    __Hparam 0000                      __Lparam 0000              __size_of___lmul 0056  
               __psmallconst 0600                      __pcinit 0C44                      __ramtop 0600  
                    __ptext0 0CC6                      __ptext1 0CF2                      __ptext2 061E  
                    __ptext3 0C7A                      __ptext4 0B4A                      __ptext5 0BA8  
                    __ptext6 0AC4                      __ptext7 0CA0                      __ptext8 0CDC  
                    __ptext9 0BFE      LCD_DrawColorBurst@color 002C                    _LCD_TxCmd 0CDC  
                  _LCD_Reset 0C7A         end_of_initialization 0C70                __Lmediumconst 0000  
                    postdec1 000FE5                      postinc0 000FEE        __size_of_LCD_WriteReg 0026  
                  _TRISAbits 000F92                    _TRISCbits 000F94                    _TRISDbits 000F95  
                 ?_LCD_TxCmd 0022                   ?_LCD_Reset 0020               __end_of_SPI_Tx 0D22  
          __size_of_LCD_Init 04A6                 _LCD_WriteReg 0CA0               __end_of___lmul 0BFE  
              __pidataCOMRAM 0D22        __end_of_LCD_SetWindow 0B4A            __size_of_SPI_Init 0014  
        start_initialization 0C44                     ??_SPI_Tx 0020  __size_of_LCD_DrawColorBurst 0046  
                   ??___lmul 0028             __CFG_LPT1OSC$OFF 000000              LCD_WriteReg@reg 0022  
             LCD_TxData@data 0022                  __pbssCOMRAM 0001                  ??_LCD_TxCmd 0024  
                ??_LCD_Reset 0020            __CFG_CCP2MX$PORTC 000000                    _lcdHeight 003A  
                __smallconst 0600                    _rcvBuffer 0001                     _LCD_Init 061E  
                   _LATAbits 000F89                     _LATDbits 000F8C                    _sndBuffer 003E  
           __CFG_WDTPS$32768 000000      __size_of_LCD_FillScreen 005E                     _SPI_Init 0CF2  
          ___lmul@multiplier 0020                    copy_data0 0C58                   SPI_Tx@data 0021  
                   __Hrparam 0000                     __Lrparam 0000                     __ptext10 0D06  
                   __ptext11 0D14                     __ptext12 0D28                     _lcdWidth 003C  
              __size_of_main 0016                   _LCD_Enable 0D28          LCD_FillScreen@color 0036  
                 _LCD_TxData 0D06   __end_of_LCD_DrawColorBurst 0C44       __size_of_LCD_SetWindow 0086  
             _LCD_FillScreen 0B4A                  _SSPCON1bits 000FC6            __CFG_FOSC$INTIO67 000000  
