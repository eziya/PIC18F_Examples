

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Oct 12 10:51:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F45K20 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  000C4C                     __pidataCOMRAM:
    81                           	opt callstack 0
    82                           
    83                           ;initializer for stoa@F1131
    84  000C4C  28                 	db	40
    85  000C4D  6E                 	db	110
    86  000C4E  75                 	db	117
    87  000C4F  6C                 	db	108
    88  000C50  6C                 	db	108
    89  000C51  29                 	db	41
    90  000C52  00                 	db	0
    91                           
    92                           	psect	nvCOMRAM
    93  00004A                     __pnvCOMRAM:
    94                           	opt callstack 0
    95  00004A                     _EUSART_ErrorHandler:
    96                           	opt callstack 0
    97  00004A                     	ds	2
    98  00004C                     _EUSART_OverrunErrorHandler:
    99                           	opt callstack 0
   100  00004C                     	ds	2
   101  00004E                     _EUSART_FramingErrorHandler:
   102                           	opt callstack 0
   103  00004E                     	ds	2
   104  000050                     _EUSART_RxDefaultInterruptHandler:
   105                           	opt callstack 0
   106  000050                     	ds	2
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _WPUB	set	3964
   109  0000                     _ANSELH	set	3967
   110  0000                     _ANSEL	set	3966
   111  0000                     _TRISD	set	3989
   112  0000                     _TRISC	set	3988
   113  0000                     _TRISB	set	3987
   114  0000                     _TRISA	set	3986
   115  0000                     _TRISE	set	3990
   116  0000                     _LATC	set	3979
   117  0000                     _LATB	set	3978
   118  0000                     _LATA	set	3977
   119  0000                     _LATD	set	3980
   120  0000                     _LATE	set	3981
   121  0000                     _OSCTUNE	set	3995
   122  0000                     _OSCCON	set	4051
   123  0000                     _RCONbits	set	4048
   124  0000                     _LATBbits	set	3978
   125  0000                     _INTCONbits	set	4082
   126  0000                     _RCREG	set	4014
   127  0000                     _TXREG	set	4013
   128  0000                     _PIR1bits	set	3998
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _BAUDCONbits	set	4024
   132  0000                     _TXSTAbits	set	4012
   133  0000                     _TRISCbits	set	3988
   134  0000                     _PIE1bits	set	3997
   135                           
   136                           	psect	smallconst
   137  000600                     __psmallconst:
   138                           	opt callstack 0
   139  000600  00                 	db	0
   140  000601                     STR_1:
   141  000601  23                 	db	35
   142  000602  23                 	db	35
   143  000603  23                 	db	35
   144  000604  20                 	db	32
   145  000605  25                 	db	37
   146  000606  73                 	db	115	;'s'
   147  000607  20                 	db	32
   148  000608  43                 	db	67	;'C'
   149  000609  52                 	db	82	;'R'
   150  00060A  4C                 	db	76	;'L'
   151  00060B  46                 	db	70	;'F'
   152  00060C  20                 	db	32
   153  00060D  52                 	db	82	;'R'
   154  00060E  65                 	db	101	;'e'
   155  00060F  63                 	db	99	;'c'
   156  000610  65                 	db	101	;'e'
   157  000611  69                 	db	105	;'i'
   158  000612  76                 	db	118	;'v'
   159  000613  65                 	db	101	;'e'
   160  000614  64                 	db	100	;'d'
   161  000615  2E                 	db	46
   162  000616  2E                 	db	46
   163  000617  2E                 	db	46
   164  000618  0D                 	db	13
   165  000619  0A                 	db	10
   166  00061A  00                 	db	0
   167  00061B                     STR_2:
   168  00061B  50                 	db	80	;'P'
   169  00061C  49                 	db	73	;'I'
   170  00061D  43                 	db	67	;'C'
   171  00061E  31                 	db	49	;'1'
   172  00061F  38                 	db	56	;'8'
   173  000620  46                 	db	70	;'F'
   174  000621  00                 	db	0
   175                           
   176                           ; #config settings
   177  000622  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           	psect	cinit
   180  000A9E                     __pcinit:
   181                           	opt callstack 0
   182  000A9E                     start_initialization:
   183                           	opt callstack 0
   184  000A9E                     __initialization:
   185                           	opt callstack 0
   186                           
   187                           ; Initialize objects allocated to COMRAM (7 bytes)
   188                           ; load TBLPTR registers with __pidataCOMRAM
   189  000A9E  0E4C               	movlw	low __pidataCOMRAM
   190  000AA0  6EF6               	movwf	tblptrl,c
   191  000AA2  0E0C               	movlw	high __pidataCOMRAM
   192  000AA4  6EF7               	movwf	tblptrh,c
   193  000AA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   194  000AA8  6EF8               	movwf	tblptru,c
   195  000AAA  EE00  F052         	lfsr	0,__pdataCOMRAM
   196  000AAE  EE10 F007          	lfsr	1,7
   197  000AB2                     copy_data0:
   198  000AB2  0009               	tblrd		*+
   199  000AB4  CFF5 FFEE          	movff	tablat,postinc0
   200  000AB8  50E5               	movf	postdec1,w,c
   201  000ABA  50E1               	movf	fsr1l,w,c
   202  000ABC  E1FA               	bnz	copy_data0
   203                           
   204                           ; Clear objects allocated to BANK0 (96 bytes)
   205  000ABE  EE00  F060         	lfsr	0,__pbssBANK0
   206  000AC2  0E60               	movlw	96
   207  000AC4                     clear_0:
   208  000AC4  6AEE               	clrf	postinc0,c
   209  000AC6  06E8               	decf	wreg,f,c
   210  000AC8  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to COMRAM (13 bytes)
   213  000ACA  EE00  F03D         	lfsr	0,__pbssCOMRAM
   214  000ACE  0E0D               	movlw	13
   215  000AD0                     clear_1:
   216  000AD0  6AEE               	clrf	postinc0,c
   217  000AD2  06E8               	decf	wreg,f,c
   218  000AD4  E1FD               	bnz	clear_1
   219  000AD6                     end_of_initialization:
   220                           	opt callstack 0
   221  000AD6                     __end_of__initialization:
   222                           	opt callstack 0
   223  000AD6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224  000AD8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225  000ADA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226  000ADC  6EF8               	movwf	tblptru,c
   227  000ADE  0100               	movlb	0
   228  000AE0  EF27  F005         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231  00003D                     __pbssCOMRAM:
   232                           	opt callstack 0
   233  00003D                     _nout:
   234                           	opt callstack 0
   235  00003D                     	ds	2
   236  00003F                     _width:
   237                           	opt callstack 0
   238  00003F                     	ds	2
   239  000041                     _prec:
   240                           	opt callstack 0
   241  000041                     	ds	2
   242  000043                     _flags:
   243                           	opt callstack 0
   244  000043                     	ds	2
   245  000045                     _eusartRxLastError:
   246                           	opt callstack 0
   247  000045                     	ds	1
   248  000046                     _eusartRxCount:
   249                           	opt callstack 0
   250  000046                     	ds	1
   251  000047                     _eusartRxTail:
   252                           	opt callstack 0
   253  000047                     	ds	1
   254  000048                     _eusartRxHead:
   255                           	opt callstack 0
   256  000048                     	ds	1
   257  000049                     _uartFlag:
   258                           	opt callstack 0
   259  000049                     	ds	1
   260                           
   261                           	psect	dataCOMRAM
   262  000052                     __pdataCOMRAM:
   263                           	opt callstack 0
   264  000052                     stoa@F1131:
   265                           	opt callstack 0
   266  000052                     	ds	7
   267                           
   268                           	psect	bssBANK0
   269  000060                     __pbssBANK0:
   270                           	opt callstack 0
   271  000060                     	ds	32
   272  000080                     _eusartRxStatusBuffer:
   273                           	opt callstack 0
   274  000080                     	ds	32
   275  0000A0                     _eusartRxBuffer:
   276                           	opt callstack 0
   277  0000A0                     	ds	32
   278                           
   279                           	psect	cstackBANK0
   280  0000C0                     __pcstackBANK0:
   281                           	opt callstack 0
   282  0000C0                     	ds	2
   283  0000C2                     printf@ap:
   284                           	opt callstack 0
   285                           
   286                           ; 2 bytes @ 0x2
   287  0000C2                     	ds	2
   288                           
   289                           	psect	cstackCOMRAM
   290  000001                     __pcstackCOMRAM:
   291                           	opt callstack 0
   292  000001                     ??_INTERRUPT_InterruptManager:
   293                           
   294                           ; 1 bytes @ 0x0
   295  000001                     	ds	4
   296  000005                     ?_strlen:
   297                           	opt callstack 0
   298  000005                     EUSART_Read@readValue:
   299                           	opt callstack 0
   300  000005                     EUSART_Write@txData:
   301                           	opt callstack 0
   302  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   303                           	opt callstack 0
   304  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   305                           	opt callstack 0
   306  000005                     EUSART_SetErrorHandler@interruptHandler:
   307                           	opt callstack 0
   308  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   309                           	opt callstack 0
   310  000005                     strlen@s:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0x4
   314  000005                     	ds	1
   315  000006                     putch@txData:
   316                           	opt callstack 0
   317                           
   318                           ; 1 bytes @ 0x5
   319  000006                     	ds	1
   320  000007                     fputc@c:
   321                           	opt callstack 0
   322  000007                     strlen@a:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x6
   326  000007                     	ds	2
   327  000009                     fputc@fp:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x8
   331  000009                     	ds	2
   332  00000B                     ??_fputc:
   333                           
   334                           ; 1 bytes @ 0xA
   335  00000B                     	ds	5
   336  000010                     ?_stoa:
   337                           	opt callstack 0
   338  000010                     stoa@fp:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0xF
   342  000010                     	ds	2
   343  000012                     stoa@s:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x11
   347  000012                     	ds	2
   348  000014                     ??_stoa:
   349                           
   350                           ; 1 bytes @ 0x13
   351  000014                     	ds	1
   352  000015                     stoa@nuls:
   353                           	opt callstack 0
   354                           
   355                           ; 7 bytes @ 0x14
   356  000015                     	ds	7
   357  00001C                     stoa@i:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x1B
   361  00001C                     	ds	2
   362  00001E                     stoa@w:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x1D
   366  00001E                     	ds	2
   367  000020                     stoa@cp:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x1F
   371  000020                     	ds	2
   372  000022                     stoa@p:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x21
   376  000022                     	ds	2
   377  000024                     stoa@l:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x23
   381  000024                     	ds	2
   382  000026                     ?_vfpfcnvrt:
   383                           	opt callstack 0
   384  000026                     vfpfcnvrt@fp:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x25
   388  000026                     	ds	2
   389  000028                     vfpfcnvrt@fmt:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x27
   393  000028                     	ds	2
   394  00002A                     vfpfcnvrt@ap:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x29
   398  00002A                     	ds	2
   399  00002C                     ??_vfpfcnvrt:
   400                           
   401                           ; 1 bytes @ 0x2B
   402  00002C                     	ds	2
   403  00002E                     vfpfcnvrt@cp:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x2D
   407  00002E                     	ds	2
   408  000030                     ?_vfprintf:
   409                           	opt callstack 0
   410  000030                     vfprintf@fp:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x2F
   414  000030                     	ds	2
   415  000032                     vfprintf@fmt:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x31
   419  000032                     	ds	2
   420  000034                     vfprintf@ap:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x33
   424  000034                     	ds	2
   425  000036                     vfprintf@cfmt:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x35
   429  000036                     	ds	2
   430  000038                     ?_printf:
   431                           	opt callstack 0
   432  000038                     printf@fmt:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x37
   436  000038                     	ds	4
   437  00003C                     ??_main:
   438                           
   439                           ; 1 bytes @ 0x3B
   440  00003C                     	ds	1
   441                           
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 52 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   461 ;;      Params:         0       0       0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0
   463 ;;      Temps:          1       0       0       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels required when called:   11
   467 ;; This function calls:
   468 ;;		_EUSART_Read
   469 ;;		_EUSART_Write
   470 ;;		_SYSTEM_Initialize
   471 ;;		_printf
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text0
   478  000A4E                     __ptext0:
   479                           	opt callstack 0
   480  000A4E                     _main:
   481                           	opt callstack 20
   482                           
   483                           ;main.c: 55:     SYSTEM_Initialize();
   484                           
   485                           ;incstack = 0
   486  000A4E  ECF9  F005         	call	_SYSTEM_Initialize	;wreg free
   487                           
   488                           ;main.c: 62:     (INTCONbits.GIE = 1);
   489  000A52  8EF2               	bsf	4082,7,c	;volatile
   490                           
   491                           ;main.c: 68:     (INTCONbits.PEIE = 1);
   492  000A54  8CF2               	bsf	4082,6,c	;volatile
   493  000A56                     l1707:
   494                           
   495                           ;main.c: 74:     {;main.c: 76:         if(uartFlag)
   496  000A56  5049               	movf	_uartFlag,w,c
   497  000A58  B4D8               	btfsc	status,2,c
   498  000A5A  D7FD               	goto	l1707
   499                           
   500                           ;main.c: 77:         {;main.c: 78:             uartFlag = 0;
   501  000A5C  0E00               	movlw	0
   502  000A5E  6E49               	movwf	_uartFlag,c
   503                           
   504                           ;main.c: 79:             printf("### %s CRLF Received...\r\n", "PIC18F");
   505  000A60  0E01               	movlw	low STR_1
   506  000A62  6E38               	movwf	printf@fmt,c
   507  000A64  0E06               	movlw	high STR_1
   508  000A66  6E39               	movwf	printf@fmt+1,c
   509  000A68  0E1B               	movlw	low STR_2
   510  000A6A  6E3A               	movwf	?_printf+2,c
   511  000A6C  0E06               	movlw	high STR_2
   512  000A6E  6E3B               	movwf	?_printf+3,c
   513  000A70  ECE5  F005         	call	_printf	;wreg free
   514  000A74  A08A               	btfss	3978,0,c	;volatile
   515  000A76  D002               	goto	u1030
   516  000A78  0E01               	movlw	1
   517  000A7A  D001               	goto	u1036
   518  000A7C                     u1030:
   519  000A7C  0E00               	movlw	0
   520  000A7E                     u1036:
   521  000A7E  0AFF               	xorlw	255
   522  000A80  6E3C               	movwf	??_main& (0+255),c
   523  000A82  508A               	movf	3978,w,c	;volatile
   524  000A84  183C               	xorwf	??_main,w,c
   525  000A86  0BFE               	andlw	-2
   526  000A88  183C               	xorwf	??_main,w,c
   527  000A8A  6E8A               	movwf	3978,c	;volatile
   528  000A8C  D004               	goto	l1717
   529  000A8E                     l1715:
   530                           
   531                           ;main.c: 83:             {;main.c: 84:                 EUSART_Write(EUSART_Read());
   532  000A8E  EC93  F005         	call	_EUSART_Read	;wreg free
   533  000A92  EC02  F006         	call	_EUSART_Write
   534  000A96                     l1717:
   535                           
   536                           ;main.c: 82:             while(eusartRxCount > 0)
   537  000A96  5046               	movf	_eusartRxCount,w,c	;volatile
   538  000A98  B4D8               	btfsc	status,2,c
   539  000A9A  D7DD               	goto	l1707
   540  000A9C  D7F8               	goto	l1715
   541  000A9E                     __end_of_main:
   542                           	opt callstack 0
   543                           
   544 ;; *************** function _printf *****************
   545 ;; Defined at:
   546 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  fmt             2   55[COMRAM] PTR const unsigned char 
   549 ;;		 -> STR_1(26), 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  ap              2    2[BANK0 ] PTR void [1]
   552 ;;		 -> ?_printf(2), 
   553 ;;  ret             2    0        int 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  2   55[COMRAM] int 
   556 ;; Registers used:
   557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   563 ;;      Params:         4       0       0       0       0       0       0
   564 ;;      Locals:         0       4       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0
   566 ;;      Totals:         4       4       0       0       0       0       0
   567 ;;Total ram usage:        8 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:   10
   570 ;; This function calls:
   571 ;;		_vfprintf
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  000BCA                     __ptext1:
   579                           	opt callstack 0
   580  000BCA                     _printf:
   581                           	opt callstack 20
   582                           
   583                           ;incstack = 0
   584  000BCA  0E3A               	movlw	low (?_printf+2)
   585  000BCC  0100               	movlb	0	; () banked
   586  000BCE  6FC2               	movwf	printf@ap& (0+255),b
   587  000BD0  0E00               	movlw	high (?_printf+2)
   588  000BD2  6FC3               	movwf	(printf@ap+1)& (0+255),b
   589                           
   590                           ; BSR set to: 0
   591  000BD4  0E00               	movlw	0
   592  000BD6  6E30               	movwf	vfprintf@fp,c
   593  000BD8  0E00               	movlw	0
   594  000BDA  6E31               	movwf	vfprintf@fp+1,c
   595  000BDC  C038  F032         	movff	printf@fmt,vfprintf@fmt
   596  000BE0  C039  F033         	movff	printf@fmt+1,vfprintf@fmt+1
   597  000BE4  0EC2               	movlw	low printf@ap
   598  000BE6  6E34               	movwf	vfprintf@ap,c
   599  000BE8  0E00               	movlw	high printf@ap
   600  000BEA  6E35               	movwf	vfprintf@ap+1,c
   601  000BEC  ECFE  F004         	call	_vfprintf	;wreg free
   602  000BF0  0012               	return		;funcret
   603  000BF2                     __end_of_printf:
   604                           	opt callstack 0
   605                           
   606 ;; *************** function _vfprintf *****************
   607 ;; Defined at:
   608 ;;		line 1368 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
   611 ;;		 -> NULL(0), 
   612 ;;  fmt             2   49[COMRAM] PTR const unsigned char 
   613 ;;		 -> STR_1(26), 
   614 ;;  ap              2   51[COMRAM] PTR PTR void 
   615 ;;		 -> printf@ap(2), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  cfmt            2   53[COMRAM] PTR unsigned char 
   618 ;;		 -> STR_1(26), 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2   47[COMRAM] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   628 ;;      Params:         6       0       0       0       0       0       0
   629 ;;      Locals:         2       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0
   631 ;;      Totals:         8       0       0       0       0       0       0
   632 ;;Total ram usage:        8 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    9
   635 ;; This function calls:
   636 ;;		_vfpfcnvrt
   637 ;; This function is called by:
   638 ;;		_printf
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text2
   643  0009FC                     __ptext2:
   644                           	opt callstack 0
   645  0009FC                     _vfprintf:
   646                           	opt callstack 20
   647                           
   648                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);D:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;D:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   649                           
   650                           ;incstack = 0
   651  0009FC  C032  F036         	movff	vfprintf@fmt,vfprintf@cfmt
   652  000A00  C033  F037         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   653                           
   654                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   655  000A04  0E00               	movlw	0
   656  000A06  6E3E               	movwf	_nout+1,c
   657  000A08  0E00               	movlw	0
   658  000A0A  6E3D               	movwf	_nout,c
   659                           
   660                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   661  000A0C  D012               	goto	l1693
   662  000A0E                     l1691:
   663                           
   664                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   665  000A0E  C030  F026         	movff	vfprintf@fp,vfpfcnvrt@fp
   666  000A12  C031  F027         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   667  000A16  0E36               	movlw	low vfprintf@cfmt
   668  000A18  6E28               	movwf	vfpfcnvrt@fmt,c
   669  000A1A  0E00               	movlw	high vfprintf@cfmt
   670  000A1C  6E29               	movwf	vfpfcnvrt@fmt+1,c
   671  000A1E  C034  F02A         	movff	vfprintf@ap,vfpfcnvrt@ap
   672  000A22  C035  F02B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   673  000A26  ECB1  F003         	call	_vfpfcnvrt	;wreg free
   674  000A2A  5026               	movf	?_vfpfcnvrt,w,c
   675  000A2C  263D               	addwf	_nout,f,c
   676  000A2E  5027               	movf	?_vfpfcnvrt+1,w,c
   677  000A30  223E               	addwfc	_nout+1,f,c
   678  000A32                     l1693:
   679                           
   680                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   681  000A32  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
   682  000A36  C037  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   683  000A3A                     	if	0	;tblptru may be non-zero
   684  000A3A                     	endif
   685  000A3A                     	if	0	;tblptru may be non-zero
   686  000A3A                     	endif
   687  000A3A  0008               	tblrd		*
   688  000A3C  50F5               	movf	tablat,w,c
   689  000A3E  0900               	iorlw	0
   690  000A40  A4D8               	btfss	status,2,c
   691  000A42  D7E5               	goto	l1691
   692                           
   693                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   694  000A44  C03D  F030         	movff	_nout,?_vfprintf
   695  000A48  C03E  F031         	movff	_nout+1,?_vfprintf+1
   696  000A4C  0012               	return		;funcret
   697  000A4E                     __end_of_vfprintf:
   698                           	opt callstack 0
   699                           
   700 ;; *************** function _vfpfcnvrt *****************
   701 ;; Defined at:
   702 ;;		line 670 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
   705 ;;		 -> NULL(0), 
   706 ;;  fmt             2   39[COMRAM] PTR PTR unsigned char 
   707 ;;		 -> vfprintf@cfmt(2), 
   708 ;;  ap              2   41[COMRAM] PTR PTR void 
   709 ;;		 -> printf@ap(2), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  llu             8    0        unsigned long long 
   712 ;;  ll              8    0        long long 
   713 ;;  f               4    0        long long 
   714 ;;  vp              3    0        PTR void 
   715 ;;  ct              3    0        unsigned char [3]
   716 ;;  cp              2   45[COMRAM] PTR unsigned char 
   717 ;;		 -> ?_printf(2), STR_2(7), 
   718 ;;  i               2    0        int 
   719 ;;  done            2    0        int 
   720 ;;  c               1    0        unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2   37[COMRAM] int 
   723 ;; Registers used:
   724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   730 ;;      Params:         6       0       0       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0       0       0
   732 ;;      Temps:          2       0       0       0       0       0       0
   733 ;;      Totals:        10       0       0       0       0       0       0
   734 ;;Total ram usage:       10 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    8
   737 ;; This function calls:
   738 ;;		_fputc
   739 ;;		_stoa
   740 ;; This function is called by:
   741 ;;		_vfprintf
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  000762                     __ptext3:
   747                           	opt callstack 0
   748  000762                     _vfpfcnvrt:
   749                           	opt callstack 20
   750                           
   751                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;D:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;D:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;D:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   752                           
   753                           ;incstack = 0
   754  000762  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   755  000766  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   756  00076A  CFDE FFF6          	movff	postinc2,tblptrl
   757  00076E  CFDD FFF7          	movff	postdec2,tblptrh
   758  000772                     	if	0	;tblptru may be non-zero
   759  000772                     	endif
   760  000772                     	if	0	;tblptru may be non-zero
   761  000772                     	endif
   762  000772  0008               	tblrd		*
   763  000774  50F5               	movf	tablat,w,c
   764  000776  0A25               	xorlw	37
   765  000778  A4D8               	btfss	status,2,c
   766  00077A  D077               	goto	l1679
   767                           
   768                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   769  00077C  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   770  000780  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   771  000784  2ADE               	incf	postinc2,f,c
   772  000786  0E00               	movlw	0
   773  000788  22DD               	addwfc	postdec2,f,c
   774                           
   775                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   776  00078A  0E00               	movlw	0
   777  00078C  6E40               	movwf	_width+1,c
   778  00078E  0E00               	movlw	0
   779  000790  6E3F               	movwf	_width,c
   780  000792  C03F  F043         	movff	_width,_flags
   781  000796  C040  F044         	movff	_width+1,_flags+1
   782                           
   783                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   784  00079A  6841               	setf	_prec,c
   785  00079C  6842               	setf	_prec+1,c
   786                           
   787                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
   788  00079E  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   789  0007A2  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   790  0007A6  CFDE FFF6          	movff	postinc2,tblptrl
   791  0007AA  CFDD FFF7          	movff	postdec2,tblptrh
   792  0007AE                     	if	0	;tblptru may be non-zero
   793  0007AE                     	endif
   794  0007AE                     	if	0	;tblptru may be non-zero
   795  0007AE                     	endif
   796  0007AE  0008               	tblrd		*
   797  0007B0  50F5               	movf	tablat,w,c
   798  0007B2  0A73               	xorlw	115
   799  0007B4  A4D8               	btfss	status,2,c
   800  0007B6  D02A               	goto	l1663
   801                           
   802                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
   803  0007B8  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   804  0007BC  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   805  0007C0  2ADE               	incf	postinc2,f,c
   806  0007C2  0E00               	movlw	0
   807  0007C4  22DD               	addwfc	postdec2,f,c
   808                           
   809                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
   810  0007C6  C02A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   811  0007CA  C02B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   812  0007CE  CFDF F02C          	movff	indf2,??_vfpfcnvrt
   813  0007D2  0E02               	movlw	2
   814  0007D4  26DE               	addwf	postinc2,f,c
   815  0007D6  CFDF F02D          	movff	indf2,??_vfpfcnvrt+1
   816  0007DA  0E00               	movlw	0
   817  0007DC  22DD               	addwfc	postdec2,f,c
   818  0007DE  C02C  FFD9         	movff	??_vfpfcnvrt,fsr2l
   819  0007E2  C02D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   820  0007E6  CFDE F02E          	movff	postinc2,vfpfcnvrt@cp
   821  0007EA  CFDD F02F          	movff	postdec2,vfpfcnvrt@cp+1
   822                           
   823                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
   824  0007EE  C026  F010         	movff	vfpfcnvrt@fp,stoa@fp
   825  0007F2  C027  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
   826  0007F6  C02E  F012         	movff	vfpfcnvrt@cp,stoa@s
   827  0007FA  C02F  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
   828  0007FE  EC12  F003         	call	_stoa	;wreg free
   829  000802  C010  F026         	movff	?_stoa,?_vfpfcnvrt
   830  000806  C011  F027         	movff	?_stoa+1,?_vfpfcnvrt+1
   831  00080A  0012               	return	
   832  00080C                     l1663:
   833                           
   834                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
   835  00080C  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   836  000810  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   837  000814  CFDE FFF6          	movff	postinc2,tblptrl
   838  000818  CFDD FFF7          	movff	postdec2,tblptrh
   839  00081C                     	if	0	;tblptru may be non-zero
   840  00081C                     	endif
   841  00081C                     	if	0	;tblptru may be non-zero
   842  00081C                     	endif
   843  00081C  0008               	tblrd		*
   844  00081E  50F5               	movf	tablat,w,c
   845  000820  0A25               	xorlw	37
   846  000822  A4D8               	btfss	status,2,c
   847  000824  D016               	goto	l1673
   848                           
   849                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
   850  000826  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   851  00082A  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   852  00082E  2ADE               	incf	postinc2,f,c
   853  000830  0E00               	movlw	0
   854  000832  22DD               	addwfc	postdec2,f,c
   855                           
   856                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
   857  000834  0E00               	movlw	0
   858  000836  6E08               	movwf	fputc@c+1,c
   859  000838  0E25               	movlw	37
   860  00083A  6E07               	movwf	fputc@c,c
   861  00083C  C026  F009         	movff	vfpfcnvrt@fp,fputc@fp
   862  000840  C027  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   863  000844  EC9B  F004         	call	_fputc	;wreg free
   864  000848                     l1669:
   865                           
   866                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
   867  000848  0E00               	movlw	0
   868  00084A  6E27               	movwf	?_vfpfcnvrt+1,c
   869  00084C  0E01               	movlw	1
   870  00084E  6E26               	movwf	?_vfpfcnvrt,c
   871  000850  0012               	return	
   872  000852                     l1673:
   873                           
   874                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
   875  000852  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   876  000856  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   877  00085A  2ADE               	incf	postinc2,f,c
   878  00085C  0E00               	movlw	0
   879  00085E  22DD               	addwfc	postdec2,f,c
   880                           
   881                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
   882  000860  0E00               	movlw	0
   883  000862  6E27               	movwf	?_vfpfcnvrt+1,c
   884  000864  0E00               	movlw	0
   885  000866  6E26               	movwf	?_vfpfcnvrt,c
   886  000868  0012               	return	
   887  00086A                     l1679:
   888                           
   889                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
   890  00086A  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   891  00086E  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   892  000872  CFDE FFF6          	movff	postinc2,tblptrl
   893  000876  CFDD FFF7          	movff	postdec2,tblptrh
   894  00087A                     	if	0	;tblptru may be non-zero
   895  00087A                     	endif
   896  00087A                     	if	0	;tblptru may be non-zero
   897  00087A                     	endif
   898  00087A  0008               	tblrd		*
   899  00087C  50F5               	movf	tablat,w,c
   900  00087E  6E07               	movwf	fputc@c,c
   901  000880  6A08               	clrf	fputc@c+1,c
   902  000882  C026  F009         	movff	vfpfcnvrt@fp,fputc@fp
   903  000886  C027  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   904  00088A  EC9B  F004         	call	_fputc	;wreg free
   905                           
   906                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
   907  00088E  C028  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   908  000892  C029  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   909  000896  2ADE               	incf	postinc2,f,c
   910  000898  0E00               	movlw	0
   911  00089A  22DD               	addwfc	postdec2,f,c
   912  00089C  D7D5               	goto	l1669
   913  00089E                     __end_of_vfpfcnvrt:
   914                           	opt callstack 0
   915                           
   916 ;; *************** function _stoa *****************
   917 ;; Defined at:
   918 ;;		line 546 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
   921 ;;		 -> NULL(0), 
   922 ;;  s               2   17[COMRAM] PTR unsigned char 
   923 ;;		 -> ?_printf(2), STR_2(7), 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  nuls            7   20[COMRAM] unsigned char [7]
   926 ;;  l               2   35[COMRAM] int 
   927 ;;  p               2   33[COMRAM] int 
   928 ;;  cp              2   31[COMRAM] PTR unsigned char 
   929 ;;		 -> ?_printf(2), stoa@nuls(7), STR_2(7), 
   930 ;;  w               2   29[COMRAM] int 
   931 ;;  i               2   27[COMRAM] int 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2   15[COMRAM] int 
   934 ;; Registers used:
   935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         4       0       0       0       0       0       0
   942 ;;      Locals:        17       0       0       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0       0       0
   944 ;;      Totals:        22       0       0       0       0       0       0
   945 ;;Total ram usage:       22 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    7
   948 ;; This function calls:
   949 ;;		_fputc
   950 ;;		_strlen
   951 ;; This function is called by:
   952 ;;		_vfpfcnvrt
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text4
   957  000624                     __ptext4:
   958                           	opt callstack 0
   959  000624                     _stoa:
   960                           	opt callstack 20
   961                           
   962                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
   963                           
   964                           ;incstack = 0
   965  000624  EE20  F052         	lfsr	2,stoa@F1131
   966  000628  EE10  F015         	lfsr	1,stoa@nuls
   967  00062C  0E06               	movlw	6
   968  00062E                     u881:
   969  00062E  CFDB FFE3          	movff	plusw2,plusw1
   970  000632  06E8               	decf	wreg,f,c
   971  000634  E2FC               	bc	u881
   972                           
   973                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
   974  000636  C012  F020         	movff	stoa@s,stoa@cp
   975  00063A  C013  F021         	movff	stoa@s+1,stoa@cp+1
   976                           
   977                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
   978  00063E  5020               	movf	stoa@cp,w,c
   979  000640  1021               	iorwf	stoa@cp+1,w,c
   980  000642  A4D8               	btfss	status,2,c
   981  000644  D004               	goto	l1613
   982                           
   983                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
   984  000646  0E15               	movlw	low stoa@nuls
   985  000648  6E20               	movwf	stoa@cp,c
   986  00064A  0E00               	movlw	high stoa@nuls
   987  00064C  6E21               	movwf	stoa@cp+1,c
   988  00064E                     l1613:
   989                           
   990                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
   991  00064E  C020  F005         	movff	stoa@cp,strlen@s
   992  000652  C021  F006         	movff	stoa@cp+1,strlen@s+1
   993  000656  EC72  F005         	call	_strlen	;wreg free
   994  00065A  C005  F024         	movff	?_strlen,stoa@l
   995  00065E  C006  F025         	movff	?_strlen+1,stoa@l+1
   996                           
   997                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
   998  000662  C041  F022         	movff	_prec,stoa@p
   999  000666  C042  F023         	movff	_prec+1,stoa@p+1
  1000                           
  1001                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  1002  00066A  BE23               	btfsc	stoa@p+1,7,c
  1003  00066C  D00E               	goto	l274
  1004  00066E  5024               	movf	stoa@l,w,c
  1005  000670  5C22               	subwf	stoa@p,w,c
  1006  000672  5023               	movf	stoa@p+1,w,c
  1007  000674  0A80               	xorlw	128
  1008  000676  6E14               	movwf	??_stoa& (0+255),c
  1009  000678  5025               	movf	stoa@l+1,w,c
  1010  00067A  0A80               	xorlw	128
  1011  00067C  5814               	subwfb	??_stoa& (0+255),w,c
  1012  00067E  B0D8               	btfsc	status,0,c
  1013  000680  D004               	goto	l274
  1014  000682  C022  F024         	movff	stoa@p,stoa@l
  1015  000686  C023  F025         	movff	stoa@p+1,stoa@l+1
  1016  00068A                     l274:
  1017                           
  1018                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  1019  00068A  C024  F022         	movff	stoa@l,stoa@p
  1020  00068E  C025  F023         	movff	stoa@l+1,stoa@p+1
  1021                           
  1022                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  1023  000692  C03F  F01E         	movff	_width,stoa@w
  1024  000696  C040  F01F         	movff	_width+1,stoa@w+1
  1025                           
  1026                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  1027  00069A  A043               	btfss	_flags,0,c
  1028  00069C  D00D               	goto	l1627
  1029  00069E  D016               	goto	u930
  1030  0006A0                     l1623:
  1031                           
  1032                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  1033  0006A0  0E00               	movlw	0
  1034  0006A2  6E08               	movwf	fputc@c+1,c
  1035  0006A4  0E20               	movlw	32
  1036  0006A6  6E07               	movwf	fputc@c,c
  1037  0006A8  C010  F009         	movff	stoa@fp,fputc@fp
  1038  0006AC  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1039  0006B0  EC9B  F004         	call	_fputc	;wreg free
  1040                           
  1041                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  1042  0006B4  4A24               	infsnz	stoa@l,f,c
  1043  0006B6  2A25               	incf	stoa@l+1,f,c
  1044  0006B8                     l1627:
  1045                           
  1046                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  1047  0006B8  501E               	movf	stoa@w,w,c
  1048  0006BA  5C24               	subwf	stoa@l,w,c
  1049  0006BC  5025               	movf	stoa@l+1,w,c
  1050  0006BE  0A80               	xorlw	128
  1051  0006C0  6E14               	movwf	??_stoa& (0+255),c
  1052  0006C2  501F               	movf	stoa@w+1,w,c
  1053  0006C4  0A80               	xorlw	128
  1054  0006C6  5814               	subwfb	??_stoa& (0+255),w,c
  1055  0006C8  A0D8               	btfss	status,0,c
  1056  0006CA  D7EA               	goto	l1623
  1057  0006CC                     u930:
  1058                           
  1059                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  1060  0006CC  0E00               	movlw	0
  1061  0006CE  6E1D               	movwf	stoa@i+1,c
  1062  0006D0  0E00               	movlw	0
  1063  0006D2  6E1C               	movwf	stoa@i,c
  1064                           
  1065                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1066  0006D4  D01E               	goto	l1637
  1067  0006D6                     l1631:
  1068                           
  1069                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  1070  0006D6  C020  FFF6         	movff	stoa@cp,tblptrl
  1071  0006DA  C021  FFF7         	movff	stoa@cp+1,tblptrh
  1072  0006DE  6AF8               	clrf	tblptru,c
  1073  0006E0  0E05               	movlw	(high __ramtop+-1)
  1074  0006E2  64F7               	cpfsgt	tblptrh,c
  1075  0006E4  D003               	bra	u947
  1076  0006E6  0008               	tblrd		*
  1077  0006E8  50F5               	movf	tablat,w,c
  1078  0006EA  D005               	bra	u940
  1079  0006EC                     u947:
  1080  0006EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  1081  0006F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  1082  0006F4  50E7               	movf	indf1,w,c
  1083  0006F6                     u940:
  1084  0006F6  6E14               	movwf	??_stoa& (0+255),c
  1085  0006F8  5014               	movf	??_stoa,w,c
  1086  0006FA  6E07               	movwf	fputc@c,c
  1087  0006FC  6A08               	clrf	fputc@c+1,c
  1088  0006FE  C010  F009         	movff	stoa@fp,fputc@fp
  1089  000702  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1090  000706  EC9B  F004         	call	_fputc	;wreg free
  1091                           
  1092                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  1093  00070A  4A20               	infsnz	stoa@cp,f,c
  1094  00070C  2A21               	incf	stoa@cp+1,f,c
  1095                           
  1096                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  1097  00070E  4A1C               	infsnz	stoa@i,f,c
  1098  000710  2A1D               	incf	stoa@i+1,f,c
  1099  000712                     l1637:
  1100                           
  1101                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1102  000712  5022               	movf	stoa@p,w,c
  1103  000714  5C1C               	subwf	stoa@i,w,c
  1104  000716  501D               	movf	stoa@i+1,w,c
  1105  000718  0A80               	xorlw	128
  1106  00071A  6E14               	movwf	??_stoa& (0+255),c
  1107  00071C  5023               	movf	stoa@p+1,w,c
  1108  00071E  0A80               	xorlw	128
  1109  000720  5814               	subwfb	??_stoa& (0+255),w,c
  1110  000722  A0D8               	btfss	status,0,c
  1111  000724  D7D8               	goto	l1631
  1112                           
  1113                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  1114  000726  B043               	btfsc	_flags,0,c
  1115  000728  D00D               	goto	l1645
  1116  00072A  D016               	goto	u970
  1117  00072C                     l1641:
  1118                           
  1119                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  1120  00072C  0E00               	movlw	0
  1121  00072E  6E08               	movwf	fputc@c+1,c
  1122  000730  0E20               	movlw	32
  1123  000732  6E07               	movwf	fputc@c,c
  1124  000734  C010  F009         	movff	stoa@fp,fputc@fp
  1125  000738  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1126  00073C  EC9B  F004         	call	_fputc	;wreg free
  1127                           
  1128                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  1129  000740  4A24               	infsnz	stoa@l,f,c
  1130  000742  2A25               	incf	stoa@l+1,f,c
  1131  000744                     l1645:
  1132                           
  1133                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  1134  000744  501E               	movf	stoa@w,w,c
  1135  000746  5C24               	subwf	stoa@l,w,c
  1136  000748  5025               	movf	stoa@l+1,w,c
  1137  00074A  0A80               	xorlw	128
  1138  00074C  6E14               	movwf	??_stoa& (0+255),c
  1139  00074E  501F               	movf	stoa@w+1,w,c
  1140  000750  0A80               	xorlw	128
  1141  000752  5814               	subwfb	??_stoa& (0+255),w,c
  1142  000754  A0D8               	btfss	status,0,c
  1143  000756  D7EA               	goto	l1641
  1144  000758                     u970:
  1145                           
  1146                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  1147                           
  1148                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  1149  000758  C024  F010         	movff	stoa@l,?_stoa
  1150  00075C  C025  F011         	movff	stoa@l+1,?_stoa+1
  1151  000760  0012               	return		;funcret
  1152  000762                     __end_of_stoa:
  1153                           	opt callstack 0
  1154                           
  1155 ;; *************** function _strlen *****************
  1156 ;; Defined at:
  1157 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1160 ;;		 -> ?_printf(2), stoa@nuls(7), STR_2(7), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1163 ;;		 -> ?_printf(2), stoa@nuls(7), STR_2(7), 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2    4[COMRAM] unsigned int 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         2       0       0       0       0       0       0
  1174 ;;      Locals:         2       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0
  1176 ;;      Totals:         4       0       0       0       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_stoa
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text5
  1188  000AE4                     __ptext5:
  1189                           	opt callstack 0
  1190  000AE4                     _strlen:
  1191                           	opt callstack 22
  1192                           
  1193                           ;incstack = 0
  1194  000AE4  C005  F007         	movff	strlen@s,strlen@a
  1195  000AE8  C006  F008         	movff	strlen@s+1,strlen@a+1
  1196  000AEC  D002               	goto	l1599
  1197  000AEE                     l1597:
  1198  000AEE  4A05               	infsnz	strlen@s,f,c
  1199  000AF0  2A06               	incf	strlen@s+1,f,c
  1200  000AF2                     l1599:
  1201  000AF2  C005  FFF6         	movff	strlen@s,tblptrl
  1202  000AF6  C006  FFF7         	movff	strlen@s+1,tblptrh
  1203  000AFA  6AF8               	clrf	tblptru,c
  1204  000AFC  0E05               	movlw	(high __ramtop+-1)
  1205  000AFE  64F7               	cpfsgt	tblptrh,c
  1206  000B00  D003               	bra	u867
  1207  000B02  0008               	tblrd		*
  1208  000B04  50F5               	movf	tablat,w,c
  1209  000B06  D005               	bra	u860
  1210  000B08                     u867:
  1211  000B08  CFF6 FFE1          	movff	tblptrl,fsr1l
  1212  000B0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  1213  000B10  50E7               	movf	indf1,w,c
  1214  000B12                     u860:
  1215  000B12  0900               	iorlw	0
  1216  000B14  A4D8               	btfss	status,2,c
  1217  000B16  D7EB               	goto	l1597
  1218  000B18  5007               	movf	strlen@a,w,c
  1219  000B1A  5C05               	subwf	strlen@s,w,c
  1220  000B1C  6E05               	movwf	?_strlen,c
  1221  000B1E  5008               	movf	strlen@a+1,w,c
  1222  000B20  5806               	subwfb	strlen@s+1,w,c
  1223  000B22  6E06               	movwf	?_strlen+1,c
  1224  000B24  0012               	return		;funcret
  1225  000B26                     __end_of_strlen:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function _fputc *****************
  1229 ;; Defined at:
  1230 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  c               2    6[COMRAM] int 
  1233 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  1234 ;;		 -> NULL(0), 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2    6[COMRAM] int 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1246 ;;      Params:         4       0       0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0       0       0
  1248 ;;      Temps:          5       0       0       0       0       0       0
  1249 ;;      Totals:         9       0       0       0       0       0       0
  1250 ;;Total ram usage:        9 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    6
  1253 ;; This function calls:
  1254 ;;		_putch
  1255 ;; This function is called by:
  1256 ;;		_stoa
  1257 ;;		_vfpfcnvrt
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text6
  1262  000936                     __ptext6:
  1263                           	opt callstack 0
  1264  000936                     _fputc:
  1265                           	opt callstack 20
  1266                           
  1267                           ;incstack = 0
  1268  000936  5009               	movf	fputc@fp,w,c
  1269  000938  100A               	iorwf	fputc@fp+1,w,c
  1270  00093A  B4D8               	btfsc	status,2,c
  1271  00093C  D004               	goto	u830
  1272  00093E  5009               	movf	fputc@fp,w,c
  1273  000940  100A               	iorwf	fputc@fp+1,w,c
  1274  000942  A4D8               	btfss	status,2,c
  1275  000944  D004               	goto	l1587
  1276  000946                     u830:
  1277  000946  5007               	movf	fputc@c,w,c
  1278  000948  EC08  F006         	call	_putch
  1279  00094C  0012               	return	
  1280  00094E                     l1587:
  1281  00094E  EE20 F004          	lfsr	2,4
  1282  000952  5009               	movf	fputc@fp,w,c
  1283  000954  26D9               	addwf	fsr2l,f,c
  1284  000956  500A               	movf	fputc@fp+1,w,c
  1285  000958  22DA               	addwfc	fsr2h,f,c
  1286  00095A  50DE               	movf	postinc2,w,c
  1287  00095C  10DE               	iorwf	postinc2,w,c
  1288  00095E  B4D8               	btfsc	status,2,c
  1289  000960  D016               	goto	u850
  1290  000962  EE20 F004          	lfsr	2,4
  1291  000966  5009               	movf	fputc@fp,w,c
  1292  000968  26D9               	addwf	fsr2l,f,c
  1293  00096A  500A               	movf	fputc@fp+1,w,c
  1294  00096C  22DA               	addwfc	fsr2h,f,c
  1295  00096E  EE10 F002          	lfsr	1,2
  1296  000972  5009               	movf	fputc@fp,w,c
  1297  000974  26E1               	addwf	fsr1l,f,c
  1298  000976  500A               	movf	fputc@fp+1,w,c
  1299  000978  22E2               	addwfc	fsr1h,f,c
  1300  00097A  50DE               	movf	postinc2,w,c
  1301  00097C  5CE6               	subwf	postinc1,w,c
  1302  00097E  50E6               	movf	postinc1,w,c
  1303  000980  0A80               	xorlw	128
  1304  000982  6E0F               	movwf	(??_fputc+4)& (0+255),c
  1305  000984  50DE               	movf	postinc2,w,c
  1306  000986  0A80               	xorlw	128
  1307  000988  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  1308  00098A  B0D8               	btfsc	status,0,c
  1309  00098C  0012               	return	
  1310  00098E                     u850:
  1311  00098E  EE20 F002          	lfsr	2,2
  1312  000992  5009               	movf	fputc@fp,w,c
  1313  000994  26D9               	addwf	fsr2l,f,c
  1314  000996  500A               	movf	fputc@fp+1,w,c
  1315  000998  22DA               	addwfc	fsr2h,f,c
  1316  00099A  2ADE               	incf	postinc2,f,c
  1317  00099C  0E00               	movlw	0
  1318  00099E  22DD               	addwfc	postdec2,f,c
  1319  0009A0  0012               	return		;funcret
  1320  0009A2                     __end_of_fputc:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _putch *****************
  1324 ;; Defined at:
  1325 ;;		line 173 in file "mcc_generated_files/eusart.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  txData          1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  txData          1    5[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1339 ;;      Params:         0       0       0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0
  1342 ;;      Totals:         1       0       0       0       0       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    5
  1346 ;; This function calls:
  1347 ;;		_EUSART_Write
  1348 ;; This function is called by:
  1349 ;;		_fputc
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text7
  1354  000C10                     __ptext7:
  1355                           	opt callstack 0
  1356  000C10                     _putch:
  1357                           	opt callstack 20
  1358                           
  1359                           ;incstack = 0
  1360                           ;putch@txData stored from wreg
  1361  000C10  6E06               	movwf	putch@txData,c
  1362                           
  1363                           ;mcc_generated_files/eusart.c: 173: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 174: {;mcc_generated_files/eusart.c: 175:     EUSART_Write(txData);
  1364  000C12  5006               	movf	putch@txData,w,c
  1365  000C14  EC02  F006         	call	_EUSART_Write
  1366  000C18  0012               	return		;funcret
  1367  000C1A                     __end_of_putch:
  1368                           	opt callstack 0
  1369                           
  1370 ;; *************** function _EUSART_Write *****************
  1371 ;; Defined at:
  1372 ;;		line 159 in file "mcc_generated_files/eusart.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  txData          1    wreg     unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  txData          1    4[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         0       0       0       0       0       0       0
  1387 ;;      Locals:         1       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0
  1389 ;;      Totals:         1       0       0       0       0       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    4
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_putch
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text8
  1402  000C04                     __ptext8:
  1403                           	opt callstack 0
  1404  000C04                     _EUSART_Write:
  1405                           	opt callstack 20
  1406                           
  1407                           ;incstack = 0
  1408                           ;EUSART_Write@txData stored from wreg
  1409  000C04  6E05               	movwf	EUSART_Write@txData,c
  1410  000C06                     
  1411                           ;mcc_generated_files/eusart.c: 161:     while(0 == PIR1bits.TX1IF)
  1412                           
  1413                           ;mcc_generated_files/eusart.c: 162:     {;mcc_generated_files/eusart.c: 163:     }
  1414  000C06  A89E               	btfss	3998,4,c	;volatile
  1415  000C08  D7FE               	goto	l1575
  1416                           
  1417                           ;mcc_generated_files/eusart.c: 165:     TXREG = txData;
  1418  000C0A  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  1419  000C0E  0012               	return		;funcret
  1420  000C10                     __end_of_EUSART_Write:
  1421                           	opt callstack 0
  1422                           
  1423 ;; *************** function _SYSTEM_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    6
  1446 ;; This function calls:
  1447 ;;		_EUSART_Initialize
  1448 ;;		_INTERRUPT_Initialize
  1449 ;;		_OSCILLATOR_Initialize
  1450 ;;		_PIN_MANAGER_Initialize
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text9
  1457  000BF2                     __ptext9:
  1458                           	opt callstack 0
  1459  000BF2                     _SYSTEM_Initialize:
  1460                           	opt callstack 24
  1461                           
  1462                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1463                           
  1464                           ;incstack = 0
  1465  000BF2  EC30  F006         	call	_INTERRUPT_Initialize	;wreg free
  1466                           
  1467                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1468  000BF6  ECB1  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1469                           
  1470                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1471  000BFA  EC0D  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1472                           
  1473                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  1474  000BFE  ECD1  F004         	call	_EUSART_Initialize	;wreg free
  1475  000C02  0012               	return		;funcret
  1476  000C04                     __end_of_SYSTEM_Initialize:
  1477                           	opt callstack 0
  1478                           
  1479 ;; *************** function _PIN_MANAGER_Initialize *****************
  1480 ;; Defined at:
  1481 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1495 ;;      Params:         0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    4
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_SYSTEM_Initialize
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text10
  1510  000B62                     __ptext10:
  1511                           	opt callstack 0
  1512  000B62                     _PIN_MANAGER_Initialize:
  1513                           	opt callstack 25
  1514                           
  1515                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1516                           
  1517                           ;incstack = 0
  1518  000B62  0E00               	movlw	0
  1519  000B64  6E8D               	movwf	3981,c	;volatile
  1520                           
  1521                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1522  000B66  0E00               	movlw	0
  1523  000B68  6E8C               	movwf	3980,c	;volatile
  1524                           
  1525                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1526  000B6A  0E00               	movlw	0
  1527  000B6C  6E89               	movwf	3977,c	;volatile
  1528                           
  1529                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1530  000B6E  0E00               	movlw	0
  1531  000B70  6E8A               	movwf	3978,c	;volatile
  1532                           
  1533                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1534  000B72  0E00               	movlw	0
  1535  000B74  6E8B               	movwf	3979,c	;volatile
  1536                           
  1537                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1538  000B76  0E07               	movlw	7
  1539  000B78  6E96               	movwf	3990,c	;volatile
  1540                           
  1541                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1542  000B7A  6892               	setf	3986,c	;volatile
  1543                           
  1544                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFE;
  1545  000B7C  0EFE               	movlw	254
  1546  000B7E  6E93               	movwf	3987,c	;volatile
  1547                           
  1548                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1549  000B80  0EBF               	movlw	191
  1550  000B82  6E94               	movwf	3988,c	;volatile
  1551                           
  1552                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1553  000B84  6895               	setf	3989,c	;volatile
  1554                           
  1555                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0x00;
  1556  000B86  0E00               	movlw	0
  1557  000B88  6E7E               	movwf	3966,c	;volatile
  1558                           
  1559                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x00;
  1560  000B8A  0E00               	movlw	0
  1561  000B8C  6E7F               	movwf	3967,c	;volatile
  1562                           
  1563                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1564  000B8E  0E00               	movlw	0
  1565  000B90  6E7C               	movwf	3964,c	;volatile
  1566                           
  1567                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1568  000B92  8EF1               	bsf	4081,7,c	;volatile
  1569  000B94  0012               	return		;funcret
  1570  000B96                     __end_of_PIN_MANAGER_Initialize:
  1571                           	opt callstack 0
  1572                           
  1573 ;; *************** function _OSCILLATOR_Initialize *****************
  1574 ;; Defined at:
  1575 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         0       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    4
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_SYSTEM_Initialize
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text11
  1604  000C1A                     __ptext11:
  1605                           	opt callstack 0
  1606  000C1A                     _OSCILLATOR_Initialize:
  1607                           	opt callstack 25
  1608                           
  1609                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  1610                           
  1611                           ;incstack = 0
  1612  000C1A  0E70               	movlw	112
  1613  000C1C  6ED3               	movwf	4051,c	;volatile
  1614                           
  1615                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1616  000C1E  0E00               	movlw	0
  1617  000C20  6E9B               	movwf	3995,c	;volatile
  1618  000C22  0012               	return		;funcret
  1619  000C24                     __end_of_OSCILLATOR_Initialize:
  1620                           	opt callstack 0
  1621                           
  1622 ;; *************** function _INTERRUPT_Initialize *****************
  1623 ;; Defined at:
  1624 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		None
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    4
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_SYSTEM_Initialize
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text12
  1653  000C60                     __ptext12:
  1654                           	opt callstack 0
  1655  000C60                     _INTERRUPT_Initialize:
  1656                           	opt callstack 25
  1657                           
  1658                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1659                           
  1660                           ;incstack = 0
  1661  000C60  9ED0               	bcf	4048,7,c	;volatile
  1662  000C62  0012               	return		;funcret
  1663  000C64                     __end_of_INTERRUPT_Initialize:
  1664                           	opt callstack 0
  1665                           
  1666 ;; *************** function _EUSART_Initialize *****************
  1667 ;; Defined at:
  1668 ;;		line 83 in file "mcc_generated_files/eusart.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1682 ;;      Params:         0       0       0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    5
  1689 ;; This function calls:
  1690 ;;		_EUSART_SetErrorHandler
  1691 ;;		_EUSART_SetFramingErrorHandler
  1692 ;;		_EUSART_SetOverrunErrorHandler
  1693 ;;		_EUSART_SetRxInterruptHandler
  1694 ;; This function is called by:
  1695 ;;		_SYSTEM_Initialize
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text13
  1700  0009A2                     __ptext13:
  1701                           	opt callstack 0
  1702  0009A2                     _EUSART_Initialize:
  1703                           	opt callstack 24
  1704                           
  1705                           ;mcc_generated_files/eusart.c: 86:     PIE1bits.RC1IE = 0;
  1706                           
  1707                           ;incstack = 0
  1708  0009A2  9A9D               	bcf	3997,5,c	;volatile
  1709                           
  1710                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1711  0009A4  0E9E               	movlw	low _EUSART_Receive_ISR
  1712  0009A6  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler,c
  1713  0009A8  0E08               	movlw	high _EUSART_Receive_ISR
  1714  0009AA  6E06               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1,c
  1715  0009AC  EC12  F006         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1716                           
  1717                           ;mcc_generated_files/eusart.c: 90:     TRISCbits.RC6 = 1;
  1718  0009B0  8C94               	bsf	3988,6,c	;volatile
  1719                           
  1720                           ;mcc_generated_files/eusart.c: 91:     TRISCbits.RC7 = 1;
  1721  0009B2  8E94               	bsf	3988,7,c	;volatile
  1722                           
  1723                           ;mcc_generated_files/eusart.c: 93:     TXSTAbits.SYNC = 0;
  1724  0009B4  98AC               	bcf	4012,4,c	;volatile
  1725                           
  1726                           ;mcc_generated_files/eusart.c: 95:     BAUDCONbits.BRG16 = 0;
  1727  0009B6  96B8               	bcf	4024,3,c	;volatile
  1728                           
  1729                           ;mcc_generated_files/eusart.c: 96:     TXSTAbits.BRGH = 1;
  1730  0009B8  84AC               	bsf	4012,2,c	;volatile
  1731                           
  1732                           ;mcc_generated_files/eusart.c: 97:     SPBRG = 8;
  1733  0009BA  0E08               	movlw	8
  1734  0009BC  6EAF               	movwf	4015,c	;volatile
  1735                           
  1736                           ;mcc_generated_files/eusart.c: 99:     RCSTAbits.SPEN = 1;
  1737  0009BE  8EAB               	bsf	4011,7,c	;volatile
  1738                           
  1739                           ;mcc_generated_files/eusart.c: 100:     TXSTAbits.TXEN = 1;
  1740  0009C0  8AAC               	bsf	4012,5,c	;volatile
  1741                           
  1742                           ;mcc_generated_files/eusart.c: 101:     RCSTAbits.CREN = 1;
  1743  0009C2  88AB               	bsf	4011,4,c	;volatile
  1744                           
  1745                           ;mcc_generated_files/eusart.c: 103:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1746  0009C4  0E64               	movlw	low _EUSART_DefaultFramingErrorHandler
  1747  0009C6  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler,c
  1748  0009C8  0E0C               	movlw	high _EUSART_DefaultFramingErrorHandler
  1749  0009CA  6E06               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1,c
  1750  0009CC  EC1C  F006         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1751                           
  1752                           ;mcc_generated_files/eusart.c: 104:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1753  0009D0  0E54               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1754  0009D2  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler,c
  1755  0009D4  0E0C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1756  0009D6  6E06               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1,c
  1757  0009D8  EC17  F006         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1758                           
  1759                           ;mcc_generated_files/eusart.c: 105:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1760  0009DC  0E5A               	movlw	low _EUSART_DefaultErrorHandler
  1761  0009DE  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler,c
  1762  0009E0  0E0C               	movlw	high _EUSART_DefaultErrorHandler
  1763  0009E2  6E06               	movwf	EUSART_SetErrorHandler@interruptHandler+1,c
  1764  0009E4  EC21  F006         	call	_EUSART_SetErrorHandler	;wreg free
  1765                           
  1766                           ;mcc_generated_files/eusart.c: 107:     eusartRxLastError.status = 0;
  1767  0009E8  0E00               	movlw	0
  1768  0009EA  6E45               	movwf	_eusartRxLastError,c	;volatile
  1769                           
  1770                           ;mcc_generated_files/eusart.c: 110:     eusartRxHead = 0;
  1771  0009EC  0E00               	movlw	0
  1772  0009EE  6E48               	movwf	_eusartRxHead,c	;volatile
  1773                           
  1774                           ;mcc_generated_files/eusart.c: 111:     eusartRxTail = 0;
  1775  0009F0  0E00               	movlw	0
  1776  0009F2  6E47               	movwf	_eusartRxTail,c	;volatile
  1777                           
  1778                           ;mcc_generated_files/eusart.c: 112:     eusartRxCount = 0;
  1779  0009F4  0E00               	movlw	0
  1780  0009F6  6E46               	movwf	_eusartRxCount,c	;volatile
  1781                           
  1782                           ;mcc_generated_files/eusart.c: 115:     PIE1bits.RC1IE = 1;
  1783  0009F8  8A9D               	bsf	3997,5,c	;volatile
  1784  0009FA  0012               	return		;funcret
  1785  0009FC                     __end_of_EUSART_Initialize:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1789 ;; Defined at:
  1790 ;;		line 244 in file "mcc_generated_files/eusart.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1793 ;;		 -> EUSART_Receive_ISR(1), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1805 ;;      Params:         2       0       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0
  1808 ;;      Totals:         2       0       0       0       0       0       0
  1809 ;;Total ram usage:        2 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    4
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_EUSART_Initialize
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text14
  1820  000C24                     __ptext14:
  1821                           	opt callstack 0
  1822  000C24                     _EUSART_SetRxInterruptHandler:
  1823                           	opt callstack 24
  1824                           
  1825                           ;mcc_generated_files/eusart.c: 245:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1826                           
  1827                           ;incstack = 0
  1828  000C24  C005  F050         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1829  000C28  C006  F051         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1830  000C2C  0012               	return		;funcret
  1831  000C2E                     __end_of_EUSART_SetRxInterruptHandler:
  1832                           	opt callstack 0
  1833                           
  1834 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1835 ;; Defined at:
  1836 ;;		line 235 in file "mcc_generated_files/eusart.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1839 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1851 ;;      Params:         2       0       0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0
  1854 ;;      Totals:         2       0       0       0       0       0       0
  1855 ;;Total ram usage:        2 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_EUSART_Initialize
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text15
  1866  000C2E                     __ptext15:
  1867                           	opt callstack 0
  1868  000C2E                     _EUSART_SetOverrunErrorHandler:
  1869                           	opt callstack 24
  1870                           
  1871                           ;mcc_generated_files/eusart.c: 236:     EUSART_OverrunErrorHandler = interruptHandler;
  1872                           
  1873                           ;incstack = 0
  1874  000C2E  C005  F04C         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1875  000C32  C006  F04D         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1876  000C36  0012               	return		;funcret
  1877  000C38                     __end_of_EUSART_SetOverrunErrorHandler:
  1878                           	opt callstack 0
  1879                           
  1880 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1881 ;; Defined at:
  1882 ;;		line 231 in file "mcc_generated_files/eusart.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1885 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1897 ;;      Params:         2       0       0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0
  1900 ;;      Totals:         2       0       0       0       0       0       0
  1901 ;;Total ram usage:        2 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    4
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_EUSART_Initialize
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text16
  1912  000C38                     __ptext16:
  1913                           	opt callstack 0
  1914  000C38                     _EUSART_SetFramingErrorHandler:
  1915                           	opt callstack 24
  1916                           
  1917                           ;mcc_generated_files/eusart.c: 232:     EUSART_FramingErrorHandler = interruptHandler;
  1918                           
  1919                           ;incstack = 0
  1920  000C38  C005  F04E         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1921  000C3C  C006  F04F         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1922  000C40  0012               	return		;funcret
  1923  000C42                     __end_of_EUSART_SetFramingErrorHandler:
  1924                           	opt callstack 0
  1925                           
  1926 ;; *************** function _EUSART_SetErrorHandler *****************
  1927 ;; Defined at:
  1928 ;;		line 239 in file "mcc_generated_files/eusart.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1931 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1943 ;;      Params:         2       0       0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0
  1946 ;;      Totals:         2       0       0       0       0       0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_EUSART_Initialize
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text17
  1958  000C42                     __ptext17:
  1959                           	opt callstack 0
  1960  000C42                     _EUSART_SetErrorHandler:
  1961                           	opt callstack 24
  1962                           
  1963                           ;mcc_generated_files/eusart.c: 240:     EUSART_ErrorHandler = interruptHandler;
  1964                           
  1965                           ;incstack = 0
  1966  000C42  C005  F04A         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1967  000C46  C006  F04B         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1968  000C4A  0012               	return		;funcret
  1969  000C4C                     __end_of_EUSART_SetErrorHandler:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function _EUSART_Read *****************
  1973 ;; Defined at:
  1974 ;;		line 137 in file "mcc_generated_files/eusart.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  readValue       1    4[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1988 ;;      Params:         0       0       0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0
  1991 ;;      Totals:         1       0       0       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;;		_getch
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text18
  2004  000B26                     __ptext18:
  2005                           	opt callstack 0
  2006  000B26                     _EUSART_Read:
  2007                           	opt callstack 26
  2008                           
  2009                           ;mcc_generated_files/eusart.c: 141:     while(0 == eusartRxCount)
  2010                           
  2011                           ;mcc_generated_files/eusart.c: 141:     while(0 == eusartRxCount)
  2012                           
  2013                           ;incstack = 0
  2014  000B26  5046               	movf	_eusartRxCount,w,c	;volatile
  2015  000B28  B4D8               	btfsc	status,2,c
  2016  000B2A  D7FD               	goto	_EUSART_Read
  2017                           
  2018                           ;mcc_generated_files/eusart.c: 145:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  2019  000B2C  0E80               	movlw	low _eusartRxStatusBuffer
  2020  000B2E  2447               	addwf	_eusartRxTail,w,c	;volatile
  2021  000B30  6ED9               	movwf	fsr2l,c
  2022  000B32  6ADA               	clrf	fsr2h,c
  2023  000B34  0E00               	movlw	high _eusartRxStatusBuffer
  2024  000B36  22DA               	addwfc	fsr2h,f,c
  2025  000B38  50DF               	movf	indf2,w,c
  2026  000B3A  6E45               	movwf	_eusartRxLastError,c	;volatile
  2027                           
  2028                           ;mcc_generated_files/eusart.c: 147:     readValue = eusartRxBuffer[eusartRxTail++];
  2029  000B3C  0EA0               	movlw	low _eusartRxBuffer
  2030  000B3E  2447               	addwf	_eusartRxTail,w,c	;volatile
  2031  000B40  6ED9               	movwf	fsr2l,c
  2032  000B42  6ADA               	clrf	fsr2h,c
  2033  000B44  0E00               	movlw	high _eusartRxBuffer
  2034  000B46  22DA               	addwfc	fsr2h,f,c
  2035  000B48  50DF               	movf	indf2,w,c
  2036  000B4A  6E05               	movwf	EUSART_Read@readValue,c
  2037  000B4C  2A47               	incf	_eusartRxTail,f,c	;volatile
  2038                           
  2039                           ;mcc_generated_files/eusart.c: 148:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2040  000B4E  0E1F               	movlw	31
  2041  000B50  6447               	cpfsgt	_eusartRxTail,c	;volatile
  2042  000B52  D002               	goto	l1501
  2043                           
  2044                           ;mcc_generated_files/eusart.c: 149:     {;mcc_generated_files/eusart.c: 150:         eus
      +                          artRxTail = 0;
  2045  000B54  0E00               	movlw	0
  2046  000B56  6E47               	movwf	_eusartRxTail,c	;volatile
  2047  000B58                     l1501:
  2048                           
  2049                           ;mcc_generated_files/eusart.c: 152:     PIE1bits.RC1IE = 0;
  2050  000B58  9A9D               	bcf	3997,5,c	;volatile
  2051                           
  2052                           ;mcc_generated_files/eusart.c: 153:     eusartRxCount--;
  2053  000B5A  0646               	decf	_eusartRxCount,f,c	;volatile
  2054                           
  2055                           ;mcc_generated_files/eusart.c: 154:     PIE1bits.RC1IE = 1;
  2056  000B5C  8A9D               	bsf	3997,5,c	;volatile
  2057                           
  2058                           ;mcc_generated_files/eusart.c: 156:     return readValue;
  2059  000B5E  5005               	movf	EUSART_Read@readValue,w,c
  2060  000B60  0012               	return		;funcret
  2061  000B62                     __end_of_EUSART_Read:
  2062                           	opt callstack 0
  2063                           
  2064 ;; *************** function _INTERRUPT_InterruptManager *****************
  2065 ;; Defined at:
  2066 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0
  2082 ;;      Temps:          4       0       0       0       0       0       0
  2083 ;;      Totals:         4       0       0       0       0       0       0
  2084 ;;Total ram usage:        4 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		Absolute function
  2089 ;;		_EUSART_Receive_ISR
  2090 ;; This function is called by:
  2091 ;;		Interrupt level 2
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	intcode
  2096  000008                     __pintcode:
  2097                           	opt callstack 0
  2098  000008                     _INTERRUPT_InterruptManager:
  2099                           	opt callstack 20
  2100                           
  2101                           ;incstack = 0
  2102  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2103  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2104  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2105  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2106  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2107                           
  2108                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2109  00001A  BCF2               	btfsc	4082,6,c	;volatile
  2110                           
  2111                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2112  00001C  AA9D               	btfss	3997,5,c	;volatile
  2113  00001E  D00E               	goto	i2u80_49
  2114  000020  AA9E               	btfss	3998,5,c	;volatile
  2115  000022  D00C               	goto	i2u80_49
  2116                           
  2117                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_RxDefaultInterruptHandler();
  2118  000024  D801               	call	i2u80_48
  2119  000026  D00A               	goto	i2u80_49
  2120  000028                     i2u80_48:
  2121  000028  0005               	push	
  2122  00002A  6EFA               	movwf	pclath,c
  2123  00002C  5050               	movf	_EUSART_RxDefaultInterruptHandler,w,c
  2124  00002E  6EFD               	movwf	tosl,c
  2125  000030  5051               	movf	_EUSART_RxDefaultInterruptHandler+1,w,c
  2126  000032  6EFE               	movwf	tosh,c
  2127  000034  50F8               	movf	tblptru,w,c
  2128  000036  6EFF               	movwf	tosu,c
  2129  000038  50FA               	movf	pclath,w,c
  2130  00003A  0012               	return		;indir
  2131  00003C                     i2u80_49:
  2132                           
  2133                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2134  00003C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2135  000040  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2136  000044  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2137  000048  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2138  00004C  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2139  00004E  0011               	retfie		f
  2140  000050                     __end_of_INTERRUPT_InterruptManager:
  2141                           	opt callstack 0
  2142                           
  2143 ;; *************** function _EUSART_Receive_ISR *****************
  2144 ;; Defined at:
  2145 ;;		line 179 in file "mcc_generated_files/eusart.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       0       0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		Absolute function
  2168 ;;		_EUSART_DefaultErrorHandler
  2169 ;;		_EUSART_DefaultFramingErrorHandler
  2170 ;;		_EUSART_DefaultOverrunErrorHandler
  2171 ;;		_EUSART_RxDataHandler
  2172 ;; This function is called by:
  2173 ;;		_EUSART_Initialize
  2174 ;;		_INTERRUPT_InterruptManager
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text20
  2179  00089E                     __ptext20:
  2180                           	opt callstack 0
  2181  00089E                     _EUSART_Receive_ISR:
  2182                           	opt callstack 20
  2183                           
  2184                           ;mcc_generated_files/eusart.c: 182:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  2185                           
  2186                           ;incstack = 0
  2187  00089E  0E80               	movlw	low _eusartRxStatusBuffer
  2188  0008A0  2448               	addwf	_eusartRxHead,w,c	;volatile
  2189  0008A2  6ED9               	movwf	fsr2l,c
  2190  0008A4  6ADA               	clrf	fsr2h,c
  2191  0008A6  0E00               	movlw	high _eusartRxStatusBuffer
  2192  0008A8  22DA               	addwfc	fsr2h,f,c
  2193  0008AA  0E00               	movlw	0
  2194  0008AC  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;mcc_generated_files/eusart.c: 184:     if(RCSTAbits.FERR){
  2197  0008AE  A4AB               	btfss	4011,2,c	;volatile
  2198  0008B0  D014               	goto	i2u69_49
  2199                           
  2200                           ;mcc_generated_files/eusart.c: 185:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  2201  0008B2  0E80               	movlw	low _eusartRxStatusBuffer
  2202  0008B4  2448               	addwf	_eusartRxHead,w,c	;volatile
  2203  0008B6  6ED9               	movwf	fsr2l,c
  2204  0008B8  6ADA               	clrf	fsr2h,c
  2205  0008BA  0E00               	movlw	high _eusartRxStatusBuffer
  2206  0008BC  22DA               	addwfc	fsr2h,f,c
  2207  0008BE  0100               	movlb	0	; () banked
  2208  0008C0  82DF               	bsf	indf2,1,c
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;mcc_generated_files/eusart.c: 186:         EUSART_FramingErrorHandler();
  2212  0008C2  D801               	call	i2u69_48
  2213  0008C4  D00A               	goto	i2u69_49
  2214  0008C6                     i2u69_48:
  2215  0008C6  0005               	push	
  2216  0008C8  6EFA               	movwf	pclath,c
  2217  0008CA  504E               	movf	_EUSART_FramingErrorHandler,w,c
  2218  0008CC  6EFD               	movwf	tosl,c
  2219  0008CE  504F               	movf	_EUSART_FramingErrorHandler+1,w,c
  2220  0008D0  6EFE               	movwf	tosh,c
  2221  0008D2  50F8               	movf	tblptru,w,c
  2222  0008D4  6EFF               	movwf	tosu,c
  2223  0008D6  50FA               	movf	pclath,w,c
  2224  0008D8  0012               	return		;indir
  2225  0008DA                     i2u69_49:
  2226                           
  2227                           ;mcc_generated_files/eusart.c: 189:     if(RCSTAbits.OERR){
  2228  0008DA  A2AB               	btfss	4011,1,c	;volatile
  2229  0008DC  D014               	goto	i2u71_49
  2230                           
  2231                           ;mcc_generated_files/eusart.c: 190:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  2232  0008DE  0E80               	movlw	low _eusartRxStatusBuffer
  2233  0008E0  2448               	addwf	_eusartRxHead,w,c	;volatile
  2234  0008E2  6ED9               	movwf	fsr2l,c
  2235  0008E4  6ADA               	clrf	fsr2h,c
  2236  0008E6  0E00               	movlw	high _eusartRxStatusBuffer
  2237  0008E8  22DA               	addwfc	fsr2h,f,c
  2238  0008EA  0100               	movlb	0	; () banked
  2239  0008EC  84DF               	bsf	indf2,2,c
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;mcc_generated_files/eusart.c: 191:         EUSART_OverrunErrorHandler();
  2243  0008EE  D801               	call	i2u71_48
  2244  0008F0  D00A               	goto	i2u71_49
  2245  0008F2                     i2u71_48:
  2246  0008F2  0005               	push	
  2247  0008F4  6EFA               	movwf	pclath,c
  2248  0008F6  504C               	movf	_EUSART_OverrunErrorHandler,w,c
  2249  0008F8  6EFD               	movwf	tosl,c
  2250  0008FA  504D               	movf	_EUSART_OverrunErrorHandler+1,w,c
  2251  0008FC  6EFE               	movwf	tosh,c
  2252  0008FE  50F8               	movf	tblptru,w,c
  2253  000900  6EFF               	movwf	tosu,c
  2254  000902  50FA               	movf	pclath,w,c
  2255  000904  0012               	return		;indir
  2256  000906                     i2u71_49:
  2257                           
  2258                           ;mcc_generated_files/eusart.c: 194:     if(eusartRxStatusBuffer[eusartRxHead].status){
  2259  000906  0E80               	movlw	low _eusartRxStatusBuffer
  2260  000908  2448               	addwf	_eusartRxHead,w,c	;volatile
  2261  00090A  6ED9               	movwf	fsr2l,c
  2262  00090C  6ADA               	clrf	fsr2h,c
  2263  00090E  0E00               	movlw	high _eusartRxStatusBuffer
  2264  000910  22DA               	addwfc	fsr2h,f,c
  2265  000912  50DF               	movf	indf2,w,c
  2266  000914  B4D8               	btfsc	status,2,c
  2267  000916  D00C               	goto	i2l1529
  2268                           
  2269                           ;mcc_generated_files/eusart.c: 195:         EUSART_ErrorHandler();
  2270  000918  D801               	call	i2u73_48
  2271  00091A  0012               	return	
  2272  00091C                     i2u73_48:
  2273  00091C  0005               	push	
  2274  00091E  6EFA               	movwf	pclath,c
  2275  000920  504A               	movf	_EUSART_ErrorHandler,w,c
  2276  000922  6EFD               	movwf	tosl,c
  2277  000924  504B               	movf	_EUSART_ErrorHandler+1,w,c
  2278  000926  6EFE               	movwf	tosh,c
  2279  000928  50F8               	movf	tblptru,w,c
  2280  00092A  6EFF               	movwf	tosu,c
  2281  00092C  50FA               	movf	pclath,w,c
  2282  00092E  0012               	return		;indir
  2283  000930                     i2l1529:
  2284                           
  2285                           ;mcc_generated_files/eusart.c: 197:         EUSART_RxDataHandler();
  2286  000930  ECCB  F005         	call	_EUSART_RxDataHandler	;wreg free
  2287  000934  0012               	return		;funcret
  2288  000936                     __end_of_EUSART_Receive_ISR:
  2289                           	opt callstack 0
  2290                           
  2291 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  2292 ;; Defined at:
  2293 ;;		line 219 in file "mcc_generated_files/eusart.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		None
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2307 ;;      Params:         0       0       0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_EUSART_Initialize
  2317 ;;		_EUSART_Receive_ISR
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text21
  2322  000C54                     __ptext21:
  2323                           	opt callstack 0
  2324  000C54                     _EUSART_DefaultOverrunErrorHandler:
  2325                           	opt callstack 21
  2326                           
  2327                           ;mcc_generated_files/eusart.c: 222:     RCSTAbits.CREN = 0;
  2328                           
  2329                           ;incstack = 0
  2330  000C54  98AB               	bcf	4011,4,c	;volatile
  2331                           
  2332                           ;mcc_generated_files/eusart.c: 223:     RCSTAbits.CREN = 1;
  2333  000C56  88AB               	bsf	4011,4,c	;volatile
  2334  000C58  0012               	return		;funcret
  2335  000C5A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  2336                           	opt callstack 0
  2337                           
  2338 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  2339 ;; Defined at:
  2340 ;;		line 217 in file "mcc_generated_files/eusart.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         0       0       0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_EUSART_Initialize
  2364 ;;		_EUSART_Receive_ISR
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text22
  2369  000C64                     __ptext22:
  2370                           	opt callstack 0
  2371  000C64                     _EUSART_DefaultFramingErrorHandler:
  2372                           	opt callstack 21
  2373                           
  2374                           ;incstack = 0
  2375  000C64  0012               	return		;funcret
  2376  000C66                     __end_of_EUSART_DefaultFramingErrorHandler:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _EUSART_DefaultErrorHandler *****************
  2380 ;; Defined at:
  2381 ;;		line 227 in file "mcc_generated_files/eusart.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2395 ;;      Params:         0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    1
  2402 ;; This function calls:
  2403 ;;		_EUSART_RxDataHandler
  2404 ;; This function is called by:
  2405 ;;		_EUSART_Initialize
  2406 ;;		_EUSART_Receive_ISR
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text23
  2411  000C5A                     __ptext23:
  2412                           	opt callstack 0
  2413  000C5A                     _EUSART_DefaultErrorHandler:
  2414                           	opt callstack 20
  2415                           
  2416                           ;mcc_generated_files/eusart.c: 228:     EUSART_RxDataHandler();
  2417                           
  2418                           ;incstack = 0
  2419  000C5A  ECCB  F005         	call	_EUSART_RxDataHandler	;wreg free
  2420  000C5E  0012               	return		;funcret
  2421  000C60                     __end_of_EUSART_DefaultErrorHandler:
  2422                           	opt callstack 0
  2423                           
  2424 ;; *************** function _EUSART_RxDataHandler *****************
  2425 ;; Defined at:
  2426 ;;		line 204 in file "mcc_generated_files/eusart.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2440 ;;      Params:         0       0       0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_EUSART_Receive_ISR
  2450 ;;		_EUSART_DefaultErrorHandler
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text24
  2455  000B96                     __ptext24:
  2456                           	opt callstack 0
  2457  000B96                     _EUSART_RxDataHandler:
  2458                           	opt callstack 21
  2459                           
  2460                           ;mcc_generated_files/eusart.c: 206:     if(RCREG == '\r' || RCREG == '\n') uartFlag = 1;
  2461                           
  2462                           ;incstack = 0
  2463  000B96  0E0D               	movlw	13
  2464  000B98  18AE               	xorwf	4014,w,c	;volatile
  2465  000B9A  B4D8               	btfsc	status,2,c
  2466  000B9C  D004               	goto	i2u60_40
  2467  000B9E  0E0A               	movlw	10
  2468  000BA0  18AE               	xorwf	4014,w,c	;volatile
  2469  000BA2  A4D8               	btfss	status,2,c
  2470  000BA4  D002               	goto	i2l1385
  2471  000BA6                     i2u60_40:
  2472  000BA6  0E01               	movlw	1
  2473  000BA8  6E49               	movwf	_uartFlag,c
  2474  000BAA                     i2l1385:
  2475                           
  2476                           ;mcc_generated_files/eusart.c: 209:     eusartRxBuffer[eusartRxHead++] = RCREG;
  2477  000BAA  0EA0               	movlw	low _eusartRxBuffer
  2478  000BAC  2448               	addwf	_eusartRxHead,w,c	;volatile
  2479  000BAE  6ED9               	movwf	fsr2l,c
  2480  000BB0  6ADA               	clrf	fsr2h,c
  2481  000BB2  0E00               	movlw	high _eusartRxBuffer
  2482  000BB4  22DA               	addwfc	fsr2h,f,c
  2483  000BB6  CFAE FFDF          	movff	4014,indf2	;volatile
  2484  000BBA  2A48               	incf	_eusartRxHead,f,c	;volatile
  2485                           
  2486                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2487  000BBC  0E1F               	movlw	31
  2488  000BBE  6448               	cpfsgt	_eusartRxHead,c	;volatile
  2489  000BC0  D002               	goto	i2l1393
  2490                           
  2491                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         eus
      +                          artRxHead = 0;
  2492  000BC2  0E00               	movlw	0
  2493  000BC4  6E48               	movwf	_eusartRxHead,c	;volatile
  2494  000BC6                     i2l1393:
  2495                           
  2496                           ;mcc_generated_files/eusart.c: 214:     eusartRxCount++;
  2497  000BC6  2A46               	incf	_eusartRxCount,f,c	;volatile
  2498  000BC8  0012               	return		;funcret
  2499  000BCA                     __end_of_EUSART_RxDataHandler:
  2500                           	opt callstack 0
  2501                           
  2502                           	psect	text25
  2503  000000                     __ptext25:
  2504                           	opt callstack 0
  2505                           
  2506                           	psect	rparam
  2507  0000                     
  2508                           	psect	temp
  2509  000059                     btemp:
  2510                           	opt callstack 0
  2511  000059                     	ds	1
  2512  0000                     int$flags	set	btemp
  2513  0000                     wtemp8	set	btemp+1
  2514  0000                     ttemp5	set	btemp+1
  2515  0000                     ttemp6	set	btemp+4
  2516  0000                     ttemp7	set	btemp+8
  2517                           tosu	equ	0xFFF
  2518                           tosh	equ	0xFFE
  2519                           tosl	equ	0xFFD
  2520                           stkptr	equ	0xFFC
  2521                           pclatu	equ	0xFFB
  2522                           pclath	equ	0xFFA
  2523                           pcl	equ	0xFF9
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           prodh	equ	0xFF4
  2529                           prodl	equ	0xFF3
  2530                           indf0	equ	0xFEF
  2531                           postinc0	equ	0xFEE
  2532                           postdec0	equ	0xFED
  2533                           preinc0	equ	0xFEC
  2534                           plusw0	equ	0xFEB
  2535                           fsr0h	equ	0xFEA
  2536                           fsr0l	equ	0xFE9
  2537                           wreg	equ	0xFE8
  2538                           indf1	equ	0xFE7
  2539                           postinc1	equ	0xFE6
  2540                           postdec1	equ	0xFE5
  2541                           preinc1	equ	0xFE4
  2542                           plusw1	equ	0xFE3
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           bsr	equ	0xFE0
  2546                           indf2	equ	0xFDF
  2547                           postinc2	equ	0xFDE
  2548                           postdec2	equ	0xFDD
  2549                           preinc2	equ	0xFDC
  2550                           plusw2	equ	0xFDB
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8


Data Sizes:
    Strings     33
    Constant    0
    Data        7
    BSS         109
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      88
    BANK0           160      4     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_2(CODE[7]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1310_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_2(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_2(CODE[7]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5862
                                             59 COMRAM     1     1      0
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5415
                                             55 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5244
                                             47 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    4774
                                             37 COMRAM    10     4      6
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2601
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     290
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1466
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     392
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      15        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Oct 12 10:51:56 2019

                ?_EUSART_SetRxInterruptHandler 0005                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                                            l274 068A  
                                 __CFG_CPB$OFF 000000                                   __CFG_CPD$OFF 000000  
                                          u830 0946                                            u850 098E  
                                          u930 06CC                                            u860 0B12  
                                          u940 06F6                                            u881 062E  
                                          u970 0758                                            u867 0B08  
                                          u947 06EC                         ??_EUSART_RxDataHandler 0001  
               ?_EUSART_SetFramingErrorHandler 0005                                   __CFG_BORV$18 000000  
                                          tosl 000FFD                                            wreg 000FE8  
                                 ?_EUSART_Read 0001                                   __CFG_LVP$OFF 000000  
                                         l1501 0B58                                           l1613 064E  
                                         l1631 06D6                                           l1623 06A0  
                                         l1641 072C                                           l1627 06B8  
                                         l1715 0A8E                                           l1707 0A56  
                                         l1645 0744                                           l1637 0712  
                                         l1717 0A96                                           l1575 0C06  
                                         l1663 080C                                           l1673 0852  
                                         l1587 094E                                           l1691 0A0E  
                                         l1597 0AEE                                           l1669 0848  
                                         l1693 0A32                                           l1599 0AF2  
                                         l1679 086A                                           STR_1 0601  
                                         STR_2 061B                                           u1030 0A7C  
                                         u1036 0A7E                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         _WPUB 000F7C                                           _dbuf 0060  
                                         _main 0A4E                                           _prec 0041  
                                         _nout 003D                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           _stoa 0624  
                                         btemp 0059                                           start 0050  
                                __CFG_IESO$OFF 000000                                  __CFG_MCLRE$ON 000000  
                                 ___param_bank 000000                                  ?_EUSART_Write 0001  
               __size_of_OSCILLATOR_Initialize 000A                  __end_of_OSCILLATOR_Initialize 0C24  
                                        ?_main 0001                                          ?_stoa 0010  
                                        _ANSEL 000F7E                                 __CFG_DEBUG$OFF 000000  
                                        _RCREG 000FAE                                   vfpfcnvrt@fmt 0028  
                                        _SPBRG 000FAF                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                  __CFG_PWRT$OFF 000000  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                                          _flags 0043  
                                        _fputc 0936                                          _width 003F  
                                        _putch 0C10                                          pclath 000FFA  
                                        tablat 000FF5                                          plusw1 000FE3  
                                        plusw2 000FDB                                          stoa@i 001C  
                                        stoa@l 0024                                          stoa@p 0022  
                                        stoa@s 0012                                          stoa@w 001E  
                                        ttemp5 005A                                          ttemp6 005D  
                                        ttemp7 0061                                          status 000FD8  
                                        wtemp8 005A                                 __CFG_HFOFST$ON 000000  
                               __CFG_PBADEN$ON 000000                                __initialization 0A9E  
                                 __end_of_main 0A9E                                   __end_of_stoa 0762  
                               ??_EUSART_Write 0005                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_main 003C  
                                       ??_stoa 0014                                  __activetblptr 000002  
    __end_of_EUSART_DefaultFramingErrorHandler 0C66     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 0C64                     _EUSART_OverrunErrorHandler 004C  
                                       ?_fputc 0007                                         ?_putch 0001  
                                       _ANSELH 000F7F                                         i2l1393 0BC6  
                                       i2l1385 0BAA                                         i2l1529 0930  
                               __CFG_WDTEN$OFF 000000                                         _OSCCON 000FD3  
                               __CFG_XINST$OFF 000000                                   vfprintf@cfmt 0036  
                               __CFG_STVREN$ON 000000                                         clear_0 0AC4  
                                       clear_1 0AD0                                         _printf 0BCA  
                                       _strlen 0AE4                                         fputc@c 0007  
                                 __pdataCOMRAM 0052                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0020  
                                       stoa@fp 0010                               __end_of_vfprintf 0A4E  
                __size_of_INTERRUPT_Initialize 0004                           __size_of_EUSART_Read 003C  
                            _SYSTEM_Initialize 0BF2                                     __accesstop 0060  
                      __end_of__initialization 0AD6                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 09A2  
                                __end_of_putch 0C1A                           _eusartRxStatusBuffer 0080  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 0C04                                        ??_putch 0006  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 0C10  
                                   __pnvCOMRAM 004A                    __size_of_EUSART_Receive_ISR 0098  
                 ??_EUSART_DefaultErrorHandler 0001                                        ?_printf 0038  
                                      ?_strlen 0005                                  _eusartRxCount 0046  
                           __size_of_vfpfcnvrt 013C                  __size_of_EUSART_RxDataHandler 0034  
                                      i2u60_40 0BA6                                        _OSCTUNE 000F9B  
                                      i2u71_48 08F2                                        i2u71_49 0906  
                                      i2u80_48 0028                                        i2u80_49 003C  
                                      i2u73_48 091C                                        i2u69_48 08C6  
                                      i2u69_49 08DA                       ??_EUSART_SetErrorHandler 0007  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                                      ?_vfprintf 0030  
                                 __psmallconst 0600                                        __pcinit 0A9E  
                                      __ramtop 0600                                        __ptext0 0A4E  
                                      __ptext1 0BCA                                        __ptext2 09FC  
                                      __ptext3 0762                                        __ptext4 0624  
                                      __ptext5 0AE4                                        __ptext6 0936  
                                      __ptext7 0C10                                        __ptext8 0C04  
                                      __ptext9 0BF2                                __size_of_printf 0028  
                              __size_of_strlen 0042                          _OSCILLATOR_Initialize 0C1A  
                     ??_PIN_MANAGER_Initialize 0005                     __size_of_SYSTEM_Initialize 0012  
                         end_of_initialization 0AD6          __end_of_EUSART_SetOverrunErrorHandler 0C38  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 0C2E  
                                      fputc@fp 0009                                  __Lmediumconst 0000  
                            _EUSART_Initialize 09A2                             ?_EUSART_Initialize 0001  
                            __end_of_vfpfcnvrt 089E                                      _RCSTAbits 000FAB  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                     ??_vfprintf 0036  
                                      strlen@a 0007                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                                      _TRISCbits 000F94  
                        __size_of_EUSART_Write 000C                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 09FC                                      _TXSTAbits 000FAC  
                 __end_of_INTERRUPT_Initialize 0C64             __end_of_EUSART_DefaultErrorHandler 0C60  
                   _EUSART_DefaultErrorHandler 0C5A                                    vfpfcnvrt@ap 002A  
                                  vfpfcnvrt@cp 002E                                    vfpfcnvrt@fp 0026  
                                  _BAUDCONbits 000FB8                                  __pidataCOMRAM 0C4C  
                                 _EUSART_Write 0C04                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_printf 0BF2                                 __end_of_strlen 0B26  
                          start_initialization 0A9E                __size_of_PIN_MANAGER_Initialize 0034  
                                ??_EUSART_Read 0005   EUSART_SetRxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 0032                     _EUSART_FramingErrorHandler 004E  
                       _EUSART_SetErrorHandler 0C42                               __CFG_LPT1OSC$OFF 000000  
                                     ??_printf 003C                                       ??_strlen 0007  
                                  __pbssCOMRAM 003D                                  __pcstackBANK0 00C0  
                   __end_of_EUSART_Receive_ISR 0936                     __size_of_EUSART_Initialize 005A  
             _EUSART_RxDefaultInterruptHandler 0050                            __end_of_EUSART_Read 0B62  
                 __end_of_EUSART_RxDataHandler 0BCA                         _PIN_MANAGER_Initialize 0B62  
                            __CFG_CCP2MX$PORTC 000000                           EUSART_Read@readValue 0005  
                                    __pintcode 0008                                   _eusartRxHead 0048  
                                 _eusartRxTail 0047                   ??_INTERRUPT_InterruptManager 0001  
                            __size_of_vfprintf 0052                                    __smallconst 0600  
                               __size_of_fputc 006C                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 0C60                                 _eusartRxBuffer 00A0  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _LATBbits 000F8A  
                                     _PIE1bits 000F9D                              _eusartRxLastError 0045  
          __size_of_INTERRUPT_InterruptManager 0048                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       _RCONbits 000FD0  
                             __CFG_WDTPS$32768 000000      __end_of_EUSART_DefaultOverrunErrorHandler 0C5A  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 0C54  
                                    _vfpfcnvrt 0762                                    _EUSART_Read 0B26  
                                  _INTCON2bits 000FF1                                      copy_data0 0AB2  
                        ?_INTERRUPT_Initialize 0001                                       __Hrparam 0000  
                                   vfprintf@ap 0034                                       __Lrparam 0000  
                                   vfprintf@fp 0030                             __CFG_BOREN$SBORDIS 000000  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 004A  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 0026  
                         _EUSART_RxDataHandler 0B96                                       __ptext10 0B62  
                                     __ptext11 0C1A                                       __ptext20 089E  
                                     __ptext12 0C60                                       __ptext21 0C54  
                                     __ptext13 09A2                                       __ptext22 0C64  
                                     __ptext14 0C24                                       __ptext23 0C5A  
                                     __ptext15 0C2E                                       __ptext24 0B96  
                                     __ptext16 0C38                                       __ptext25 0000  
                                     __ptext17 0C42                                       __ptext18 0B26  
                                __size_of_main 0050                                  __size_of_stoa 013E  
                      ?_EUSART_SetErrorHandler 0005                                       _uartFlag 0049  
                                    stoa@F1131 0052  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     int$flags 0059                                       _vfprintf 09FC  
           __end_of_INTERRUPT_InterruptManager 0050                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 0038          __end_of_EUSART_SetFramingErrorHandler 0C42  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 0C38  
                                   _INTCONbits 000FF2                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 0005                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 0C4C  
         __end_of_EUSART_SetRxInterruptHandler 0C2E          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 0C24                                       printf@ap 00C2  
                           _EUSART_Receive_ISR 089E  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                                  ??_vfpfcnvrt 002C                                       stoa@nuls 0015  
                          ?_EUSART_Receive_ISR 0001                             EUSART_Write@txData 0005  
               __end_of_PIN_MANAGER_Initialize 0B96                              __CFG_FOSC$INTIO67 000000  
                         ??_EUSART_Receive_ISR 0001  
