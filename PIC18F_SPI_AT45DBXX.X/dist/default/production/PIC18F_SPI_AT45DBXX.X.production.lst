

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Sep 07 00:09:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 2.05
    30                           ; Generated 20/12/2018 GMT
    31                           ; 
    32                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F45K20 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  000AA0                     __pidataCOMRAM:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for _msg2
    69  000AA0  19                 	db	low STR_2
    70  000AA1  06                 	db	high STR_2
    71                           
    72                           ;initializer for _msg1
    73  000AA2  40                 	db	low STR_1
    74  000AA3  06                 	db	high STR_1
    75  0000                     _RCREG	set	4014
    76  0000                     _PIR1bits	set	3998
    77  0000                     _TXREG	set	4013
    78  0000                     _RCSTAbits	set	4011
    79  0000                     _SPBRG	set	4015
    80  0000                     _BAUDCONbits	set	4024
    81  0000                     _TXSTAbits	set	4012
    82  0000                     _SSPBUF	set	4041
    83  0000                     _SSPCON1bits	set	4038
    84  0000                     _SSPSTATbits	set	4039
    85  0000                     _TRISCbits	set	3988
    86  0000                     _LATAbits	set	3977
    87  0000                     _TRISAbits	set	3986
    88  0000                     _ANSELH	set	3967
    89  0000                     _ANSEL	set	3966
    90  0000                     _OSCCON	set	4051
    91                           
    92                           	psect	smallconst
    93  000600                     __psmallconst:
    94                           	opt callstack 0
    95  000600  00                 	db	0
    96  000601                     STR_8:
    97  000601  4E                 	db	78	;'N'
    98  000602  4F                 	db	79	;'O'
    99  000603  20                 	db	32
   100  000604  41                 	db	65	;'A'
   101  000605  54                 	db	84	;'T'
   102  000606  34                 	db	52	;'4'
   103  000607  35                 	db	53	;'5'
   104  000608  44                 	db	68	;'D'
   105  000609  42                 	db	66	;'B'
   106  00060A  58                 	db	88	;'X'
   107  00060B  58                 	db	88	;'X'
   108  00060C  20                 	db	32
   109  00060D  44                 	db	68	;'D'
   110  00060E  45                 	db	69	;'E'
   111  00060F  54                 	db	84	;'T'
   112  000610  45                 	db	69	;'E'
   113  000611  43                 	db	67	;'C'
   114  000612  54                 	db	84	;'T'
   115  000613  45                 	db	69	;'E'
   116  000614  44                 	db	68	;'D'
   117  000615  2E                 	db	46
   118  000616  0D                 	db	13
   119  000617  0A                 	db	10
   120  000618  00                 	db	0
   121  000619                     STR_2:
   122  000619  50                 	db	80	;'P'
   123  00061A  49                 	db	73	;'I'
   124  00061B  43                 	db	67	;'C'
   125  00061C  31                 	db	49	;'1'
   126  00061D  38                 	db	56	;'8'
   127  00061E  46                 	db	70	;'F'
   128  00061F  20                 	db	32
   129  000620  54                 	db	84	;'T'
   130  000621  45                 	db	69	;'E'
   131  000622  53                 	db	83	;'S'
   132  000623  54                 	db	84	;'T'
   133  000624  49                 	db	73	;'I'
   134  000625  4E                 	db	78	;'N'
   135  000626  47                 	db	71	;'G'
   136  000627  2E                 	db	46
   137  000628  2E                 	db	46
   138  000629  2E                 	db	46
   139  00062A  0D                 	db	13
   140  00062B  0A                 	db	10
   141  00062C  00                 	db	0
   142  00062D                     STR_3:
   143  00062D  46                 	db	70	;'F'
   144  00062E  4C                 	db	76	;'L'
   145  00062F  41                 	db	65	;'A'
   146  000630  53                 	db	83	;'S'
   147  000631  48                 	db	72	;'H'
   148  000632  20                 	db	32
   149  000633  54                 	db	84	;'T'
   150  000634  45                 	db	69	;'E'
   151  000635  53                 	db	83	;'S'
   152  000636  54                 	db	84	;'T'
   153  000637  49                 	db	73	;'I'
   154  000638  4E                 	db	78	;'N'
   155  000639  47                 	db	71	;'G'
   156  00063A  2E                 	db	46
   157  00063B  2E                 	db	46
   158  00063C  2E                 	db	46
   159  00063D  0D                 	db	13
   160  00063E  0A                 	db	10
   161  00063F  00                 	db	0
   162  000640                     STR_1:
   163  000640  48                 	db	72	;'H'
   164  000641  45                 	db	69	;'E'
   165  000642  4C                 	db	76	;'L'
   166  000643  4C                 	db	76	;'L'
   167  000644  4F                 	db	79	;'O'
   168  000645  20                 	db	32
   169  000646  57                 	db	87	;'W'
   170  000647  4F                 	db	79	;'O'
   171  000648  52                 	db	82	;'R'
   172  000649  4C                 	db	76	;'L'
   173  00064A  44                 	db	68	;'D'
   174  00064B  21                 	db	33
   175  00064C  21                 	db	33
   176  00064D  21                 	db	33
   177  00064E  0D                 	db	13
   178  00064F  0A                 	db	10
   179  000650  00                 	db	0
   180  000651                     STR_4:
   181  000651  57                 	db	87	;'W'
   182  000652  52                 	db	82	;'R'
   183  000653  49                 	db	73	;'I'
   184  000654  54                 	db	84	;'T'
   185  000655  45                 	db	69	;'E'
   186  000656  3A                 	db	58	;':'
   187  000657  00                 	db	0
   188  000658                     STR_5:
   189  000658  52                 	db	82	;'R'
   190  000659  45                 	db	69	;'E'
   191  00065A  41                 	db	65	;'A'
   192  00065B  44                 	db	68	;'D'
   193  00065C  3A                 	db	58	;':'
   194  00065D  00                 	db	0
   195  0000                     
   196                           ; #config settings
   197  00065E  00                 	db	0	; dummy byte at the end
   198  0000                     
   199                           	psect	cinit
   200  000988                     __pcinit:
   201                           	opt callstack 0
   202  000988                     start_initialization:
   203                           	opt callstack 0
   204  000988                     __initialization:
   205                           	opt callstack 0
   206                           
   207                           ; Initialize objects allocated to COMRAM (4 bytes)
   208                           ; load TBLPTR registers with __pidataCOMRAM
   209  000988  0EA0               	movlw	low __pidataCOMRAM
   210  00098A  6EF6               	movwf	tblptrl,c
   211  00098C  0E0A               	movlw	high __pidataCOMRAM
   212  00098E  6EF7               	movwf	tblptrh,c
   213  000990  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   214  000992  6EF8               	movwf	tblptru,c
   215  000994  EE00  F012         	lfsr	0,__pdataCOMRAM
   216  000998  EE10 F004          	lfsr	1,4
   217  00099C                     copy_data0:
   218  00099C  0009               	tblrd		*+
   219  00099E  CFF5 FFEE          	movff	tablat,postinc0
   220  0009A2  50E5               	movf	postdec1,w,c
   221  0009A4  50E1               	movf	fsr1l,w,c
   222  0009A6  E1FA               	bnz	copy_data0
   223                           
   224                           ; Clear objects allocated to BANK1 (256 bytes)
   225  0009A8  EE01  F000         	lfsr	0,__pbssBANK1
   226  0009AC  EE11 F000          	lfsr	1,256
   227  0009B0                     clear_0:
   228  0009B0  6AEE               	clrf	postinc0,c
   229  0009B2  50E5               	movf	postdec1,w,c
   230  0009B4  50E1               	movf	fsr1l,w,c
   231  0009B6  E1FC               	bnz	clear_0
   232  0009B8  50E2               	movf	fsr1h,w,c
   233  0009BA  E1FA               	bnz	clear_0
   234  0009BC                     end_of_initialization:
   235                           	opt callstack 0
   236  0009BC                     __end_of__initialization:
   237                           	opt callstack 0
   238  0009BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  0009BE  6EF8               	movwf	tblptru,c
   240  0009C0  0100               	movlb	0
   241  0009C2  EF30  F003         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	dataCOMRAM
   244  000012                     __pdataCOMRAM:
   245                           	opt callstack 0
   246  000012                     _msg2:
   247                           	opt callstack 0
   248  000012                     	ds	2
   249  000014                     _msg1:
   250                           	opt callstack 0
   251  000014                     	ds	2
   252                           
   253                           	psect	bssBANK1
   254  000100                     __pbssBANK1:
   255                           	opt callstack 0
   256  000100                     _buffer:
   257                           	opt callstack 0
   258  000100                     	ds	256
   259                           
   260                           	psect	cstackCOMRAM
   261  000001                     __pcstackCOMRAM:
   262                           	opt callstack 0
   263  000001                     ?_strlen:
   264                           	opt callstack 0
   265  000001                     UART_putch@ch:
   266                           	opt callstack 0
   267  000001                     strlen@s:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x0
   271  000001                     	ds	1
   272  000002                     SPI_Tx@data:
   273                           	opt callstack 0
   274  000002                     UART_puts@str:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x1
   278  000002                     	ds	1
   279  000003                     flash_read_status@status:
   280                           	opt callstack 0
   281  000003                     strlen@a:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000003                     	ds	1
   286  000004                     ??_flash_wait_ready:
   287  000004                     flash_check_present@data:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x3
   291  000004                     	ds	1
   292  000005                     flash_read_page@address:
   293                           	opt callstack 0
   294  000005                     flash_write_page@address:
   295                           	opt callstack 0
   296                           
   297                           ; 4 bytes @ 0x4
   298  000005                     	ds	4
   299  000009                     flash_read_page@buffer:
   300                           	opt callstack 0
   301  000009                     flash_write_page@buffer:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x8
   305  000009                     	ds	2
   306  00000B                     flash_read_page@len:
   307                           	opt callstack 0
   308  00000B                     flash_write_page@len:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00000B                     	ds	2
   313  00000D                     ??_flash_read_page:
   314  00000D                     flash_write_page@erase_first:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0xC
   318  00000D                     	ds	1
   319  00000E                     ??_flash_write_page:
   320                           
   321                           ; 1 bytes @ 0xD
   322  00000E                     	ds	4
   323  000012                     
   324                           ; 1 bytes @ 0x11
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 12 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   344 ;;      Params:         0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called:    4
   350 ;; This function calls:
   351 ;;		_SPI_Init
   352 ;;		_UART_Init
   353 ;;		_UART_puts
   354 ;;		_flash_check_present
   355 ;;		_flash_read_page
   356 ;;		_flash_write_page
   357 ;;		_strlen
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364  000660                     __ptext0:
   365                           	opt callstack 0
   366  000660                     _main:
   367                           	opt callstack 27
   368                           
   369                           ;main.c: 14:     OSCCON = 0x72;
   370                           
   371                           ;incstack = 0
   372  000660  0E72               	movlw	114
   373  000662  6ED3               	movwf	4051,c	;volatile
   374                           
   375                           ;main.c: 16:     ANSEL = 0x0;
   376  000664  0E00               	movlw	0
   377  000666  6E7E               	movwf	3966,c	;volatile
   378                           
   379                           ;main.c: 17:     ANSELH = 0x0;
   380  000668  0E00               	movlw	0
   381  00066A  6E7F               	movwf	3967,c	;volatile
   382                           
   383                           ;main.c: 19:     SPI_Init();
   384  00066C  EC12  F005         	call	_SPI_Init	;wreg free
   385                           
   386                           ;main.c: 20:     UART_Init();
   387  000670  EC1E  F005         	call	_UART_Init	;wreg free
   388                           
   389                           ;main.c: 22:     UART_puts("FLASH TESTING...\r\n");
   390  000674  0E2D               	movlw	low STR_3
   391  000676  6E02               	movwf	UART_puts@str,c
   392  000678  0E06               	movlw	high STR_3
   393  00067A  6E03               	movwf	UART_puts@str+1,c
   394  00067C  EC9B  F004         	call	_UART_puts	;wreg free
   395                           
   396                           ;main.c: 24:     if (flash_check_present()) {
   397  000680  ECFA  F004         	call	_flash_check_present	;wreg free
   398  000684  0900               	iorlw	0
   399  000686  B4D8               	btfsc	status,2,c
   400  000688  D095               	goto	l1255
   401                           
   402                           ;main.c: 33:         UART_puts("WRITE:");
   403  00068A  0E51               	movlw	low STR_4
   404  00068C  6E02               	movwf	UART_puts@str,c
   405  00068E  0E06               	movlw	high STR_4
   406  000690  6E03               	movwf	UART_puts@str+1,c
   407  000692  EC9B  F004         	call	_UART_puts	;wreg free
   408                           
   409                           ;main.c: 34:         UART_puts((char*)msg1);
   410  000696  0E40               	movlw	low STR_1
   411  000698  6E02               	movwf	UART_puts@str,c
   412  00069A  0E06               	movlw	high STR_1
   413  00069C  6E03               	movwf	UART_puts@str+1,c
   414  00069E  EC9B  F004         	call	_UART_puts	;wreg free
   415                           
   416                           ;main.c: 35:         flash_write_page(0, (uint8_t*)msg1, strlen(msg1), 1);
   417  0006A2  0E00               	movlw	0
   418  0006A4  6E05               	movwf	flash_write_page@address,c
   419  0006A6  0E00               	movlw	0
   420  0006A8  6E06               	movwf	flash_write_page@address+1,c
   421  0006AA  0E00               	movlw	0
   422  0006AC  6E07               	movwf	flash_write_page@address+2,c
   423  0006AE  0E00               	movlw	0
   424  0006B0  6E08               	movwf	flash_write_page@address+3,c
   425  0006B2  0E40               	movlw	low STR_1
   426  0006B4  6E09               	movwf	flash_write_page@buffer,c
   427  0006B6  0E06               	movlw	high STR_1
   428  0006B8  6E0A               	movwf	flash_write_page@buffer+1,c
   429  0006BA  0E40               	movlw	low STR_1
   430  0006BC  6E01               	movwf	strlen@s,c
   431  0006BE  0E06               	movlw	high STR_1
   432  0006C0  6E02               	movwf	strlen@s+1,c
   433  0006C2  ECE3  F004         	call	_strlen	;wreg free
   434  0006C6  C001  F00B         	movff	?_strlen,flash_write_page@len
   435  0006CA  C002  F00C         	movff	?_strlen+1,flash_write_page@len+1
   436  0006CE  0E01               	movlw	1
   437  0006D0  6E0D               	movwf	flash_write_page@erase_first,c
   438  0006D2  ECE1  F003         	call	_flash_write_page	;wreg free
   439                           
   440                           ;main.c: 37:         flash_read_page(0, (uint8_t*)buffer, strlen(msg1));
   441  0006D6  0E00               	movlw	0
   442  0006D8  6E05               	movwf	flash_read_page@address,c
   443  0006DA  0E00               	movlw	0
   444  0006DC  6E06               	movwf	flash_read_page@address+1,c
   445  0006DE  0E00               	movlw	0
   446  0006E0  6E07               	movwf	flash_read_page@address+2,c
   447  0006E2  0E00               	movlw	0
   448  0006E4  6E08               	movwf	flash_read_page@address+3,c
   449  0006E6  0E00               	movlw	low _buffer
   450  0006E8  6E09               	movwf	flash_read_page@buffer,c
   451  0006EA  0E01               	movlw	high _buffer
   452  0006EC  6E0A               	movwf	flash_read_page@buffer+1,c
   453  0006EE  0E40               	movlw	low STR_1
   454  0006F0  6E01               	movwf	strlen@s,c
   455  0006F2  0E06               	movlw	high STR_1
   456  0006F4  6E02               	movwf	strlen@s+1,c
   457  0006F6  ECE3  F004         	call	_strlen	;wreg free
   458  0006FA  C001  F00B         	movff	?_strlen,flash_read_page@len
   459  0006FE  C002  F00C         	movff	?_strlen+1,flash_read_page@len+1
   460  000702  EC4A  F004         	call	_flash_read_page	;wreg free
   461                           
   462                           ;main.c: 38:         UART_puts("READ:");
   463  000706  0E58               	movlw	low STR_5
   464  000708  6E02               	movwf	UART_puts@str,c
   465  00070A  0E06               	movlw	high STR_5
   466  00070C  6E03               	movwf	UART_puts@str+1,c
   467  00070E  EC9B  F004         	call	_UART_puts	;wreg free
   468                           
   469                           ;main.c: 39:         UART_puts(buffer);
   470  000712  0E00               	movlw	low _buffer
   471  000714  6E02               	movwf	UART_puts@str,c
   472  000716  0E01               	movlw	high _buffer
   473  000718  6E03               	movwf	UART_puts@str+1,c
   474  00071A  EC9B  F004         	call	_UART_puts	;wreg free
   475                           
   476                           ;main.c: 41:         UART_puts("WRITE:");
   477  00071E  0E51               	movlw	low STR_4
   478  000720  6E02               	movwf	UART_puts@str,c
   479  000722  0E06               	movlw	high STR_4
   480  000724  6E03               	movwf	UART_puts@str+1,c
   481  000726  EC9B  F004         	call	_UART_puts	;wreg free
   482                           
   483                           ;main.c: 42:         UART_puts((char*)msg2);
   484  00072A  0E19               	movlw	low STR_2
   485  00072C  6E02               	movwf	UART_puts@str,c
   486  00072E  0E06               	movlw	high STR_2
   487  000730  6E03               	movwf	UART_puts@str+1,c
   488  000732  EC9B  F004         	call	_UART_puts	;wreg free
   489                           
   490                           ;main.c: 43:         flash_write_page((0x7FFFF/2), (uint8_t*)msg2, strlen(msg2), 1);
   491  000736  0EFF               	movlw	255
   492  000738  6E05               	movwf	flash_write_page@address,c
   493  00073A  0EFF               	movlw	255
   494  00073C  6E06               	movwf	flash_write_page@address+1,c
   495  00073E  0E03               	movlw	3
   496  000740  6E07               	movwf	flash_write_page@address+2,c
   497  000742  0E00               	movlw	0
   498  000744  6E08               	movwf	flash_write_page@address+3,c
   499  000746  0E19               	movlw	low STR_2
   500  000748  6E09               	movwf	flash_write_page@buffer,c
   501  00074A  0E06               	movlw	high STR_2
   502  00074C  6E0A               	movwf	flash_write_page@buffer+1,c
   503  00074E  0E19               	movlw	low STR_2
   504  000750  6E01               	movwf	strlen@s,c
   505  000752  0E06               	movlw	high STR_2
   506  000754  6E02               	movwf	strlen@s+1,c
   507  000756  ECE3  F004         	call	_strlen	;wreg free
   508  00075A  C001  F00B         	movff	?_strlen,flash_write_page@len
   509  00075E  C002  F00C         	movff	?_strlen+1,flash_write_page@len+1
   510  000762  0E01               	movlw	1
   511  000764  6E0D               	movwf	flash_write_page@erase_first,c
   512  000766  ECE1  F003         	call	_flash_write_page	;wreg free
   513                           
   514                           ;main.c: 45:         flash_read_page((0x7FFFF/2), (uint8_t*)buffer, strlen(msg2));
   515  00076A  0EFF               	movlw	255
   516  00076C  6E05               	movwf	flash_read_page@address,c
   517  00076E  0EFF               	movlw	255
   518  000770  6E06               	movwf	flash_read_page@address+1,c
   519  000772  0E03               	movlw	3
   520  000774  6E07               	movwf	flash_read_page@address+2,c
   521  000776  0E00               	movlw	0
   522  000778  6E08               	movwf	flash_read_page@address+3,c
   523  00077A  0E00               	movlw	low _buffer
   524  00077C  6E09               	movwf	flash_read_page@buffer,c
   525  00077E  0E01               	movlw	high _buffer
   526  000780  6E0A               	movwf	flash_read_page@buffer+1,c
   527  000782  0E19               	movlw	low STR_2
   528  000784  6E01               	movwf	strlen@s,c
   529  000786  0E06               	movlw	high STR_2
   530  000788  6E02               	movwf	strlen@s+1,c
   531  00078A  ECE3  F004         	call	_strlen	;wreg free
   532  00078E  C001  F00B         	movff	?_strlen,flash_read_page@len
   533  000792  C002  F00C         	movff	?_strlen+1,flash_read_page@len+1
   534  000796  EC4A  F004         	call	_flash_read_page	;wreg free
   535                           
   536                           ;main.c: 46:         UART_puts("READ:");
   537  00079A  0E58               	movlw	low STR_5
   538  00079C  6E02               	movwf	UART_puts@str,c
   539  00079E  0E06               	movlw	high STR_5
   540  0007A0  6E03               	movwf	UART_puts@str+1,c
   541  0007A2  EC9B  F004         	call	_UART_puts	;wreg free
   542                           
   543                           ;main.c: 47:         UART_puts(buffer);
   544  0007A6  0E00               	movlw	low _buffer
   545  0007A8  6E02               	movwf	UART_puts@str,c
   546  0007AA  0E01               	movlw	high _buffer
   547  0007AC  6E03               	movwf	UART_puts@str+1,c
   548  0007AE  EC9B  F004         	call	_UART_puts	;wreg free
   549                           
   550                           ;main.c: 49:     } else {
   551  0007B2  D006               	goto	l33
   552  0007B4                     l1255:
   553                           
   554                           ;main.c: 50:         UART_puts("NO AT45DBXX DETECTED.\r\n");
   555  0007B4  0E01               	movlw	low STR_8
   556  0007B6  6E02               	movwf	UART_puts@str,c
   557  0007B8  0E06               	movlw	high STR_8
   558  0007BA  6E03               	movwf	UART_puts@str+1,c
   559  0007BC  EC9B  F004         	call	_UART_puts	;wreg free
   560  0007C0                     l33:
   561  0007C0  D7FF               	goto	l33
   562  0007C2                     __end_of_main:
   563                           	opt callstack 0
   564                           
   565 ;; *************** function _strlen *****************
   566 ;; Defined at:
   567 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  s               2    0[COMRAM] PTR const unsigned char 
   570 ;;		 -> STR_2(20), STR_1(17), 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  a               2    2[COMRAM] PTR const unsigned char 
   573 ;;		 -> STR_2(20), STR_1(17), 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  2    0[COMRAM] unsigned int 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   583 ;;      Params:         2       0       0       0       0       0       0
   584 ;;      Locals:         2       0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597  0009C6                     __ptext1:
   598                           	opt callstack 0
   599  0009C6                     _strlen:
   600                           	opt callstack 30
   601                           
   602                           ;incstack = 0
   603  0009C6  C001  F003         	movff	strlen@s,strlen@a
   604  0009CA  C002  F004         	movff	strlen@s+1,strlen@a+1
   605  0009CE  D002               	goto	l1159
   606  0009D0                     l1157:
   607  0009D0  4A01               	infsnz	strlen@s,f,c
   608  0009D2  2A02               	incf	strlen@s+1,f,c
   609  0009D4                     l1159:
   610  0009D4  C001  FFF6         	movff	strlen@s,tblptrl
   611  0009D8  C002  FFF7         	movff	strlen@s+1,tblptrh
   612  0009DC                     	if	0	;tblptru may be non-zero
   613  0009DC                     	endif
   614  0009DC                     	if	0	;tblptru may be non-zero
   615  0009DC                     	endif
   616  0009DC  0008               	tblrd		*
   617  0009DE  50F5               	movf	tablat,w,c
   618  0009E0  0900               	iorlw	0
   619  0009E2  A4D8               	btfss	status,2,c
   620  0009E4  D7F5               	goto	l1157
   621  0009E6  5003               	movf	strlen@a,w,c
   622  0009E8  5C01               	subwf	strlen@s,w,c
   623  0009EA  6E01               	movwf	?_strlen,c
   624  0009EC  5004               	movf	strlen@a+1,w,c
   625  0009EE  5802               	subwfb	strlen@s+1,w,c
   626  0009F0  6E02               	movwf	?_strlen+1,c
   627  0009F2  0012               	return		;funcret
   628  0009F4                     __end_of_strlen:
   629                           	opt callstack 0
   630                           
   631 ;; *************** function _flash_write_page *****************
   632 ;; Defined at:
   633 ;;		line 107 in file "at45dbxx.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  address         4    4[COMRAM] unsigned long 
   636 ;;  buffer          2    8[COMRAM] PTR unsigned char 
   637 ;;		 -> flash_test_memory@buffer(256), STR_2(20), STR_1(17), 
   638 ;;  len             2   10[COMRAM] unsigned int 
   639 ;;  erase_first     1   12[COMRAM] unsigned char 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   651 ;;      Params:         9       0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0
   653 ;;      Temps:          4       0       0       0       0       0       0
   654 ;;      Totals:        13       0       0       0       0       0       0
   655 ;;Total ram usage:       13 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    3
   658 ;; This function calls:
   659 ;;		_SPI_Deselect
   660 ;;		_SPI_Select
   661 ;;		_SPI_Tx
   662 ;;		_flash_wait_ready
   663 ;; This function is called by:
   664 ;;		_main
   665 ;;		_flash_test_memory
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text2
   670  0007C2                     __ptext2:
   671                           	opt callstack 0
   672  0007C2                     _flash_write_page:
   673                           	opt callstack 27
   674                           
   675                           ;at45dbxx.c: 109:     SPI_Select();
   676                           
   677                           ;incstack = 0
   678  0007C2  EC38  F005         	call	_SPI_Select	;wreg free
   679                           
   680                           ;at45dbxx.c: 111:     SPI_Tx(0x84);
   681  0007C6  0E84               	movlw	132
   682  0007C8  EC31  F005         	call	_SPI_Tx
   683                           
   684                           ;at45dbxx.c: 112:     SPI_Tx(0x00);
   685  0007CC  0E00               	movlw	0
   686  0007CE  EC31  F005         	call	_SPI_Tx
   687                           
   688                           ;at45dbxx.c: 113:     SPI_Tx(0x00);
   689  0007D2  0E00               	movlw	0
   690  0007D4  EC31  F005         	call	_SPI_Tx
   691                           
   692                           ;at45dbxx.c: 114:     SPI_Tx(0x00);
   693  0007D8  0E00               	movlw	0
   694  0007DA  EC31  F005         	call	_SPI_Tx
   695                           
   696                           ;at45dbxx.c: 117:     while (len > 0) {
   697  0007DE  D017               	goto	l1181
   698  0007E0                     l1175:
   699                           
   700                           ;at45dbxx.c: 118:         SPI_Tx(*buffer++);
   701  0007E0  C009  FFF6         	movff	flash_write_page@buffer,tblptrl
   702  0007E4  C00A  FFF7         	movff	flash_write_page@buffer+1,tblptrh
   703  0007E8  6AF8               	clrf	tblptru,c
   704  0007EA  0E05               	movlw	(high __ramtop+-1)
   705  0007EC  64F7               	cpfsgt	tblptrh,c
   706  0007EE  D003               	bra	u367
   707  0007F0  0008               	tblrd		*
   708  0007F2  50F5               	movf	tablat,w,c
   709  0007F4  D005               	bra	u360
   710  0007F6                     u367:
   711  0007F6  CFF6 FFE9          	movff	tblptrl,fsr0l
   712  0007FA  CFF7 FFEA          	movff	tblptrh,fsr0h
   713  0007FE  50EF               	movf	indf0,w,c
   714  000800                     u360:
   715  000800  EC31  F005         	call	_SPI_Tx
   716  000804  4A09               	infsnz	flash_write_page@buffer,f,c
   717  000806  2A0A               	incf	flash_write_page@buffer+1,f,c
   718                           
   719                           ;at45dbxx.c: 119:         len--;
   720  000808  060B               	decf	flash_write_page@len,f,c
   721  00080A  A0D8               	btfss	status,0,c
   722  00080C  060C               	decf	flash_write_page@len+1,f,c
   723  00080E                     l1181:
   724                           
   725                           ;at45dbxx.c: 117:     while (len > 0) {
   726  00080E  500B               	movf	flash_write_page@len,w,c
   727  000810  100C               	iorwf	flash_write_page@len+1,w,c
   728  000812  A4D8               	btfss	status,2,c
   729  000814  D7E5               	goto	l1175
   730                           
   731                           ;at45dbxx.c: 122:     SPI_Deselect();
   732  000816  EC44  F005         	call	_SPI_Deselect	;wreg free
   733                           
   734                           ;at45dbxx.c: 125:     SPI_Select();
   735  00081A  EC38  F005         	call	_SPI_Select	;wreg free
   736                           
   737                           ;at45dbxx.c: 127:     if (erase_first) {
   738  00081E  500D               	movf	flash_write_page@erase_first,w,c
   739  000820  B4D8               	btfsc	status,2,c
   740  000822  D004               	goto	l1189
   741                           
   742                           ;at45dbxx.c: 128:         SPI_Tx(0x83);
   743  000824  0E83               	movlw	131
   744  000826  EC31  F005         	call	_SPI_Tx
   745                           
   746                           ;at45dbxx.c: 129:     } else {
   747  00082A  D003               	goto	l1191
   748  00082C                     l1189:
   749                           
   750                           ;at45dbxx.c: 130:         SPI_Tx(0x88);
   751  00082C  0E88               	movlw	136
   752  00082E  EC31  F005         	call	_SPI_Tx
   753  000832                     l1191:
   754                           
   755                           ;at45dbxx.c: 133:     SPI_Tx((uint8_t) ((address >> 15) & 0xff));
   756  000832  C005  F00E         	movff	flash_write_page@address,??_flash_write_page
   757  000836  C006  F00F         	movff	flash_write_page@address+1,??_flash_write_page+1
   758  00083A  C007  F010         	movff	flash_write_page@address+2,??_flash_write_page+2
   759  00083E  C008  F011         	movff	flash_write_page@address+3,??_flash_write_page+3
   760  000842  0E10               	movlw	16
   761  000844  D005               	goto	u390
   762  000846                     u395:
   763  000846  90D8               	bcf	status,0,c
   764  000848  3211               	rrcf	??_flash_write_page+3,f,c
   765  00084A  3210               	rrcf	??_flash_write_page+2,f,c
   766  00084C  320F               	rrcf	??_flash_write_page+1,f,c
   767  00084E  320E               	rrcf	??_flash_write_page,f,c
   768  000850                     u390:
   769  000850  2EE8               	decfsz	wreg,f,c
   770  000852  D7F9               	goto	u395
   771  000854  500E               	movf	??_flash_write_page,w,c
   772  000856  EC31  F005         	call	_SPI_Tx
   773                           
   774                           ;at45dbxx.c: 134:     SPI_Tx((uint8_t) ((address >> 7) & 0xfe));
   775  00085A  C005  F00E         	movff	flash_write_page@address,??_flash_write_page
   776  00085E  C006  F00F         	movff	flash_write_page@address+1,??_flash_write_page+1
   777  000862  C007  F010         	movff	flash_write_page@address+2,??_flash_write_page+2
   778  000866  C008  F011         	movff	flash_write_page@address+3,??_flash_write_page+3
   779  00086A  0E08               	movlw	8
   780  00086C  D005               	goto	u400
   781  00086E                     u405:
   782  00086E  90D8               	bcf	status,0,c
   783  000870  3211               	rrcf	??_flash_write_page+3,f,c
   784  000872  3210               	rrcf	??_flash_write_page+2,f,c
   785  000874  320F               	rrcf	??_flash_write_page+1,f,c
   786  000876  320E               	rrcf	??_flash_write_page,f,c
   787  000878                     u400:
   788  000878  2EE8               	decfsz	wreg,f,c
   789  00087A  D7F9               	goto	u405
   790  00087C  500E               	movf	??_flash_write_page,w,c
   791  00087E  0BFE               	andlw	254
   792  000880  EC31  F005         	call	_SPI_Tx
   793                           
   794                           ;at45dbxx.c: 135:     SPI_Tx(0x00);
   795  000884  0E00               	movlw	0
   796  000886  EC31  F005         	call	_SPI_Tx
   797                           
   798                           ;at45dbxx.c: 137:     SPI_Deselect();
   799  00088A  EC44  F005         	call	_SPI_Deselect	;wreg free
   800                           
   801                           ;at45dbxx.c: 138:     flash_wait_ready();
   802  00088E  EC29  F005         	call	_flash_wait_ready	;wreg free
   803  000892  0012               	return		;funcret
   804  000894                     __end_of_flash_write_page:
   805                           	opt callstack 0
   806                           
   807 ;; *************** function _flash_wait_ready *****************
   808 ;; Defined at:
   809 ;;		line 40 in file "at45dbxx.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         0       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0
   825 ;;      Temps:          1       0       0       0       0       0       0
   826 ;;      Totals:         1       0       0       0       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    2
   830 ;; This function calls:
   831 ;;		_flash_read_status
   832 ;; This function is called by:
   833 ;;		_flash_write_page
   834 ;;		_flash_erase_all
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text3
   839  000A52                     __ptext3:
   840                           	opt callstack 0
   841  000A52                     _flash_wait_ready:
   842                           	opt callstack 27
   843                           
   844                           ;at45dbxx.c: 41:     while ((flash_read_status() & 0x80) == 0) {
   845                           
   846                           ;incstack = 0
   847  000A52  D001               	goto	l905
   848  000A54                     l164:
   849  000A54  0004               	clrwdt		;# 
   850  000A56                     l905:
   851                           
   852                           ;at45dbxx.c: 41:     while ((flash_read_status() & 0x80) == 0) {
   853  000A56  EC06  F005         	call	_flash_read_status	;wreg free
   854  000A5A  6E04               	movwf	??_flash_wait_ready& (0+255),c
   855  000A5C  BE04               	btfsc	??_flash_wait_ready,7,c
   856  000A5E  0012               	return	
   857  000A60  D7F9               	goto	l164
   858  000A62                     __end_of_flash_wait_ready:
   859                           	opt callstack 0
   860                           
   861 ;; *************** function _flash_read_page *****************
   862 ;; Defined at:
   863 ;;		line 84 in file "at45dbxx.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  address         4    4[COMRAM] unsigned long 
   866 ;;  buffer          2    8[COMRAM] PTR unsigned char 
   867 ;;		 -> flash_test_memory@buffer(256), buffer(256), 
   868 ;;  len             2   10[COMRAM] unsigned int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         8       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0
   882 ;;      Temps:          4       0       0       0       0       0       0
   883 ;;      Totals:        12       0       0       0       0       0       0
   884 ;;Total ram usage:       12 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    1
   887 ;; This function calls:
   888 ;;		_SPI_Deselect
   889 ;;		_SPI_Rx
   890 ;;		_SPI_Select
   891 ;;		_SPI_Tx
   892 ;; This function is called by:
   893 ;;		_main
   894 ;;		_flash_test_memory
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text4
   899  000894                     __ptext4:
   900                           	opt callstack 0
   901  000894                     _flash_read_page:
   902                           	opt callstack 29
   903                           
   904                           ;at45dbxx.c: 86:     SPI_Select();
   905                           
   906                           ;incstack = 0
   907  000894  EC38  F005         	call	_SPI_Select	;wreg free
   908                           
   909                           ;at45dbxx.c: 88:     SPI_Tx(0xd2);
   910  000898  0ED2               	movlw	210
   911  00089A  EC31  F005         	call	_SPI_Tx
   912                           
   913                           ;at45dbxx.c: 89:     SPI_Tx((uint8_t) ((address >> 15) & 0xff));
   914  00089E  C005  F00D         	movff	flash_read_page@address,??_flash_read_page
   915  0008A2  C006  F00E         	movff	flash_read_page@address+1,??_flash_read_page+1
   916  0008A6  C007  F00F         	movff	flash_read_page@address+2,??_flash_read_page+2
   917  0008AA  C008  F010         	movff	flash_read_page@address+3,??_flash_read_page+3
   918  0008AE  0E10               	movlw	16
   919  0008B0  D005               	goto	u410
   920  0008B2                     u415:
   921  0008B2  90D8               	bcf	status,0,c
   922  0008B4  3210               	rrcf	??_flash_read_page+3,f,c
   923  0008B6  320F               	rrcf	??_flash_read_page+2,f,c
   924  0008B8  320E               	rrcf	??_flash_read_page+1,f,c
   925  0008BA  320D               	rrcf	??_flash_read_page,f,c
   926  0008BC                     u410:
   927  0008BC  2EE8               	decfsz	wreg,f,c
   928  0008BE  D7F9               	goto	u415
   929  0008C0  500D               	movf	??_flash_read_page,w,c
   930  0008C2  EC31  F005         	call	_SPI_Tx
   931                           
   932                           ;at45dbxx.c: 90:     SPI_Tx((uint8_t) ((address >> 7) & 0xfe));
   933  0008C6  C005  F00D         	movff	flash_read_page@address,??_flash_read_page
   934  0008CA  C006  F00E         	movff	flash_read_page@address+1,??_flash_read_page+1
   935  0008CE  C007  F00F         	movff	flash_read_page@address+2,??_flash_read_page+2
   936  0008D2  C008  F010         	movff	flash_read_page@address+3,??_flash_read_page+3
   937  0008D6  0E08               	movlw	8
   938  0008D8  D005               	goto	u420
   939  0008DA                     u425:
   940  0008DA  90D8               	bcf	status,0,c
   941  0008DC  3210               	rrcf	??_flash_read_page+3,f,c
   942  0008DE  320F               	rrcf	??_flash_read_page+2,f,c
   943  0008E0  320E               	rrcf	??_flash_read_page+1,f,c
   944  0008E2  320D               	rrcf	??_flash_read_page,f,c
   945  0008E4                     u420:
   946  0008E4  2EE8               	decfsz	wreg,f,c
   947  0008E6  D7F9               	goto	u425
   948  0008E8  500D               	movf	??_flash_read_page,w,c
   949  0008EA  0BFE               	andlw	254
   950  0008EC  EC31  F005         	call	_SPI_Tx
   951                           
   952                           ;at45dbxx.c: 91:     SPI_Tx(0x00);
   953  0008F0  0E00               	movlw	0
   954  0008F2  EC31  F005         	call	_SPI_Tx
   955                           
   956                           ;at45dbxx.c: 93:     SPI_Tx(0x00);
   957  0008F6  0E00               	movlw	0
   958  0008F8  EC31  F005         	call	_SPI_Tx
   959                           
   960                           ;at45dbxx.c: 94:     SPI_Tx(0x00);
   961  0008FC  0E00               	movlw	0
   962  0008FE  EC31  F005         	call	_SPI_Tx
   963                           
   964                           ;at45dbxx.c: 95:     SPI_Tx(0x00);
   965  000902  0E00               	movlw	0
   966  000904  EC31  F005         	call	_SPI_Tx
   967                           
   968                           ;at45dbxx.c: 96:     SPI_Tx(0x00);
   969  000908  0E00               	movlw	0
   970  00090A  EC31  F005         	call	_SPI_Tx
   971                           
   972                           ;at45dbxx.c: 99:     while (len > 0) {
   973  00090E  D00C               	goto	l1223
   974  000910                     l1217:
   975                           
   976                           ;at45dbxx.c: 100:         *buffer++ = SPI_Rx();
   977  000910  EC3E  F005         	call	_SPI_Rx	;wreg free
   978  000914  C009  FFD9         	movff	flash_read_page@buffer,fsr2l
   979  000918  C00A  FFDA         	movff	flash_read_page@buffer+1,fsr2h
   980  00091C  6EDF               	movwf	indf2,c
   981  00091E  4A09               	infsnz	flash_read_page@buffer,f,c
   982  000920  2A0A               	incf	flash_read_page@buffer+1,f,c
   983                           
   984                           ;at45dbxx.c: 101:         len--;
   985  000922  060B               	decf	flash_read_page@len,f,c
   986  000924  A0D8               	btfss	status,0,c
   987  000926  060C               	decf	flash_read_page@len+1,f,c
   988  000928                     l1223:
   989                           
   990                           ;at45dbxx.c: 99:     while (len > 0) {
   991  000928  500B               	movf	flash_read_page@len,w,c
   992  00092A  100C               	iorwf	flash_read_page@len+1,w,c
   993  00092C  A4D8               	btfss	status,2,c
   994  00092E  D7F0               	goto	l1217
   995                           
   996                           ;at45dbxx.c: 104:     SPI_Deselect();
   997  000930  EC44  F005         	call	_SPI_Deselect	;wreg free
   998  000934  0012               	return		;funcret
   999  000936                     __end_of_flash_read_page:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _flash_check_present *****************
  1003 ;; Defined at:
  1004 ;;		line 58 in file "at45dbxx.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  data            1    3[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      unsigned char 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1018 ;;      Params:         0       0       0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    2
  1025 ;; This function calls:
  1026 ;;		_flash_read_status
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text5
  1033  0009F4                     __ptext5:
  1034                           	opt callstack 0
  1035  0009F4                     _flash_check_present:
  1036                           	opt callstack 28
  1037                           
  1038                           ;at45dbxx.c: 59:     uint8_t data;;at45dbxx.c: 60:     data = flash_read_status();
  1039                           
  1040                           ;incstack = 0
  1041  0009F4  EC06  F005         	call	_flash_read_status	;wreg free
  1042  0009F8  6E04               	movwf	flash_check_present@data,c
  1043                           
  1044                           ;at45dbxx.c: 62:     if ((data & 0x3c) == 0x1c)
  1045  0009FA  5004               	movf	flash_check_present@data,w,c
  1046  0009FC  0B3C               	andlw	60
  1047  0009FE  0A1C               	xorlw	28
  1048  000A00  A4D8               	btfss	status,2,c
  1049  000A02  D002               	goto	l941
  1050                           
  1051                           ;at45dbxx.c: 63:         return (1);
  1052  000A04  0E01               	movlw	1
  1053  000A06  0012               	return	
  1054  000A08                     l941:
  1055                           
  1056                           ;at45dbxx.c: 65:         return (0);
  1057  000A08  0E00               	movlw	0
  1058  000A0A  0012               	return		;funcret
  1059  000A0C                     __end_of_flash_check_present:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _flash_read_status *****************
  1063 ;; Defined at:
  1064 ;;		line 46 in file "at45dbxx.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  status          1    2[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      unsigned char 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         0       0       0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    1
  1085 ;; This function calls:
  1086 ;;		_SPI_Deselect
  1087 ;;		_SPI_Rx
  1088 ;;		_SPI_Select
  1089 ;;		_SPI_Tx
  1090 ;; This function is called by:
  1091 ;;		_flash_wait_ready
  1092 ;;		_flash_check_present
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text6
  1097  000A0C                     __ptext6:
  1098                           	opt callstack 0
  1099  000A0C                     _flash_read_status:
  1100                           	opt callstack 27
  1101                           
  1102                           ;at45dbxx.c: 47:     uint8_t status;;at45dbxx.c: 49:     SPI_Select();
  1103                           
  1104                           ;incstack = 0
  1105  000A0C  EC38  F005         	call	_SPI_Select	;wreg free
  1106                           
  1107                           ;at45dbxx.c: 51:     SPI_Tx(0xD7);
  1108  000A10  0ED7               	movlw	215
  1109  000A12  EC31  F005         	call	_SPI_Tx
  1110                           
  1111                           ;at45dbxx.c: 52:     status = SPI_Rx();
  1112  000A16  EC3E  F005         	call	_SPI_Rx	;wreg free
  1113  000A1A  6E03               	movwf	flash_read_status@status,c
  1114                           
  1115                           ;at45dbxx.c: 54:     SPI_Deselect();
  1116  000A1C  EC44  F005         	call	_SPI_Deselect	;wreg free
  1117                           
  1118                           ;at45dbxx.c: 55:     return (status);
  1119  000A20  5003               	movf	flash_read_status@status,w,c
  1120  000A22  0012               	return		;funcret
  1121  000A24                     __end_of_flash_read_status:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _SPI_Tx *****************
  1125 ;; Defined at:
  1126 ;;		line 28 in file "spi_master.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  data            1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  data            1    1[COMRAM] unsigned char 
  1131 ;;  dummy           1    0        unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         2       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0
  1144 ;;      Totals:         2       0       0       0       0       0       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_flash_read_status
  1151 ;;		_flash_read_page
  1152 ;;		_flash_write_page
  1153 ;;		_SPI_TxBuffer
  1154 ;;		_flash_erase_all
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text7
  1159  000A62                     __ptext7:
  1160                           	opt callstack 0
  1161  000A62                     _SPI_Tx:
  1162                           	opt callstack 27
  1163                           
  1164                           ;incstack = 0
  1165                           ;SPI_Tx@data stored from wreg
  1166  000A62  6E02               	movwf	SPI_Tx@data,c
  1167                           
  1168                           ;spi_master.c: 29:     uint8_t dummy;;spi_master.c: 30:     SSPBUF = data;
  1169  000A64  C002  FFC9         	movff	SPI_Tx@data,4041	;volatile
  1170  000A68                     l62:
  1171  000A68  A0C7               	btfss	4039,0,c	;volatile
  1172  000A6A  D7FE               	goto	l62
  1173  000A6C  50C9               	movf	4041,w,c	;volatile
  1174  000A6E  0012               	return		;funcret
  1175  000A70                     __end_of_SPI_Tx:
  1176                           	opt callstack 0
  1177                           
  1178 ;; *************** function _SPI_Select *****************
  1179 ;; Defined at:
  1180 ;;		line 53 in file "spi_master.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		None
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_flash_read_status
  1204 ;;		_flash_read_page
  1205 ;;		_flash_write_page
  1206 ;;		_flash_erase_all
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text8
  1211  000A70                     __ptext8:
  1212                           	opt callstack 0
  1213  000A70                     _SPI_Select:
  1214                           	opt callstack 27
  1215                           
  1216                           ;spi_master.c: 54:     LATAbits.LATA5 = 0;
  1217                           
  1218                           ;incstack = 0
  1219  000A70  9A89               	bcf	3977,5,c	;volatile
  1220                           
  1221                           ;spi_master.c: 55:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  1222  000A72  F000 F000          	nop2		;2 cycle nop
  1223  000A76  F000 F000          	nop2		;2 cycle nop
  1224  000A7A  0012               	return		;funcret
  1225  000A7C                     __end_of_SPI_Select:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function _SPI_Rx *****************
  1229 ;; Defined at:
  1230 ;;		line 22 in file "spi_master.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_flash_read_status
  1254 ;;		_flash_read_page
  1255 ;;		_SPI_RxBuffer
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text9
  1260  000A7C                     __ptext9:
  1261                           	opt callstack 0
  1262  000A7C                     _SPI_Rx:
  1263                           	opt callstack 27
  1264                           
  1265                           ;spi_master.c: 23:     SSPBUF = 0x00;
  1266                           
  1267                           ;incstack = 0
  1268  000A7C  0E00               	movlw	0
  1269  000A7E  6EC9               	movwf	4041,c	;volatile
  1270  000A80                     l56:
  1271  000A80  A0C7               	btfss	4039,0,c	;volatile
  1272  000A82  D7FE               	goto	l56
  1273                           
  1274                           ;spi_master.c: 25:     return SSPBUF;
  1275  000A84  50C9               	movf	4041,w,c	;volatile
  1276  000A86  0012               	return		;funcret
  1277  000A88                     __end_of_SPI_Rx:
  1278                           	opt callstack 0
  1279                           
  1280 ;; *************** function _SPI_Deselect *****************
  1281 ;; Defined at:
  1282 ;;		line 58 in file "spi_master.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		None
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1296 ;;      Params:         0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_flash_read_status
  1306 ;;		_flash_read_page
  1307 ;;		_flash_write_page
  1308 ;;		_flash_erase_all
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text10
  1313  000A88                     __ptext10:
  1314                           	opt callstack 0
  1315  000A88                     _SPI_Deselect:
  1316                           	opt callstack 27
  1317                           
  1318                           ;spi_master.c: 59:     LATAbits.LATA5 = 1;
  1319                           
  1320                           ;incstack = 0
  1321  000A88  8A89               	bsf	3977,5,c	;volatile
  1322                           
  1323                           ;spi_master.c: 60:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  1324  000A8A  F000 F000          	nop2		;2 cycle nop
  1325  000A8E  F000 F000          	nop2		;2 cycle nop
  1326  000A92  0012               	return		;funcret
  1327  000A94                     __end_of_SPI_Deselect:
  1328                           	opt callstack 0
  1329                           
  1330 ;; *************** function _UART_puts *****************
  1331 ;; Defined at:
  1332 ;;		line 25 in file "uart.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  str             2    1[COMRAM] PTR unsigned char 
  1335 ;;		 -> STR_8(24), STR_7(6), STR_6(7), STR_5(6), 
  1336 ;;		 -> buffer(256), STR_4(7), STR_3(19), STR_2(20), 
  1337 ;;		 -> STR_1(17), 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         2       0       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         2       0       0       0       0       0       0
  1353 ;;Total ram usage:        2 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		_UART_putch
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text11
  1364  000936                     __ptext11:
  1365                           	opt callstack 0
  1366  000936                     _UART_puts:
  1367                           	opt callstack 29
  1368                           
  1369                           ;uart.c: 26:     while (*str != 0) {
  1370                           
  1371                           ;incstack = 0
  1372  000936  D014               	goto	l1153
  1373  000938                     l1149:
  1374                           
  1375                           ;uart.c: 27:         UART_putch(*str);
  1376  000938  C002  FFF6         	movff	UART_puts@str,tblptrl
  1377  00093C  C003  FFF7         	movff	UART_puts@str+1,tblptrh
  1378  000940  6AF8               	clrf	tblptru,c
  1379  000942  0E05               	movlw	(high __ramtop+-1)
  1380  000944  64F7               	cpfsgt	tblptrh,c
  1381  000946  D003               	bra	u327
  1382  000948  0008               	tblrd		*
  1383  00094A  50F5               	movf	tablat,w,c
  1384  00094C  D005               	bra	u320
  1385  00094E                     u327:
  1386  00094E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1387  000952  CFF7 FFEA          	movff	tblptrh,fsr0h
  1388  000956  50EF               	movf	indf0,w,c
  1389  000958                     u320:
  1390  000958  EC4A  F005         	call	_UART_putch
  1391                           
  1392                           ;uart.c: 28:         str++;
  1393  00095C  4A02               	infsnz	UART_puts@str,f,c
  1394  00095E  2A03               	incf	UART_puts@str+1,f,c
  1395  000960                     l1153:
  1396                           
  1397                           ;uart.c: 26:     while (*str != 0) {
  1398  000960  C002  FFF6         	movff	UART_puts@str,tblptrl
  1399  000964  C003  FFF7         	movff	UART_puts@str+1,tblptrh
  1400  000968  6AF8               	clrf	tblptru,c
  1401  00096A  0E05               	movlw	(high __ramtop+-1)
  1402  00096C  64F7               	cpfsgt	tblptrh,c
  1403  00096E  D003               	bra	u337
  1404  000970  0008               	tblrd		*
  1405  000972  50F5               	movf	tablat,w,c
  1406  000974  D005               	bra	u330
  1407  000976                     u337:
  1408  000976  CFF6 FFE9          	movff	tblptrl,fsr0l
  1409  00097A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1410  00097E  50EF               	movf	indf0,w,c
  1411  000980                     u330:
  1412  000980  0900               	iorlw	0
  1413  000982  B4D8               	btfsc	status,2,c
  1414  000984  0012               	return	
  1415  000986  D7D8               	goto	l1149
  1416  000988                     __end_of_UART_puts:
  1417                           	opt callstack 0
  1418                           
  1419 ;; *************** function _UART_putch *****************
  1420 ;; Defined at:
  1421 ;;		line 20 in file "uart.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  ch              1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  ch              1    0[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_UART_puts
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text12
  1449  000A94                     __ptext12:
  1450                           	opt callstack 0
  1451  000A94                     _UART_putch:
  1452                           	opt callstack 29
  1453                           
  1454                           ;incstack = 0
  1455                           ;UART_putch@ch stored from wreg
  1456  000A94  6E01               	movwf	UART_putch@ch,c
  1457  000A96                     
  1458                           ;uart.c: 21:     while (!TXSTAbits.TRMT);
  1459  000A96  A2AC               	btfss	4012,1,c	;volatile
  1460  000A98  D7FE               	goto	l899
  1461                           
  1462                           ;uart.c: 22:     TXREG = ch;
  1463  000A9A  C001  FFAD         	movff	UART_putch@ch,4013	;volatile
  1464  000A9E  0012               	return		;funcret
  1465  000AA0                     __end_of_UART_putch:
  1466                           	opt callstack 0
  1467                           
  1468 ;; *************** function _UART_Init *****************
  1469 ;; Defined at:
  1470 ;;		line 5 in file "uart.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1484 ;;      Params:         0       0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text13
  1498  000A3C                     __ptext13:
  1499                           	opt callstack 0
  1500  000A3C                     _UART_Init:
  1501                           	opt callstack 30
  1502                           
  1503                           ;uart.c: 6:     TRISCbits.RC6 = 1;
  1504                           
  1505                           ;incstack = 0
  1506  000A3C  8C94               	bsf	3988,6,c	;volatile
  1507                           
  1508                           ;uart.c: 7:     TRISCbits.RC7 = 1;
  1509  000A3E  8E94               	bsf	3988,7,c	;volatile
  1510                           
  1511                           ;uart.c: 9:     TXSTAbits.SYNC = 0;
  1512  000A40  98AC               	bcf	4012,4,c	;volatile
  1513                           
  1514                           ;uart.c: 11:     BAUDCONbits.BRG16 = 0;
  1515  000A42  96B8               	bcf	4024,3,c	;volatile
  1516                           
  1517                           ;uart.c: 12:     TXSTAbits.BRGH = 1;
  1518  000A44  84AC               	bsf	4012,2,c	;volatile
  1519                           
  1520                           ;uart.c: 13:     SPBRG = 16000000 / (16 * (115200 + 1));
  1521  000A46  0E08               	movlw	8
  1522  000A48  6EAF               	movwf	4015,c	;volatile
  1523                           
  1524                           ;uart.c: 15:     RCSTAbits.SPEN = 1;
  1525  000A4A  8EAB               	bsf	4011,7,c	;volatile
  1526                           
  1527                           ;uart.c: 16:     TXSTAbits.TXEN = 1;
  1528  000A4C  8AAC               	bsf	4012,5,c	;volatile
  1529                           
  1530                           ;uart.c: 17:     RCSTAbits.CREN = 1;
  1531  000A4E  88AB               	bsf	4011,4,c	;volatile
  1532  000A50  0012               	return		;funcret
  1533  000A52                     __end_of_UART_Init:
  1534                           	opt callstack 0
  1535                           
  1536 ;; *************** function _SPI_Init *****************
  1537 ;; Defined at:
  1538 ;;		line 6 in file "spi_master.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text14
  1566  000A24                     __ptext14:
  1567                           	opt callstack 0
  1568  000A24                     _SPI_Init:
  1569                           	opt callstack 30
  1570                           
  1571                           ;spi_master.c: 7:     TRISAbits.RA5 = 0;
  1572                           
  1573                           ;incstack = 0
  1574  000A24  9A92               	bcf	3986,5,c	;volatile
  1575                           
  1576                           ;spi_master.c: 8:     LATAbits.LATA5 = 1;
  1577  000A26  8A89               	bsf	3977,5,c	;volatile
  1578                           
  1579                           ;spi_master.c: 10:     TRISCbits.RC3 = 0;
  1580  000A28  9694               	bcf	3988,3,c	;volatile
  1581                           
  1582                           ;spi_master.c: 11:     TRISCbits.RC4 = 1;
  1583  000A2A  8894               	bsf	3988,4,c	;volatile
  1584                           
  1585                           ;spi_master.c: 12:     TRISCbits.RC5 = 0;
  1586  000A2C  9A94               	bcf	3988,5,c	;volatile
  1587                           
  1588                           ;spi_master.c: 14:     SSPSTATbits.SMP = 0;
  1589  000A2E  9EC7               	bcf	4039,7,c	;volatile
  1590                           
  1591                           ;spi_master.c: 15:     SSPSTATbits.CKE = 1;
  1592  000A30  8CC7               	bsf	4039,6,c	;volatile
  1593                           
  1594                           ;spi_master.c: 17:     SSPCON1bits.CKP = 0;
  1595  000A32  98C6               	bcf	4038,4,c	;volatile
  1596                           
  1597                           ;spi_master.c: 18:     SSPCON1bits.SSPM = 0;
  1598  000A34  0EF0               	movlw	-16
  1599  000A36  16C6               	andwf	4038,f,c	;volatile
  1600                           
  1601                           ;spi_master.c: 19:     SSPCON1bits.SSPEN = 1;
  1602  000A38  8AC6               	bsf	4038,5,c	;volatile
  1603  000A3A  0012               	return		;funcret
  1604  000A3C                     __end_of_SPI_Init:
  1605                           	opt callstack 0
  1606                           
  1607                           	psect	rparam
  1608  0000                     tosu	equ	0xFFF
  1609                           tosh	equ	0xFFE
  1610                           tosl	equ	0xFFD
  1611                           stkptr	equ	0xFFC
  1612                           pclatu	equ	0xFFB
  1613                           pclath	equ	0xFFA
  1614                           pcl	equ	0xFF9
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodh	equ	0xFF4
  1620                           prodl	equ	0xFF3
  1621                           indf0	equ	0xFEF
  1622                           postinc0	equ	0xFEE
  1623                           postdec0	equ	0xFED
  1624                           preinc0	equ	0xFEC
  1625                           plusw0	equ	0xFEB
  1626                           fsr0h	equ	0xFEA
  1627                           fsr0l	equ	0xFE9
  1628                           wreg	equ	0xFE8
  1629                           indf1	equ	0xFE7
  1630                           postinc1	equ	0xFE6
  1631                           postdec1	equ	0xFE5
  1632                           preinc1	equ	0xFE4
  1633                           plusw1	equ	0xFE3
  1634                           fsr1h	equ	0xFE2
  1635                           fsr1l	equ	0xFE1
  1636                           bsr	equ	0xFE0
  1637                           indf2	equ	0xFDF
  1638                           postinc2	equ	0xFDE
  1639                           postdec2	equ	0xFDD
  1640                           preinc2	equ	0xFDC
  1641                           plusw2	equ	0xFDB
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        4
    BSS         256
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      21
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[20]), STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[20]), STR_1(CODE[17]), 

    flash_write_page@buffer	PTR unsigned char  size(2) Largest target is 256
		 -> flash_test_memory@buffer(BANK1[256]), STR_2(CODE[20]), STR_1(CODE[17]), 

    flash_read_page@buffer	PTR unsigned char  size(2) Largest target is 256
		 -> flash_test_memory@buffer(BANK1[256]), buffer(BANK1[256]), 

    UART_puts@str	PTR unsigned char  size(2) Largest target is 256
		 -> STR_8(CODE[24]), STR_7(CODE[6]), STR_6(CODE[7]), STR_5(CODE[6]), 
		 -> buffer(BANK1[256]), STR_4(CODE[7]), STR_3(CODE[19]), STR_2(CODE[20]), 
		 -> STR_1(CODE[17]), 

    msg2	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[20]), 

    msg1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_flash_write_page
    _flash_write_page->_flash_wait_ready
    _flash_write_page->_strlen
    _flash_wait_ready->_flash_read_status
    _flash_read_page->_strlen
    _flash_check_present->_flash_read_status
    _flash_read_status->_SPI_Tx
    _UART_puts->_UART_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3117
                           _SPI_Init
                          _UART_Init
                          _UART_puts
                _flash_check_present
                    _flash_read_page
                   _flash_write_page
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _flash_write_page                                    13     4      9    1069
                                              4 COMRAM    13     4      9
                       _SPI_Deselect
                         _SPI_Select
                             _SPI_Tx
                   _flash_wait_ready
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _flash_wait_ready                                     1     1      0      30
                                              3 COMRAM     1     1      0
                  _flash_read_status
 ---------------------------------------------------------------------------------
 (1) _flash_read_page                                     12     4      8     789
                                              4 COMRAM    12     4      8
                       _SPI_Deselect
                             _SPI_Rx
                         _SPI_Select
                             _SPI_Tx
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _flash_check_present                                  1     1      0      45
                                              3 COMRAM     1     1      0
                  _flash_read_status
 ---------------------------------------------------------------------------------
 (3) _flash_read_status                                    1     1      0      30
                                              2 COMRAM     1     1      0
                       _SPI_Deselect
                             _SPI_Rx
                         _SPI_Select
                             _SPI_Tx
 ---------------------------------------------------------------------------------
 (4) _SPI_Tx                                               2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SPI_Select                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_Rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_Deselect                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_puts                                            2     0      2     820
                                              1 COMRAM     2     0      2
                         _UART_putch
 ---------------------------------------------------------------------------------
 (2) _UART_putch                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
   _UART_Init
   _UART_puts
     _UART_putch
   _flash_check_present
     _flash_read_status
       _SPI_Deselect
       _SPI_Rx
       _SPI_Select
       _SPI_Tx
   _flash_read_page
     _SPI_Deselect
     _SPI_Rx
     _SPI_Select
     _SPI_Tx
     _strlen (ARG)
   _flash_write_page
     _SPI_Deselect
     _SPI_Select
     _SPI_Tx
     _flash_wait_ready
       _flash_read_status
         _SPI_Deselect
         _SPI_Rx
         _SPI_Select
         _SPI_Tx
     _strlen (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      15       1       22.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      15        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Sep 07 00:09:37 2019

                  _SPI_Select 0A70       flash_read_status@status 0003                   _SSPSTATbits 000FC7  
                          l33 07C0                            l62 0A68                            l56 0A80  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l164 0A54                           l905 0A56  
                         l941 0A08                           l899 0A96                  __CFG_CPB$OFF 000000  
                         u320 0958                           u400 0878                           u330 0980  
                         u410 08BC                           u420 08E4                           u405 086E  
                         u327 094E                           u415 08B2                           u360 0800  
                         u337 0976                           u425 08DA                  __CFG_CPD$OFF 000000  
                         u390 0850                           u367 07F6                           u395 0846  
                __CFG_BORV$18 000000                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                        l1223 0928                          l1153 0960                          l1217 0910  
                        l1149 0938                          l1181 080E                          l1157 09D0  
                        l1191 0832                          l1175 07E0                          l1159 09D4  
                        l1255 07B4                          l1189 082C                          STR_1 0640  
                        STR_2 0619                          STR_3 062D                          STR_4 0651  
                        STR_5 0658                          STR_6 0651                          STR_7 0658  
                        STR_8 0601                          _main 0660                          _msg1 0014  
                        _msg2 0012                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        start 0000                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000                         ?_main 0001                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000            __size_of_UART_Init 0016                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
          __size_of_UART_puts 0052                   ?_UART_putch 0001              __end_of_SPI_Init 0A3C  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000               __initialization 0988  
                 ?_SPI_Select 0001                  __end_of_main 07C2     __size_of_flash_wait_ready 0010  
                      ??_main 0012                 __activetblptr 000002                        _ANSELH 000F7F  
              __CFG_WDTEN$OFF 000000                        _OSCCON 000FD3                        _SSPBUF 000FC9  
                      _SPI_Rx 0A7C                        _SPI_Tx 0A62                __CFG_XINST$OFF 000000  
 flash_write_page@erase_first 000D             __end_of_UART_Init 0A52                __CFG_STVREN$ON 000000  
           __end_of_UART_puts 0988                        _buffer 0100           __size_of_UART_putch 000C  
                      clear_0 09B0     __size_of_flash_write_page 00D2  __size_of_flash_check_present 0018  
                      _strlen 09C6                  __pdataCOMRAM 0012         flash_read_page@buffer 0009  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8           __size_of_SPI_Select 000C      __size_of_flash_read_page 00A2  
                  __accesstop 0060       __end_of__initialization 09BC                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                     ?_SPI_Init 0001                    __pbssBANK1 0100  
                     ?_SPI_Rx 0001                       ?_SPI_Tx 0001        flash_write_page@buffer 0009  
            _flash_wait_ready 0A52                    ??_SPI_Init 0001                       ?_strlen 0001  
                ??_UART_putch 0001               __size_of_SPI_Rx 000C               __size_of_SPI_Tx 000E  
                     __Hparam 0000             ??_flash_read_page 000D                       __Lparam 0000  
                ??_SPI_Select 0001                  __psmallconst 0600              _flash_write_page 07C2  
                     __pcinit 0988            __end_of_UART_putch 0AA0                       __ramtop 0600  
                     __ptext0 0660                       __ptext1 09C6                       __ptext2 07C2  
                     __ptext3 0A52                       __ptext4 0894                       __ptext5 09F4  
                     __ptext6 0A0C                       __ptext7 0A62                       __ptext8 0A70  
                     __ptext9 0A7C               __size_of_strlen 002E          end_of_initialization 09BC  
          __end_of_SPI_Select 0A7C           _flash_check_present 09F4                 __Lmediumconst 0000  
      flash_read_page@address 0005                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       strlen@a 0003                       strlen@s 0001  
                   _UART_Init 0A3C          ?_flash_check_present 0001                     _UART_puts 0936  
                   _TRISAbits 000F92                     _TRISCbits 000F94                 ?_SPI_Deselect 0001  
                   _TXSTAbits 000FAC                __end_of_SPI_Rx 0A88                __end_of_SPI_Tx 0A70  
       ??_flash_check_present 0004                   _BAUDCONbits 000FB8                    ?_UART_Init 0001  
               __pidataCOMRAM 0AA0                    ?_UART_puts 0002             __size_of_SPI_Init 0018  
              __end_of_strlen 09F4           start_initialization 0988             _flash_read_status 0A0C  
              ??_SPI_Deselect 0001      __end_of_flash_wait_ready 0A62            ?_flash_read_status 0001  
                    ??_SPI_Rx 0001                      ??_SPI_Tx 0001           ??_flash_read_status 0003  
            __CFG_LPT1OSC$OFF 000000                      ??_strlen 0003     __end_of_flash_read_status 0A24  
             _flash_read_page 0894      __end_of_flash_write_page 0894       flash_write_page@address 0005  
           __CFG_CCP2MX$PORTC 000000                   ??_UART_Init 0001                   ??_UART_puts 0004  
                 __smallconst 0600                      _LATAbits 000F89                      _PIR1bits 000F9E  
            __CFG_WDTPS$32768 000000          __end_of_SPI_Deselect 0A94                      _SPI_Init 0A24  
     __end_of_flash_read_page 0936    __size_of_flash_read_status 0018                     copy_data0 099C  
                  SPI_Tx@data 0002                      __Hrparam 0000                      __Lrparam 0000  
                    __ptext10 0A88                      __ptext11 0936                      __ptext12 0A94  
                    __ptext13 0A3C                      __ptext14 0A24             ?_flash_wait_ready 0001  
               __size_of_main 0162            ??_flash_wait_ready 0004   __end_of_flash_check_present 0A0C  
            ?_flash_read_page 0005            flash_read_page@len 000B           flash_write_page@len 000B  
           ?_flash_write_page 0005            ??_flash_write_page 000E                  UART_putch@ch 0001  
                UART_puts@str 0002         __size_of_SPI_Deselect 000C       flash_check_present@data 0004  
                 _SSPCON1bits 000FC6                    _UART_putch 0A94                  _SPI_Deselect 0A88  
           __CFG_FOSC$INTIO67 000000  
